<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<FunctionDepGraph>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.common.BooleanProperty</srcNode>
<endNode>freemind.common.PropertyBean</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.common.BooleanProperty</srcNode>
<endNode>freemind.common.PropertyControl</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.common.BooleanProperty</srcNode>
<endNode>freemind.common.TextTranslator</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.common.BooleanProperty.BooleanProperty.(Anon_1)</srcNode>
<endNode>freemind.common.PropertyBean</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.common.ColorProperty</srcNode>
<endNode>freemind.common.PropertyBean</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.common.ColorProperty</srcNode>
<endNode>freemind.common.PropertyControl</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.common.ColorProperty</srcNode>
<endNode>freemind.common.TextTranslator</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.common.ColorProperty</srcNode>
<endNode>freemind.controller.Controller</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.common.ColorProperty</srcNode>
<endNode>freemind.main.Tools</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.common.ColorProperty.layout.(Anon_1)</srcNode>
<endNode>freemind.common.ColorProperty</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.common.ColorProperty.layout.(Anon_2)</srcNode>
<endNode>freemind.common.ColorProperty</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.common.ComboProperty</srcNode>
<endNode>freemind.common.PropertyBean</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.common.ComboProperty</srcNode>
<endNode>freemind.common.PropertyControl</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.common.ComboProperty</srcNode>
<endNode>freemind.common.TextTranslator</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.common.ComboProperty.ComboProperty.(Anon_1)</srcNode>
<endNode>freemind.common.PropertyBean</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.common.DontShowNotificationProperty</srcNode>
<endNode>freemind.common.BooleanProperty</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.common.FontProperty</srcNode>
<endNode>freemind.common.PropertyBean</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.common.FontProperty</srcNode>
<endNode>freemind.common.PropertyControl</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.common.FontProperty</srcNode>
<endNode>freemind.common.TextTranslator</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.common.FontProperty.FontProperty.(Anon_1)</srcNode>
<endNode>freemind.common.PropertyBean</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.common.FreeMindProgressMonitor</srcNode>
<endNode>freemind.common.XmlBindingTools</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.common.FreeMindProgressMonitor</srcNode>
<endNode>freemind.main.Resources</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.common.FreeMindProgressMonitor</srcNode>
<endNode>freemind.main.Tools</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.common.FreeMindProgressMonitor.FreeMindProgressMonitor.(Anon_1)</srcNode>
<endNode>freemind.common.FreeMindProgressMonitor</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.common.FreeMindProgressMonitor.setProgress.(Anon_4)</srcNode>
<endNode>freemind.common.FreeMindProgressMonitor</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.common.FreeMindProgressMonitor.showProgress.(Anon_2)</srcNode>
<endNode>freemind.common.FreeMindProgressMonitor</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.common.FreeMindProgressMonitor.showProgress.(Anon_3)</srcNode>
<endNode>freemind.common.FreeMindProgressMonitor</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.common.FreeMindTask</srcNode>
<endNode>freemind.common.FreeMindProgressMonitor</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.common.FreeMindTask</srcNode>
<endNode>freemind.common.FreeMindTask.ProgressDescription</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.common.FreeMindTask</srcNode>
<endNode>freemind.main.Resources</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.common.FreeMindTask.run.(Anon_4)</srcNode>
<endNode>freemind.common.FreeMindTask</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.common.FreeMindTask.run.(Anon_5)</srcNode>
<endNode>freemind.common.FreeMindProgressMonitor</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.common.FreeMindTask.run.(Anon_5)</srcNode>
<endNode>freemind.common.FreeMindTask</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.common.IconProperty</srcNode>
<endNode>freemind.common.PropertyBean</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.common.IconProperty</srcNode>
<endNode>freemind.common.PropertyControl</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.common.IconProperty</srcNode>
<endNode>freemind.common.TextTranslator</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.common.IconProperty</srcNode>
<endNode>freemind.main.FreeMindMain</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.common.IconProperty</srcNode>
<endNode>freemind.modes.common.dialogs.IconSelectionPopupDialog</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.common.IconProperty</srcNode>
<endNode>freemind.modes.MindIcon</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.common.NextLineProperty</srcNode>
<endNode>freemind.common.PropertyControl</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.common.NextLineProperty</srcNode>
<endNode>freemind.common.TextTranslator</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.common.NumberProperty</srcNode>
<endNode>freemind.common.PropertyBean</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.common.NumberProperty</srcNode>
<endNode>freemind.common.PropertyControl</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.common.NumberProperty</srcNode>
<endNode>freemind.common.TextTranslator</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.common.NumberProperty</srcNode>
<endNode>freemind.main.Resources</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.common.NumberProperty.NumberProperty.(Anon_1)</srcNode>
<endNode>freemind.common.PropertyBean</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.common.OptionalDontShowMeAgainDialog</srcNode>
<endNode>freemind.common.OptionalDontShowMeAgainDialog.DontShowPropertyHandler</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.common.OptionalDontShowMeAgainDialog</srcNode>
<endNode>freemind.common.TextTranslator</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.common.OptionalDontShowMeAgainDialog</srcNode>
<endNode>freemind.main.Resources</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.common.OptionalDontShowMeAgainDialog</srcNode>
<endNode>freemind.main.Tools</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.common.OptionalDontShowMeAgainDialog.show.(Anon_1)</srcNode>
<endNode>freemind.common.OptionalDontShowMeAgainDialog</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.common.OptionalDontShowMeAgainDialog.show.(Anon_2)</srcNode>
<endNode>freemind.common.OptionalDontShowMeAgainDialog</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.common.OptionalDontShowMeAgainDialog.show.(Anon_3)</srcNode>
<endNode>freemind.common.OptionalDontShowMeAgainDialog</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.common.OptionalDontShowMeAgainDialog.StandardPropertyHandler</srcNode>
<endNode>freemind.common.OptionalDontShowMeAgainDialog.DontShowPropertyHandler</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.common.OptionalDontShowMeAgainDialog.StandardPropertyHandler</srcNode>
<endNode>freemind.controller.Controller</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.common.PasswordProperty</srcNode>
<endNode>freemind.common.StringProperty</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.common.PasswordProperty</srcNode>
<endNode>freemind.main.Tools</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.common.PropertyControl</srcNode>
<endNode>freemind.common.TextTranslator</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.common.RemindValueProperty</srcNode>
<endNode>freemind.common.TextTranslator</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.common.RemindValueProperty</srcNode>
<endNode>freemind.common.ThreeCheckBoxProperty</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.common.ScriptEditorProperty</srcNode>
<endNode>freemind.common.PropertyBean</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.common.ScriptEditorProperty</srcNode>
<endNode>freemind.common.PropertyControl</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.common.ScriptEditorProperty</srcNode>
<endNode>freemind.common.ScriptEditorProperty.ScriptEditorStarter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.common.ScriptEditorProperty</srcNode>
<endNode>freemind.common.TextTranslator</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.common.ScriptEditorProperty</srcNode>
<endNode>freemind.main.FreeMindMain</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.common.ScriptEditorProperty</srcNode>
<endNode>freemind.main.HtmlTools</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.common.ScriptEditorProperty</srcNode>
<endNode>freemind.modes.ControllerAdapter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.common.ScriptEditorProperty</srcNode>
<endNode>freemind.modes.mindmapmode.MindMapController</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.common.ScriptEditorProperty</srcNode>
<endNode>freemind.modes.mindmapmode.MindMapController.MindMapControllerPlugin</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.common.ScriptEditorProperty.ScriptEditorStarter</srcNode>
<endNode>freemind.modes.mindmapmode.MindMapController.MindMapControllerPlugin</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.common.SeparatorProperty</srcNode>
<endNode>freemind.common.PropertyControl</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.common.SeparatorProperty</srcNode>
<endNode>freemind.common.TextTranslator</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.common.StringProperty</srcNode>
<endNode>freemind.common.PropertyBean</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.common.StringProperty</srcNode>
<endNode>freemind.common.PropertyControl</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.common.StringProperty</srcNode>
<endNode>freemind.common.TextTranslator</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.common.StringProperty.StringProperty.(Anon_1)</srcNode>
<endNode>freemind.common.PropertyBean</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.common.ThreeCheckBoxProperty</srcNode>
<endNode>freemind.common.PropertyBean</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.common.ThreeCheckBoxProperty</srcNode>
<endNode>freemind.common.PropertyControl</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.common.ThreeCheckBoxProperty</srcNode>
<endNode>freemind.common.TextTranslator</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.common.ThreeCheckBoxProperty</srcNode>
<endNode>freemind.controller.BlindIcon</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.common.ThreeCheckBoxProperty</srcNode>
<endNode>freemind.main.Resources</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.common.ThreeCheckBoxProperty.ThreeCheckBoxProperty.(Anon_1)</srcNode>
<endNode>freemind.common.PropertyBean</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.common.ThreeCheckBoxProperty.ThreeCheckBoxProperty.(Anon_1)</srcNode>
<endNode>freemind.common.ThreeCheckBoxProperty</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.common.XmlBindingTools</srcNode>
<endNode>freemind.controller.Controller</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.common.XmlBindingTools</srcNode>
<endNode>freemind.main.Resources</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.Controller</srcNode>
<endNode>freemind.common.BooleanProperty</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.Controller</srcNode>
<endNode>freemind.controller.Controller.AboutAction</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.Controller</srcNode>
<endNode>freemind.controller.Controller.BackgroundSwatch</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.Controller</srcNode>
<endNode>freemind.controller.Controller.CloseAction</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.Controller</srcNode>
<endNode>freemind.controller.Controller.Closer</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.Controller</srcNode>
<endNode>freemind.controller.Controller.ColorTracker</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.Controller</srcNode>
<endNode>freemind.controller.Controller.DefaultLocalLinkConverter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.Controller</srcNode>
<endNode>freemind.controller.Controller.DisposeOnClose</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.Controller</srcNode>
<endNode>freemind.controller.Controller.DocumentationAction</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.Controller</srcNode>
<endNode>freemind.controller.Controller.HideAllAttributesAction</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.Controller</srcNode>
<endNode>freemind.controller.Controller.KeyDocumentationAction</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.Controller</srcNode>
<endNode>freemind.controller.Controller.LicenseAction</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.Controller</srcNode>
<endNode>freemind.controller.Controller.LocalLinkConverter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.Controller</srcNode>
<endNode>freemind.controller.Controller.MoveToRootAction</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.Controller</srcNode>
<endNode>freemind.controller.Controller.NavigationMoveMapLeftAction</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.Controller</srcNode>
<endNode>freemind.controller.Controller.NavigationMoveMapRightAction</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.Controller</srcNode>
<endNode>freemind.controller.Controller.NavigationNextMapAction</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.Controller</srcNode>
<endNode>freemind.controller.Controller.NavigationPreviousMapAction</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.Controller</srcNode>
<endNode>freemind.controller.Controller.OpenURLAction</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.Controller</srcNode>
<endNode>freemind.controller.Controller.OptionAntialiasAction</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.Controller</srcNode>
<endNode>freemind.controller.Controller.OptionHTMLExportFoldingAction</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.Controller</srcNode>
<endNode>freemind.controller.Controller.OptionSelectionMechanismAction</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.Controller</srcNode>
<endNode>freemind.controller.Controller.PageAction</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.Controller</srcNode>
<endNode>freemind.controller.Controller.PrintAction</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.Controller</srcNode>
<endNode>freemind.controller.Controller.PrintPreviewAction</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.Controller</srcNode>
<endNode>freemind.controller.Controller.PropertyAction</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.Controller</srcNode>
<endNode>freemind.controller.Controller.QuitAction</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.Controller</srcNode>
<endNode>freemind.controller.Controller.ShowAllAttributesAction</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.Controller</srcNode>
<endNode>freemind.controller.Controller.ShowAttributeDialogAction</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.Controller</srcNode>
<endNode>freemind.controller.Controller.ShowFilterToolbarAction</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.Controller</srcNode>
<endNode>freemind.controller.Controller.ShowSelectedAttributesAction</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.Controller</srcNode>
<endNode>freemind.controller.Controller.ShowSelectionAsRectangleAction</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.Controller</srcNode>
<endNode>freemind.controller.Controller.ToggleLeftToolbarAction</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.Controller</srcNode>
<endNode>freemind.controller.Controller.ToggleMenubarAction</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.Controller</srcNode>
<endNode>freemind.controller.Controller.ToggleToolbarAction</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.Controller</srcNode>
<endNode>freemind.controller.Controller.ZoomInAction</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.Controller</srcNode>
<endNode>freemind.controller.Controller.ZoomOutAction</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.Controller</srcNode>
<endNode>freemind.controller.filter.FilterController</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.Controller</srcNode>
<endNode>freemind.controller.LastOpenedList</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.Controller</srcNode>
<endNode>freemind.controller.LastStateStorageManagement</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.Controller</srcNode>
<endNode>freemind.controller.MainToolBar</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.Controller</srcNode>
<endNode>freemind.controller.MapModuleManager</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.Controller</srcNode>
<endNode>freemind.controller.MapModuleManager.MapModuleChangeObserver</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.Controller</srcNode>
<endNode>freemind.controller.MapModuleManager.MapTitleChangeListener</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.Controller</srcNode>
<endNode>freemind.controller.MapModuleManager.MapTitleContributor</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.Controller</srcNode>
<endNode>freemind.controller.MapMouseMotionListener</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.Controller</srcNode>
<endNode>freemind.controller.MapMouseWheelListener</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.Controller</srcNode>
<endNode>freemind.controller.MenuBar</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.Controller</srcNode>
<endNode>freemind.controller.NodeDragListener</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.Controller</srcNode>
<endNode>freemind.controller.NodeDropListener</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.Controller</srcNode>
<endNode>freemind.controller.NodeKeyListener</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.Controller</srcNode>
<endNode>freemind.controller.NodeMotionListener</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.Controller</srcNode>
<endNode>freemind.controller.NodeMouseMotionListener</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.Controller</srcNode>
<endNode>freemind.controller.ZoomListener</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.Controller</srcNode>
<endNode>freemind.main.FreeMind</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.Controller</srcNode>
<endNode>freemind.main.FreeMindCommon</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.Controller</srcNode>
<endNode>freemind.main.FreeMindMain</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.Controller</srcNode>
<endNode>freemind.main.Resources</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.Controller</srcNode>
<endNode>freemind.main.Tools</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.Controller</srcNode>
<endNode>freemind.modes.attributes.AttributeTableLayoutModel</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.Controller</srcNode>
<endNode>freemind.modes.MindMap</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.Controller</srcNode>
<endNode>freemind.modes.mindmapmode.attributeactors.AttributeManagerDialog</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.Controller</srcNode>
<endNode>freemind.modes.Mode</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.Controller</srcNode>
<endNode>freemind.modes.ModeController</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.Controller</srcNode>
<endNode>freemind.modes.ModesCreator</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.Controller</srcNode>
<endNode>freemind.preferences.FreemindPropertyListener</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.Controller</srcNode>
<endNode>freemind.view.MapModule</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.Controller</srcNode>
<endNode>freemind.view.mindmapview.MapView</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.Controller.AboutAction</srcNode>
<endNode>freemind.controller.Controller</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.Controller.AboutAction</srcNode>
<endNode>freemind.main.FreeMindMain</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.Controller.addTabbedPane.(Anon_10)</srcNode>
<endNode>freemind.controller.Controller</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.Controller.addTabbedPane.(Anon_10)</srcNode>
<endNode>freemind.controller.MapModuleManager.MapTitleChangeListener</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.Controller.addTabbedPane.(Anon_10)</srcNode>
<endNode>freemind.modes.MindMap</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.Controller.addTabbedPane.(Anon_10)</srcNode>
<endNode>freemind.view.MapModule</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.Controller.addTabbedPane.(Anon_8)</srcNode>
<endNode>freemind.controller.Controller</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.Controller.addTabbedPane.(Anon_9)</srcNode>
<endNode>freemind.controller.Controller</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.Controller.addTabbedPane.(Anon_9)</srcNode>
<endNode>freemind.controller.MapModuleManager.MapModuleChangeObserver</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.Controller.addTabbedPane.(Anon_9)</srcNode>
<endNode>freemind.modes.Mode</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.Controller.addTabbedPane.(Anon_9)</srcNode>
<endNode>freemind.view.MapModule</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.Controller.BackgroundSwatch</srcNode>
<endNode>freemind.controller.ColorSwatch</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.Controller.BackgroundSwatch</srcNode>
<endNode>freemind.controller.Controller</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.Controller.CloseAction</srcNode>
<endNode>freemind.controller.Controller</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.Controller.CloseAction</srcNode>
<endNode>freemind.main.Tools</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.Controller.DefaultLocalLinkConverter</srcNode>
<endNode>freemind.controller.Controller</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.Controller.DefaultLocalLinkConverter</srcNode>
<endNode>freemind.controller.Controller.LocalLinkConverter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.Controller.DefaultLocalLinkConverter</srcNode>
<endNode>freemind.main.FreeMindMain</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.Controller.DefaultLocalLinkConverter</srcNode>
<endNode>freemind.main.Tools</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.Controller.DocumentationAction</srcNode>
<endNode>freemind.controller.Controller</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.Controller.DocumentationAction</srcNode>
<endNode>freemind.controller.Controller.LocalLinkConverter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.Controller.DocumentationAction</srcNode>
<endNode>freemind.main.FreeMindMain</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.Controller.DocumentationAction</srcNode>
<endNode>freemind.main.Resources</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.Controller.DocumentationAction</srcNode>
<endNode>freemind.main.Tools</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.Controller.DocumentationAction.actionPerformed.(Anon_4)</srcNode>
<endNode>freemind.controller.Controller</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.Controller.DocumentationAction.actionPerformed.(Anon_4)</srcNode>
<endNode>freemind.controller.Controller.DocumentationAction</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.Controller.DocumentationAction.actionPerformed.(Anon_4)</srcNode>
<endNode>freemind.main.Resources</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.Controller.DocumentationAction.actionPerformed.(Anon_4)</srcNode>
<endNode>freemind.modes.browsemode.BrowseMode</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.Controller.DocumentationAction.actionPerformed.(Anon_4)</srcNode>
<endNode>freemind.modes.ModeController</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.Controller.HideAllAttributesAction</srcNode>
<endNode>freemind.controller.Controller</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.Controller.HideAllAttributesAction</srcNode>
<endNode>freemind.main.Resources</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.Controller.HideAllAttributesAction</srcNode>
<endNode>freemind.modes.attributes.AttributeRegistry</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.Controller.HideAllAttributesAction</srcNode>
<endNode>freemind.modes.attributes.AttributeTableLayoutModel</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.Controller.HideAllAttributesAction</srcNode>
<endNode>freemind.modes.MapRegistry</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.Controller.HideAllAttributesAction</srcNode>
<endNode>freemind.modes.MindMap</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.Controller.initialization.(Anon_1)</srcNode>
<endNode>freemind.controller.Controller</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.Controller.initialization.(Anon_1)</srcNode>
<endNode>freemind.main.FreeMindMain</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.Controller.KeyDocumentationAction</srcNode>
<endNode>freemind.controller.Controller</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.Controller.KeyDocumentationAction</srcNode>
<endNode>freemind.controller.Controller.LocalLinkConverter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.Controller.KeyDocumentationAction</srcNode>
<endNode>freemind.main.FreeMindMain</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.Controller.KeyDocumentationAction</srcNode>
<endNode>freemind.main.Resources</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.Controller.KeyDocumentationAction</srcNode>
<endNode>freemind.main.Tools</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.Controller.LicenseAction</srcNode>
<endNode>freemind.controller.Controller</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.Controller.MoveToRootAction</srcNode>
<endNode>freemind.controller.Controller</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.Controller.NavigationMoveMapLeftAction</srcNode>
<endNode>freemind.controller.Controller</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.Controller.NavigationMoveMapRightAction</srcNode>
<endNode>freemind.controller.Controller</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.Controller.NavigationNextMapAction</srcNode>
<endNode>freemind.controller.Controller</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.Controller.NavigationNextMapAction</srcNode>
<endNode>freemind.controller.MapModuleManager</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.Controller.NavigationPreviousMapAction</srcNode>
<endNode>freemind.controller.Controller</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.Controller.NavigationPreviousMapAction</srcNode>
<endNode>freemind.controller.MapModuleManager</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.Controller.OpenURLAction</srcNode>
<endNode>freemind.controller.Controller</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.Controller.OpenURLAction</srcNode>
<endNode>freemind.main.FreeMindMain</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.Controller.OptionAntialiasAction</srcNode>
<endNode>freemind.controller.Controller</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.Controller.OptionAntialiasAction</srcNode>
<endNode>freemind.main.FreeMindCommon</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.Controller.OptionAntialiasAction</srcNode>
<endNode>freemind.preferences.FreemindPropertyListener</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.Controller.OptionHTMLExportFoldingAction</srcNode>
<endNode>freemind.controller.Controller</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.Controller.OptionSelectionMechanismAction</srcNode>
<endNode>freemind.controller.Controller</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.Controller.OptionSelectionMechanismAction</srcNode>
<endNode>freemind.controller.NodeMouseMotionListener</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.Controller.OptionSelectionMechanismAction</srcNode>
<endNode>freemind.main.FreeMind</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.Controller.OptionSelectionMechanismAction</srcNode>
<endNode>freemind.main.FreeMindMain</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.Controller.OptionSelectionMechanismAction</srcNode>
<endNode>freemind.preferences.FreemindPropertyListener</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.Controller.PageAction</srcNode>
<endNode>freemind.controller.Controller</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.Controller.PageAction</srcNode>
<endNode>freemind.main.Resources</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.Controller.PageAction</srcNode>
<endNode>freemind.main.Tools</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.Controller.PageAction</srcNode>
<endNode>freemind.main.Tools.IntHolder</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.Controller.PageAction.actionPerformed.(Anon_2)</srcNode>
<endNode>freemind.main.Tools.IntHolder</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.Controller.PrintAction</srcNode>
<endNode>freemind.controller.Controller</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.Controller.PrintAction</srcNode>
<endNode>freemind.main.FreeMindMain</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.Controller.PrintAction</srcNode>
<endNode>freemind.main.Resources</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.Controller.PrintPreviewAction</srcNode>
<endNode>freemind.controller.Controller</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.Controller.PrintPreviewAction</srcNode>
<endNode>freemind.controller.printpreview.PreviewDialog</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.Controller.PropertyAction</srcNode>
<endNode>freemind.controller.Controller</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.Controller.PropertyAction</srcNode>
<endNode>freemind.main.FreeMind</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.Controller.PropertyAction</srcNode>
<endNode>freemind.main.FreeMindMain</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.Controller.PropertyAction</srcNode>
<endNode>freemind.main.Tools</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.Controller.PropertyAction</srcNode>
<endNode>freemind.preferences.layout.OptionPanel</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.Controller.PropertyAction.actionPerformed.(Anon_5)</srcNode>
<endNode>freemind.controller.Controller</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.Controller.PropertyAction.actionPerformed.(Anon_5)</srcNode>
<endNode>freemind.controller.Controller.PropertyAction</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.Controller.PropertyAction.actionPerformed.(Anon_5)</srcNode>
<endNode>freemind.main.FreeMindMain</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.Controller.PropertyAction.actionPerformed.(Anon_5)</srcNode>
<endNode>freemind.preferences.layout.OptionPanel.OptionPanelFeedback</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.Controller.PropertyAction.actionPerformed.(Anon_6)</srcNode>
<endNode>freemind.preferences.layout.OptionPanel</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.Controller.PropertyAction.actionPerformed.(Anon_7)</srcNode>
<endNode>freemind.preferences.layout.OptionPanel</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.Controller.QuitAction</srcNode>
<endNode>freemind.controller.Controller</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.Controller.ShowAllAttributesAction</srcNode>
<endNode>freemind.controller.Controller</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.Controller.ShowAllAttributesAction</srcNode>
<endNode>freemind.main.Resources</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.Controller.ShowAllAttributesAction</srcNode>
<endNode>freemind.modes.attributes.AttributeRegistry</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.Controller.ShowAllAttributesAction</srcNode>
<endNode>freemind.modes.attributes.AttributeTableLayoutModel</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.Controller.ShowAllAttributesAction</srcNode>
<endNode>freemind.modes.MapRegistry</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.Controller.ShowAllAttributesAction</srcNode>
<endNode>freemind.modes.MindMap</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.Controller.ShowAttributeDialogAction</srcNode>
<endNode>freemind.controller.Controller</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.Controller.ShowAttributeDialogAction</srcNode>
<endNode>freemind.modes.mindmapmode.attributeactors.AttributeManagerDialog</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.Controller.ShowFilterToolbarAction</srcNode>
<endNode>freemind.controller.Controller</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.Controller.ShowFilterToolbarAction</srcNode>
<endNode>freemind.controller.filter.FilterController</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.Controller.ShowSelectedAttributesAction</srcNode>
<endNode>freemind.controller.Controller</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.Controller.ShowSelectedAttributesAction</srcNode>
<endNode>freemind.main.Resources</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.Controller.ShowSelectedAttributesAction</srcNode>
<endNode>freemind.modes.attributes.AttributeRegistry</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.Controller.ShowSelectedAttributesAction</srcNode>
<endNode>freemind.modes.attributes.AttributeTableLayoutModel</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.Controller.ShowSelectedAttributesAction</srcNode>
<endNode>freemind.modes.MapRegistry</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.Controller.ShowSelectedAttributesAction</srcNode>
<endNode>freemind.modes.MindMap</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.Controller.ShowSelectionAsRectangleAction</srcNode>
<endNode>freemind.controller.Controller</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.Controller.ShowSelectionAsRectangleAction</srcNode>
<endNode>freemind.controller.MenuItemSelectedListener</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.Controller.ToggleLeftToolbarAction</srcNode>
<endNode>freemind.controller.Controller</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.Controller.ToggleLeftToolbarAction</srcNode>
<endNode>freemind.controller.MenuItemSelectedListener</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.Controller.ToggleMenubarAction</srcNode>
<endNode>freemind.controller.Controller</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.Controller.ToggleMenubarAction</srcNode>
<endNode>freemind.controller.MenuItemSelectedListener</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.Controller.ToggleToolbarAction</srcNode>
<endNode>freemind.controller.Controller</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.Controller.ToggleToolbarAction</srcNode>
<endNode>freemind.controller.MenuItemSelectedListener</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.Controller.ZoomInAction</srcNode>
<endNode>freemind.controller.Controller</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.Controller.ZoomInAction</srcNode>
<endNode>freemind.view.mindmapview.MapView</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.Controller.ZoomOutAction</srcNode>
<endNode>freemind.controller.Controller</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.Controller.ZoomOutAction</srcNode>
<endNode>freemind.view.mindmapview.MapView</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.filter.condition.AttributeCompareCondition</srcNode>
<endNode>freemind.controller.Controller</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.filter.condition.AttributeCompareCondition</srcNode>
<endNode>freemind.controller.filter.condition.CompareConditionAdapter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.filter.condition.AttributeCompareCondition</srcNode>
<endNode>freemind.controller.filter.condition.Condition</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.filter.condition.AttributeCompareCondition</srcNode>
<endNode>freemind.main.Tools</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.filter.condition.AttributeCompareCondition</srcNode>
<endNode>freemind.main.XMLElement</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.filter.condition.AttributeCompareCondition</srcNode>
<endNode>freemind.modes.attributes.AttributeTableModel</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.filter.condition.AttributeCompareCondition</srcNode>
<endNode>freemind.modes.MindMapNode</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.filter.condition.AttributeExistsCondition</srcNode>
<endNode>freemind.controller.Controller</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.filter.condition.AttributeExistsCondition</srcNode>
<endNode>freemind.controller.filter.condition.Condition</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.filter.condition.AttributeExistsCondition</srcNode>
<endNode>freemind.controller.filter.condition.ConditionFactory</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.filter.condition.AttributeExistsCondition</srcNode>
<endNode>freemind.controller.filter.condition.NodeCondition</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.filter.condition.AttributeExistsCondition</srcNode>
<endNode>freemind.main.Resources</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.filter.condition.AttributeExistsCondition</srcNode>
<endNode>freemind.main.XMLElement</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.filter.condition.AttributeExistsCondition</srcNode>
<endNode>freemind.modes.attributes.AttributeTableModel</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.filter.condition.AttributeExistsCondition</srcNode>
<endNode>freemind.modes.MindMapNode</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.filter.condition.AttributeNotExistsCondition</srcNode>
<endNode>freemind.controller.Controller</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.filter.condition.AttributeNotExistsCondition</srcNode>
<endNode>freemind.controller.filter.condition.Condition</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.filter.condition.AttributeNotExistsCondition</srcNode>
<endNode>freemind.controller.filter.condition.ConditionFactory</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.filter.condition.AttributeNotExistsCondition</srcNode>
<endNode>freemind.controller.filter.condition.NodeCondition</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.filter.condition.AttributeNotExistsCondition</srcNode>
<endNode>freemind.main.Resources</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.filter.condition.AttributeNotExistsCondition</srcNode>
<endNode>freemind.main.XMLElement</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.filter.condition.AttributeNotExistsCondition</srcNode>
<endNode>freemind.modes.attributes.AttributeTableModel</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.filter.condition.AttributeNotExistsCondition</srcNode>
<endNode>freemind.modes.MindMapNode</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.filter.condition.CompareConditionAdapter</srcNode>
<endNode>freemind.controller.filter.condition.ConditionFactory</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.filter.condition.CompareConditionAdapter</srcNode>
<endNode>freemind.controller.filter.condition.NodeCondition</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.filter.condition.CompareConditionAdapter</srcNode>
<endNode>freemind.main.Resources</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.filter.condition.CompareConditionAdapter</srcNode>
<endNode>freemind.main.Tools</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.filter.condition.CompareConditionAdapter</srcNode>
<endNode>freemind.main.XMLElement</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.filter.condition.Condition</srcNode>
<endNode>freemind.controller.Controller</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.filter.condition.Condition</srcNode>
<endNode>freemind.main.XMLElement</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.filter.condition.Condition</srcNode>
<endNode>freemind.modes.MindMapNode</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.filter.condition.ConditionFactory</srcNode>
<endNode>freemind.common.NamedObject</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.filter.condition.ConditionFactory</srcNode>
<endNode>freemind.controller.filter.condition.AttributeCompareCondition</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.filter.condition.ConditionFactory</srcNode>
<endNode>freemind.controller.filter.condition.AttributeExistsCondition</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.filter.condition.ConditionFactory</srcNode>
<endNode>freemind.controller.filter.condition.AttributeNotExistsCondition</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.filter.condition.ConditionFactory</srcNode>
<endNode>freemind.controller.filter.condition.Condition</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.filter.condition.ConditionFactory</srcNode>
<endNode>freemind.controller.filter.condition.ConditionNotSatisfiedDecorator</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.filter.condition.ConditionFactory</srcNode>
<endNode>freemind.controller.filter.condition.ConjunctConditions</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.filter.condition.ConditionFactory</srcNode>
<endNode>freemind.controller.filter.condition.DisjunctConditions</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.filter.condition.ConditionFactory</srcNode>
<endNode>freemind.controller.filter.condition.IconContainedCondition</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.filter.condition.ConditionFactory</srcNode>
<endNode>freemind.controller.filter.condition.IconNotContainedCondition</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.filter.condition.ConditionFactory</srcNode>
<endNode>freemind.controller.filter.condition.IgnoreCaseNodeContainsCondition</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.filter.condition.ConditionFactory</srcNode>
<endNode>freemind.controller.filter.condition.JCondition</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.filter.condition.ConditionFactory</srcNode>
<endNode>freemind.controller.filter.condition.NodeCompareCondition</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.filter.condition.ConditionFactory</srcNode>
<endNode>freemind.controller.filter.condition.NodeContainsCondition</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.filter.condition.ConditionFactory</srcNode>
<endNode>freemind.main.Resources</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.filter.condition.ConditionFactory</srcNode>
<endNode>freemind.main.XMLElement</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.filter.condition.ConditionNotSatisfiedDecorator</srcNode>
<endNode>freemind.controller.Controller</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.filter.condition.ConditionNotSatisfiedDecorator</srcNode>
<endNode>freemind.controller.filter.condition.Condition</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.filter.condition.ConditionNotSatisfiedDecorator</srcNode>
<endNode>freemind.controller.filter.condition.ConditionFactory</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.filter.condition.ConditionNotSatisfiedDecorator</srcNode>
<endNode>freemind.controller.filter.condition.JCondition</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.filter.condition.ConditionNotSatisfiedDecorator</srcNode>
<endNode>freemind.controller.filter.FilterController</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.filter.condition.ConditionNotSatisfiedDecorator</srcNode>
<endNode>freemind.main.Resources</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.filter.condition.ConditionNotSatisfiedDecorator</srcNode>
<endNode>freemind.main.Tools</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.filter.condition.ConditionNotSatisfiedDecorator</srcNode>
<endNode>freemind.main.XMLElement</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.filter.condition.ConditionNotSatisfiedDecorator</srcNode>
<endNode>freemind.modes.MindMapNode</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.filter.condition.ConditionRenderer</srcNode>
<endNode>freemind.controller.filter.condition.Condition</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.filter.condition.ConditionRenderer</srcNode>
<endNode>freemind.main.Resources</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.filter.condition.ConditionRenderer</srcNode>
<endNode>freemind.modes.MindIcon</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.filter.condition.ConjunctConditions</srcNode>
<endNode>freemind.controller.Controller</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.filter.condition.ConjunctConditions</srcNode>
<endNode>freemind.controller.filter.condition.Condition</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.filter.condition.ConjunctConditions</srcNode>
<endNode>freemind.controller.filter.condition.ConditionFactory</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.filter.condition.ConjunctConditions</srcNode>
<endNode>freemind.controller.filter.condition.JCondition</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.filter.condition.ConjunctConditions</srcNode>
<endNode>freemind.controller.filter.FilterController</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.filter.condition.ConjunctConditions</srcNode>
<endNode>freemind.main.Resources</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.filter.condition.ConjunctConditions</srcNode>
<endNode>freemind.main.Tools</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.filter.condition.ConjunctConditions</srcNode>
<endNode>freemind.main.XMLElement</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.filter.condition.ConjunctConditions</srcNode>
<endNode>freemind.modes.MindMapNode</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.filter.condition.DisjunctConditions</srcNode>
<endNode>freemind.controller.Controller</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.filter.condition.DisjunctConditions</srcNode>
<endNode>freemind.controller.filter.condition.Condition</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.filter.condition.DisjunctConditions</srcNode>
<endNode>freemind.controller.filter.condition.ConditionFactory</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.filter.condition.DisjunctConditions</srcNode>
<endNode>freemind.controller.filter.condition.JCondition</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.filter.condition.DisjunctConditions</srcNode>
<endNode>freemind.controller.filter.FilterController</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.filter.condition.DisjunctConditions</srcNode>
<endNode>freemind.main.Resources</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.filter.condition.DisjunctConditions</srcNode>
<endNode>freemind.main.Tools</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.filter.condition.DisjunctConditions</srcNode>
<endNode>freemind.main.XMLElement</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.filter.condition.DisjunctConditions</srcNode>
<endNode>freemind.modes.MindMapNode</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.filter.condition.IconContainedCondition</srcNode>
<endNode>freemind.controller.Controller</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.filter.condition.IconContainedCondition</srcNode>
<endNode>freemind.controller.filter.condition.Condition</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.filter.condition.IconContainedCondition</srcNode>
<endNode>freemind.controller.filter.condition.JCondition</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.filter.condition.IconContainedCondition</srcNode>
<endNode>freemind.main.Resources</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.filter.condition.IconContainedCondition</srcNode>
<endNode>freemind.main.XMLElement</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.filter.condition.IconContainedCondition</srcNode>
<endNode>freemind.modes.MindIcon</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.filter.condition.IconContainedCondition</srcNode>
<endNode>freemind.modes.MindMapNode</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.filter.condition.IconNotContainedCondition</srcNode>
<endNode>freemind.controller.Controller</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.filter.condition.IconNotContainedCondition</srcNode>
<endNode>freemind.controller.filter.condition.Condition</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.filter.condition.IconNotContainedCondition</srcNode>
<endNode>freemind.controller.filter.condition.JCondition</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.filter.condition.IconNotContainedCondition</srcNode>
<endNode>freemind.main.Resources</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.filter.condition.IconNotContainedCondition</srcNode>
<endNode>freemind.main.XMLElement</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.filter.condition.IconNotContainedCondition</srcNode>
<endNode>freemind.modes.MindIcon</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.filter.condition.IconNotContainedCondition</srcNode>
<endNode>freemind.modes.MindMapNode</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.filter.condition.IgnoreCaseNodeContainsCondition</srcNode>
<endNode>freemind.controller.Controller</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.filter.condition.IgnoreCaseNodeContainsCondition</srcNode>
<endNode>freemind.controller.filter.condition.Condition</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.filter.condition.IgnoreCaseNodeContainsCondition</srcNode>
<endNode>freemind.controller.filter.condition.ConditionFactory</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.filter.condition.IgnoreCaseNodeContainsCondition</srcNode>
<endNode>freemind.controller.filter.condition.NodeCondition</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.filter.condition.IgnoreCaseNodeContainsCondition</srcNode>
<endNode>freemind.main.Resources</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.filter.condition.IgnoreCaseNodeContainsCondition</srcNode>
<endNode>freemind.main.XMLElement</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.filter.condition.IgnoreCaseNodeContainsCondition</srcNode>
<endNode>freemind.modes.MindMapNode</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.filter.condition.NodeCompareCondition</srcNode>
<endNode>freemind.controller.Controller</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.filter.condition.NodeCompareCondition</srcNode>
<endNode>freemind.controller.filter.condition.CompareConditionAdapter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.filter.condition.NodeCompareCondition</srcNode>
<endNode>freemind.controller.filter.condition.Condition</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.filter.condition.NodeCompareCondition</srcNode>
<endNode>freemind.controller.filter.condition.ConditionFactory</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.filter.condition.NodeCompareCondition</srcNode>
<endNode>freemind.main.Resources</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.filter.condition.NodeCompareCondition</srcNode>
<endNode>freemind.main.Tools</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.filter.condition.NodeCompareCondition</srcNode>
<endNode>freemind.main.XMLElement</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.filter.condition.NodeCompareCondition</srcNode>
<endNode>freemind.modes.MindMapNode</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.filter.condition.NodeCondition</srcNode>
<endNode>freemind.controller.filter.condition.Condition</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.filter.condition.NodeCondition</srcNode>
<endNode>freemind.controller.filter.condition.ConditionFactory</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.filter.condition.NodeCondition</srcNode>
<endNode>freemind.main.XMLElement</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.filter.condition.NodeContainsCondition</srcNode>
<endNode>freemind.controller.Controller</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.filter.condition.NodeContainsCondition</srcNode>
<endNode>freemind.controller.filter.condition.Condition</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.filter.condition.NodeContainsCondition</srcNode>
<endNode>freemind.controller.filter.condition.ConditionFactory</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.filter.condition.NodeContainsCondition</srcNode>
<endNode>freemind.controller.filter.condition.NodeCondition</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.filter.condition.NodeContainsCondition</srcNode>
<endNode>freemind.main.Resources</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.filter.condition.NodeContainsCondition</srcNode>
<endNode>freemind.main.XMLElement</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.filter.condition.NodeContainsCondition</srcNode>
<endNode>freemind.modes.MindMapNode</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.filter.condition.NoFilteringCondition</srcNode>
<endNode>freemind.controller.Controller</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.filter.condition.NoFilteringCondition</srcNode>
<endNode>freemind.controller.filter.condition.Condition</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.filter.condition.NoFilteringCondition</srcNode>
<endNode>freemind.main.Resources</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.filter.condition.NoFilteringCondition</srcNode>
<endNode>freemind.main.XMLElement</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.filter.condition.NoFilteringCondition</srcNode>
<endNode>freemind.modes.MindMapNode</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.filter.condition.SelectedViewCondition</srcNode>
<endNode>freemind.controller.Controller</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.filter.condition.SelectedViewCondition</srcNode>
<endNode>freemind.controller.filter.condition.Condition</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.filter.condition.SelectedViewCondition</srcNode>
<endNode>freemind.controller.filter.condition.ConditionFactory</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.filter.condition.SelectedViewCondition</srcNode>
<endNode>freemind.main.Resources</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.filter.condition.SelectedViewCondition</srcNode>
<endNode>freemind.main.XMLElement</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.filter.condition.SelectedViewCondition</srcNode>
<endNode>freemind.modes.MindMapNode</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.filter.condition.SelectedViewCondition</srcNode>
<endNode>freemind.modes.ModeController</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.filter.condition.SelectedViewCondition</srcNode>
<endNode>freemind.view.mindmapview.NodeView</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.filter.DefaultFilter</srcNode>
<endNode>freemind.controller.Controller</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.filter.DefaultFilter</srcNode>
<endNode>freemind.controller.filter.condition.Condition</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.filter.DefaultFilter</srcNode>
<endNode>freemind.controller.filter.Filter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.filter.DefaultFilter</srcNode>
<endNode>freemind.controller.filter.FilterInfo</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.filter.DefaultFilter</srcNode>
<endNode>freemind.main.FreeMindMain</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.filter.DefaultFilter</srcNode>
<endNode>freemind.modes.MindMap</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.filter.DefaultFilter</srcNode>
<endNode>freemind.modes.MindMapNode</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.filter.DefaultFilter</srcNode>
<endNode>freemind.view.mindmapview.MapView</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.filter.DefaultFilter</srcNode>
<endNode>freemind.view.mindmapview.NodeView</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.filter.Filter</srcNode>
<endNode>freemind.controller.Controller</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.filter.Filter</srcNode>
<endNode>freemind.modes.MindMapNode</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.filter.FilterComposerDialog</srcNode>
<endNode>freemind.common.NamedObject</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.filter.FilterComposerDialog</srcNode>
<endNode>freemind.controller.Controller</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.filter.FilterComposerDialog</srcNode>
<endNode>freemind.controller.filter.condition.ConditionFactory</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.filter.FilterComposerDialog</srcNode>
<endNode>freemind.controller.filter.FilterComposerDialog.AddConditionAction</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.filter.FilterComposerDialog</srcNode>
<endNode>freemind.controller.filter.FilterComposerDialog.CloseAction</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.filter.FilterComposerDialog</srcNode>
<endNode>freemind.controller.filter.FilterComposerDialog.ConditionListMouseListener</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.filter.FilterComposerDialog</srcNode>
<endNode>freemind.controller.filter.FilterComposerDialog.ConditionListSelectionListener</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.filter.FilterComposerDialog</srcNode>
<endNode>freemind.controller.filter.FilterComposerDialog.CreateConjunctConditionAction</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.filter.FilterComposerDialog</srcNode>
<endNode>freemind.controller.filter.FilterComposerDialog.CreateDisjunctConditionAction</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.filter.FilterComposerDialog</srcNode>
<endNode>freemind.controller.filter.FilterComposerDialog.CreateNotSatisfiedConditionAction</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.filter.FilterComposerDialog</srcNode>
<endNode>freemind.controller.filter.FilterComposerDialog.DeleteConditionAction</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.filter.FilterComposerDialog</srcNode>
<endNode>freemind.controller.filter.FilterComposerDialog.LoadAction</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.filter.FilterComposerDialog</srcNode>
<endNode>freemind.controller.filter.FilterComposerDialog.MindMapFilterFileFilter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.filter.FilterComposerDialog</srcNode>
<endNode>freemind.controller.filter.FilterComposerDialog.SaveAction</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.filter.FilterComposerDialog</srcNode>
<endNode>freemind.controller.filter.FilterComposerDialog.SelectedAttributeChangeListener</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.filter.FilterComposerDialog</srcNode>
<endNode>freemind.controller.filter.FilterComposerDialog.SimpleConditionChangeListener</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.filter.FilterComposerDialog</srcNode>
<endNode>freemind.controller.filter.FilterController</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.filter.FilterComposerDialog</srcNode>
<endNode>freemind.controller.filter.FilterToolbar</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.filter.FilterComposerDialog</srcNode>
<endNode>freemind.controller.filter.util.ExtendedComboBoxModel</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.filter.FilterComposerDialog</srcNode>
<endNode>freemind.main.FreeMindMain</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.filter.FilterComposerDialog</srcNode>
<endNode>freemind.main.Resources</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.filter.FilterComposerDialog</srcNode>
<endNode>freemind.main.Tools</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.filter.FilterComposerDialog</srcNode>
<endNode>freemind.modes.attributes.AttributeRegistry</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.filter.FilterComposerDialog</srcNode>
<endNode>freemind.modes.FreeMindFileDialog</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.filter.FilterComposerDialog</srcNode>
<endNode>freemind.modes.MapRegistry</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.filter.FilterComposerDialog</srcNode>
<endNode>freemind.modes.MindIcon</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.filter.FilterComposerDialog</srcNode>
<endNode>freemind.modes.MindMap</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.filter.FilterComposerDialog</srcNode>
<endNode>freemind.modes.ModeController</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.filter.FilterComposerDialog.AddConditionAction</srcNode>
<endNode>freemind.common.NamedObject</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.filter.FilterComposerDialog.AddConditionAction</srcNode>
<endNode>freemind.controller.filter.condition.Condition</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.filter.FilterComposerDialog.AddConditionAction</srcNode>
<endNode>freemind.controller.filter.condition.ConditionFactory</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.filter.FilterComposerDialog.AddConditionAction</srcNode>
<endNode>freemind.controller.filter.FilterComposerDialog</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.filter.FilterComposerDialog.AddConditionAction</srcNode>
<endNode>freemind.controller.filter.FilterController</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.filter.FilterComposerDialog.AddConditionAction</srcNode>
<endNode>freemind.main.Resources</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.filter.FilterComposerDialog.AddConditionAction</srcNode>
<endNode>freemind.main.Tools</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.filter.FilterComposerDialog.CloseAction</srcNode>
<endNode>freemind.controller.filter.FilterComposerDialog</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.filter.FilterComposerDialog.ConditionListMouseListener.mouseClicked.(Anon_1)</srcNode>
<endNode>freemind.controller.filter.FilterComposerDialog</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.filter.FilterComposerDialog.ConditionListSelectionListener</srcNode>
<endNode>freemind.controller.filter.FilterComposerDialog</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.filter.FilterComposerDialog.CreateConjunctConditionAction</srcNode>
<endNode>freemind.controller.filter.condition.Condition</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.filter.FilterComposerDialog.CreateConjunctConditionAction</srcNode>
<endNode>freemind.controller.filter.condition.ConjunctConditions</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.filter.FilterComposerDialog.CreateConjunctConditionAction</srcNode>
<endNode>freemind.controller.filter.FilterComposerDialog</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.filter.FilterComposerDialog.CreateConjunctConditionAction</srcNode>
<endNode>freemind.main.Resources</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.filter.FilterComposerDialog.CreateConjunctConditionAction</srcNode>
<endNode>freemind.main.Tools</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.filter.FilterComposerDialog.CreateDisjunctConditionAction</srcNode>
<endNode>freemind.controller.filter.condition.Condition</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.filter.FilterComposerDialog.CreateDisjunctConditionAction</srcNode>
<endNode>freemind.controller.filter.condition.DisjunctConditions</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.filter.FilterComposerDialog.CreateDisjunctConditionAction</srcNode>
<endNode>freemind.controller.filter.FilterComposerDialog</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.filter.FilterComposerDialog.CreateDisjunctConditionAction</srcNode>
<endNode>freemind.main.Resources</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.filter.FilterComposerDialog.CreateDisjunctConditionAction</srcNode>
<endNode>freemind.main.Tools</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.filter.FilterComposerDialog.CreateNotSatisfiedConditionAction</srcNode>
<endNode>freemind.controller.filter.condition.Condition</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.filter.FilterComposerDialog.CreateNotSatisfiedConditionAction</srcNode>
<endNode>freemind.controller.filter.condition.ConditionNotSatisfiedDecorator</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.filter.FilterComposerDialog.CreateNotSatisfiedConditionAction</srcNode>
<endNode>freemind.controller.filter.FilterComposerDialog</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.filter.FilterComposerDialog.CreateNotSatisfiedConditionAction</srcNode>
<endNode>freemind.main.Resources</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.filter.FilterComposerDialog.CreateNotSatisfiedConditionAction</srcNode>
<endNode>freemind.main.Tools</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.filter.FilterComposerDialog.DeleteConditionAction</srcNode>
<endNode>freemind.controller.filter.FilterComposerDialog</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.filter.FilterComposerDialog.DeleteConditionAction</srcNode>
<endNode>freemind.main.Resources</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.filter.FilterComposerDialog.DeleteConditionAction</srcNode>
<endNode>freemind.main.Tools</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.filter.FilterComposerDialog.LoadAction</srcNode>
<endNode>freemind.controller.filter.FilterComposerDialog</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.filter.FilterComposerDialog.LoadAction</srcNode>
<endNode>freemind.controller.filter.FilterController</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.filter.FilterComposerDialog.LoadAction</srcNode>
<endNode>freemind.modes.FreeMindFileDialog</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.filter.FilterComposerDialog.MindMapFilterFileFilter</srcNode>
<endNode>freemind.controller.filter.FilterController</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.filter.FilterComposerDialog.MindMapFilterFileFilter</srcNode>
<endNode>freemind.main.Resources</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.filter.FilterComposerDialog.MindMapFilterFileFilter</srcNode>
<endNode>freemind.main.Tools</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.filter.FilterComposerDialog.SaveAction</srcNode>
<endNode>freemind.controller.filter.FilterComposerDialog</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.filter.FilterComposerDialog.SaveAction</srcNode>
<endNode>freemind.controller.filter.FilterController</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.filter.FilterComposerDialog.SaveAction</srcNode>
<endNode>freemind.main.Resources</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.filter.FilterComposerDialog.SaveAction</srcNode>
<endNode>freemind.modes.FreeMindFileDialog</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.filter.FilterComposerDialog.SelectedAttributeChangeListener</srcNode>
<endNode>freemind.controller.filter.FilterComposerDialog</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.filter.FilterComposerDialog.SelectedAttributeChangeListener</srcNode>
<endNode>freemind.controller.filter.util.ExtendedComboBoxModel</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.filter.FilterComposerDialog.SelectedAttributeChangeListener</srcNode>
<endNode>freemind.modes.attributes.AttributeRegistry</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.filter.FilterComposerDialog.SelectedAttributeChangeListener</srcNode>
<endNode>freemind.modes.attributes.AttributeRegistryElement</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.filter.FilterComposerDialog.SimpleConditionChangeListener</srcNode>
<endNode>freemind.controller.filter.FilterComposerDialog</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.filter.FilterController</srcNode>
<endNode>freemind.controller.Controller</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.filter.FilterController</srcNode>
<endNode>freemind.controller.filter.condition.Condition</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.filter.FilterController</srcNode>
<endNode>freemind.controller.filter.condition.ConditionFactory</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.filter.FilterController</srcNode>
<endNode>freemind.controller.filter.condition.ConditionRenderer</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.filter.FilterController</srcNode>
<endNode>freemind.controller.filter.condition.NoFilteringCondition</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.filter.FilterController</srcNode>
<endNode>freemind.controller.filter.DefaultFilter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.filter.FilterController</srcNode>
<endNode>freemind.controller.filter.Filter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.filter.FilterController</srcNode>
<endNode>freemind.controller.filter.FilterComposerDialog</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.filter.FilterController</srcNode>
<endNode>freemind.controller.filter.FilterToolbar</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.filter.FilterController</srcNode>
<endNode>freemind.controller.MapModuleManager</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.filter.FilterController</srcNode>
<endNode>freemind.controller.MapModuleManager.MapModuleChangeObserver</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.filter.FilterController</srcNode>
<endNode>freemind.main.Resources</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.filter.FilterController</srcNode>
<endNode>freemind.main.XMLElement</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.filter.FilterController</srcNode>
<endNode>freemind.modes.common.plugins.NodeNoteBase</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.filter.FilterController</srcNode>
<endNode>freemind.modes.MindIcon</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.filter.FilterController</srcNode>
<endNode>freemind.modes.MindMap</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.filter.FilterController</srcNode>
<endNode>freemind.modes.Mode</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.filter.FilterController</srcNode>
<endNode>freemind.modes.ModeController</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.filter.FilterController</srcNode>
<endNode>freemind.view.MapModule</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.filter.FilterInfo</srcNode>
<endNode>freemind.controller.filter.Filter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.filter.FilterToolbar</srcNode>
<endNode>freemind.controller.Controller</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.filter.FilterToolbar</srcNode>
<endNode>freemind.controller.filter.condition.Condition</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.filter.FilterToolbar</srcNode>
<endNode>freemind.controller.filter.condition.NoFilteringCondition</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.filter.FilterToolbar</srcNode>
<endNode>freemind.controller.filter.condition.SelectedViewCondition</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.filter.FilterToolbar</srcNode>
<endNode>freemind.controller.filter.DefaultFilter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.filter.FilterToolbar</srcNode>
<endNode>freemind.controller.filter.Filter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.filter.FilterToolbar</srcNode>
<endNode>freemind.controller.filter.FilterComposerDialog</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.filter.FilterToolbar</srcNode>
<endNode>freemind.controller.filter.FilterController</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.filter.FilterToolbar</srcNode>
<endNode>freemind.controller.filter.FilterToolbar.EditFilterAction</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.filter.FilterToolbar</srcNode>
<endNode>freemind.controller.filter.FilterToolbar.FilterChangeListener</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.filter.FilterToolbar</srcNode>
<endNode>freemind.controller.filter.FilterToolbar.UnfoldAncestorsAction</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.filter.FilterToolbar</srcNode>
<endNode>freemind.controller.FreeMindToolBar</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.filter.FilterToolbar</srcNode>
<endNode>freemind.main.FreeMindMain</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.filter.FilterToolbar</srcNode>
<endNode>freemind.main.Resources</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.filter.FilterToolbar</srcNode>
<endNode>freemind.modes.MindMap</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.filter.FilterToolbar.EditFilterAction</srcNode>
<endNode>freemind.controller.filter.FilterComposerDialog</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.filter.FilterToolbar.EditFilterAction</srcNode>
<endNode>freemind.controller.filter.FilterToolbar</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.filter.FilterToolbar.EditFilterAction</srcNode>
<endNode>freemind.main.Resources</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.filter.FilterToolbar.FilterChangeListener</srcNode>
<endNode>freemind.controller.Controller</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.filter.FilterToolbar.FilterChangeListener</srcNode>
<endNode>freemind.controller.filter.DefaultFilter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.filter.FilterToolbar.FilterChangeListener</srcNode>
<endNode>freemind.controller.filter.Filter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.filter.FilterToolbar.FilterChangeListener</srcNode>
<endNode>freemind.controller.filter.FilterController</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.filter.FilterToolbar.FilterChangeListener</srcNode>
<endNode>freemind.controller.filter.FilterToolbar</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.filter.FilterToolbar.FilterChangeListener</srcNode>
<endNode>freemind.modes.MindMap</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.filter.FilterToolbar.UnfoldAncestorsAction</srcNode>
<endNode>freemind.controller.Controller</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.filter.FilterToolbar.UnfoldAncestorsAction</srcNode>
<endNode>freemind.controller.filter.FilterInfo</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.filter.FilterToolbar.UnfoldAncestorsAction</srcNode>
<endNode>freemind.controller.filter.FilterToolbar</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.filter.FilterToolbar.UnfoldAncestorsAction</srcNode>
<endNode>freemind.main.Resources</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.filter.FilterToolbar.UnfoldAncestorsAction</srcNode>
<endNode>freemind.modes.MindMap</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.filter.FilterToolbar.UnfoldAncestorsAction</srcNode>
<endNode>freemind.modes.MindMapNode</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.filter.FilterToolbar.UnfoldAncestorsAction</srcNode>
<endNode>freemind.modes.ModeController</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.filter.util.ExtendedComboBoxModel</srcNode>
<endNode>freemind.controller.filter.util.ExtendedComboBoxModel.ExtensionDataListener</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.filter.util.ExtendedComboBoxModel</srcNode>
<endNode>freemind.controller.filter.util.SortedListModel</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.filter.util.ExtendedComboBoxModel.ExtensionDataListener</srcNode>
<endNode>freemind.controller.filter.util.ExtendedComboBoxModel</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.filter.util.SortedComboBoxModel</srcNode>
<endNode>freemind.controller.filter.util.SortedListModel</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.filter.util.SortedComboBoxModel</srcNode>
<endNode>freemind.controller.filter.util.SortedMapListModel</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.filter.util.SortedMapListModel</srcNode>
<endNode>freemind.controller.filter.util.SortedListModel</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.filter.util.SortedMapVector</srcNode>
<endNode>freemind.controller.filter.util.SortedMapVector.MapElement</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.FreeMindPopupMenu</srcNode>
<endNode>freemind.controller.StructuredMenuHolder.MenuEventSupplier</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.FreeMindPopupMenu</srcNode>
<endNode>freemind.main.Resources</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.FreeMindToolBar</srcNode>
<endNode>freemind.main.Tools</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.LastOpenedList</srcNode>
<endNode>freemind.controller.Controller</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.LastOpenedList</srcNode>
<endNode>freemind.controller.MapModuleManager</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.LastOpenedList</srcNode>
<endNode>freemind.main.FreeMindMain</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.LastOpenedList</srcNode>
<endNode>freemind.main.Resources</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.LastOpenedList</srcNode>
<endNode>freemind.main.Tools</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.LastOpenedList</srcNode>
<endNode>freemind.main.XMLParseException</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.LastOpenedList</srcNode>
<endNode>freemind.modes.MindMap</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.LastOpenedList</srcNode>
<endNode>freemind.modes.Mode</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.LastOpenedList</srcNode>
<endNode>freemind.view.MapModule</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.LastStateStorageManagement</srcNode>
<endNode>freemind.main.Resources</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.LastStateStorageManagement</srcNode>
<endNode>freemind.main.Tools</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.MainToolBar</srcNode>
<endNode>freemind.controller.Controller</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.MainToolBar</srcNode>
<endNode>freemind.controller.FreeMindToolBar</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.MainToolBar</srcNode>
<endNode>freemind.main.FreeMindMain</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.MapModuleManager</srcNode>
<endNode>freemind.controller.Controller</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.MapModuleManager</srcNode>
<endNode>freemind.controller.MapModuleManager.MapModuleChangeObserver</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.MapModuleManager</srcNode>
<endNode>freemind.controller.MapModuleManager.MapModuleChangeObserverCompound</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.MapModuleManager</srcNode>
<endNode>freemind.main.Tools</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.MapModuleManager</srcNode>
<endNode>freemind.modes.MindMap</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.MapModuleManager</srcNode>
<endNode>freemind.modes.Mode</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.MapModuleManager</srcNode>
<endNode>freemind.modes.ModeController</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.MapModuleManager</srcNode>
<endNode>freemind.view.MapModule</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.MapModuleManager</srcNode>
<endNode>freemind.view.mindmapview.MapView</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.MapModuleManager.MapModuleChangeObserver</srcNode>
<endNode>freemind.modes.Mode</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.MapModuleManager.MapModuleChangeObserver</srcNode>
<endNode>freemind.view.MapModule</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.MapModuleManager.MapModuleChangeObserverCompound</srcNode>
<endNode>freemind.controller.MapModuleManager.MapModuleChangeObserver</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.MapModuleManager.MapModuleChangeObserverCompound</srcNode>
<endNode>freemind.modes.Mode</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.MapModuleManager.MapModuleChangeObserverCompound</srcNode>
<endNode>freemind.view.MapModule</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.MapModuleManager.MapTitleChangeListener</srcNode>
<endNode>freemind.modes.MindMap</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.MapModuleManager.MapTitleChangeListener</srcNode>
<endNode>freemind.view.MapModule</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.MapModuleManager.MapTitleContributor</srcNode>
<endNode>freemind.modes.MindMap</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.MapModuleManager.MapTitleContributor</srcNode>
<endNode>freemind.view.MapModule</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.MapMouseMotionListener</srcNode>
<endNode>freemind.controller.Controller</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.MapMouseMotionListener</srcNode>
<endNode>freemind.controller.MapMouseMotionListener.MapMouseMotionReceiver</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.MapMouseMotionListener</srcNode>
<endNode>freemind.controller.MenuBar</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.MapMouseMotionListener</srcNode>
<endNode>freemind.main.FreeMindMain</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.MapMouseMotionListener</srcNode>
<endNode>freemind.modes.ModeController</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.MapMouseMotionListener</srcNode>
<endNode>freemind.view.mindmapview.MapView</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.MapMouseWheelListener</srcNode>
<endNode>freemind.controller.Controller</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.MenuBar</srcNode>
<endNode>freemind.controller.Controller</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.MenuBar</srcNode>
<endNode>freemind.controller.FreeMindPopupMenu</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.MenuBar</srcNode>
<endNode>freemind.controller.LastOpenedList</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.MenuBar</srcNode>
<endNode>freemind.controller.MapModuleManager</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.MenuBar</srcNode>
<endNode>freemind.controller.MenuBar.LastOpenedActionListener</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.MenuBar</srcNode>
<endNode>freemind.controller.MenuBar.MapsMenuActionListener</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.MenuBar</srcNode>
<endNode>freemind.controller.MenuBar.ModesMenuActionListener</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.MenuBar</srcNode>
<endNode>freemind.controller.StructuredMenuHolder</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.MenuBar</srcNode>
<endNode>freemind.main.FreeMind</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.MenuBar</srcNode>
<endNode>freemind.main.FreeMindMain</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.MenuBar</srcNode>
<endNode>freemind.modes.Mode</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.MenuBar</srcNode>
<endNode>freemind.modes.ModeController</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.MenuBar</srcNode>
<endNode>freemind.view.MapModule</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.MenuBar.LastOpenedActionListener</srcNode>
<endNode>freemind.controller.Controller</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.MenuBar.LastOpenedActionListener</srcNode>
<endNode>freemind.controller.LastOpenedList</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.MenuBar.LastOpenedActionListener</srcNode>
<endNode>freemind.controller.MenuBar</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.MenuBar.LastOpenedActionListener</srcNode>
<endNode>freemind.main.Resources</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.MenuBar.MapsMenuActionListener.actionPerformed.(Anon_1)</srcNode>
<endNode>freemind.controller.Controller</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.MenuBar.MapsMenuActionListener.actionPerformed.(Anon_1)</srcNode>
<endNode>freemind.controller.MapModuleManager</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.MenuBar.MapsMenuActionListener.actionPerformed.(Anon_1)</srcNode>
<endNode>freemind.controller.MenuBar</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.MenuBar.ModesMenuActionListener.actionPerformed.(Anon_2)</srcNode>
<endNode>freemind.controller.Controller</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.MenuBar.ModesMenuActionListener.actionPerformed.(Anon_2)</srcNode>
<endNode>freemind.controller.MenuBar</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.NodeDragListener</srcNode>
<endNode>freemind.controller.Controller</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.NodeDragListener</srcNode>
<endNode>freemind.controller.MindMapNodesSelection</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.NodeDragListener</srcNode>
<endNode>freemind.main.Resources</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.NodeDragListener</srcNode>
<endNode>freemind.main.Tools</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.NodeDragListener</srcNode>
<endNode>freemind.modes.MindMapNode</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.NodeDragListener</srcNode>
<endNode>freemind.modes.ModeController</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.NodeDragListener</srcNode>
<endNode>freemind.view.mindmapview.MainView</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.NodeDragListener</srcNode>
<endNode>freemind.view.mindmapview.NodeView</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.NodeDragListener.dragGestureRecognized.(Anon_1)</srcNode>
<endNode>freemind.controller.NodeDragListener</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.NodeDropListener</srcNode>
<endNode>freemind.controller.Controller</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.NodeKeyListener</srcNode>
<endNode>freemind.controller.Controller</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.NodeMotionListener</srcNode>
<endNode>freemind.controller.Controller</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.NodeMotionListener</srcNode>
<endNode>freemind.controller.NodeMotionListener.NodeMotionAdapter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.NodeMouseMotionListener</srcNode>
<endNode>freemind.controller.Controller</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.NodeMouseMotionListener</srcNode>
<endNode>freemind.controller.NodeMouseMotionListener.NodeMouseMotionObserver</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.printpreview.BrowseAction</srcNode>
<endNode>freemind.controller.printpreview.Preview</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.printpreview.BrowseAction.BrowseAction.(Anon_1)</srcNode>
<endNode>freemind.controller.printpreview.BrowseAction</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.printpreview.Preview</srcNode>
<endNode>freemind.controller.Controller</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.printpreview.Preview</srcNode>
<endNode>freemind.view.mindmapview.MapView</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.printpreview.PreviewDialog</srcNode>
<endNode>freemind.controller.printpreview.BrowseAction</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.printpreview.PreviewDialog</srcNode>
<endNode>freemind.controller.printpreview.Preview</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.printpreview.PreviewDialog</srcNode>
<endNode>freemind.controller.printpreview.ZoomAction</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.printpreview.PreviewDialog</srcNode>
<endNode>freemind.main.Tools</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.printpreview.PreviewDialog</srcNode>
<endNode>freemind.view.mindmapview.MapView</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.printpreview.ZoomAction</srcNode>
<endNode>freemind.controller.printpreview.Preview</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.StructuredMenuHolder</srcNode>
<endNode>freemind.controller.BlindIcon</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.StructuredMenuHolder</srcNode>
<endNode>freemind.controller.MenuItemSelectedListener</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.StructuredMenuHolder</srcNode>
<endNode>freemind.controller.StructuredMenuHolder.DefaultMenuAdderCreator</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.StructuredMenuHolder</srcNode>
<endNode>freemind.controller.StructuredMenuHolder.MapTokenPair</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.StructuredMenuHolder</srcNode>
<endNode>freemind.controller.StructuredMenuHolder.MenuAdder</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.StructuredMenuHolder</srcNode>
<endNode>freemind.controller.StructuredMenuHolder.MenuAdderCreator</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.StructuredMenuHolder</srcNode>
<endNode>freemind.controller.StructuredMenuHolder.PrintMenuAdder</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.StructuredMenuHolder</srcNode>
<endNode>freemind.controller.StructuredMenuHolder.PrintMenuAdderCreator</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.StructuredMenuHolder</srcNode>
<endNode>freemind.controller.StructuredMenuHolder.SeparatorHolder</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.StructuredMenuHolder</srcNode>
<endNode>freemind.controller.StructuredMenuItemHolder</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.StructuredMenuHolder</srcNode>
<endNode>freemind.main.HtmlTools</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.StructuredMenuHolder</srcNode>
<endNode>freemind.main.Resources</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.StructuredMenuHolder</srcNode>
<endNode>freemind.main.Tools</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.StructuredMenuHolder.DefaultMenuAdderCreator</srcNode>
<endNode>freemind.controller.StructuredMenuHolder.MenuAdder</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.StructuredMenuHolder.DefaultMenuAdderCreator</srcNode>
<endNode>freemind.controller.StructuredMenuHolder.MenuAdderCreator</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.StructuredMenuHolder.DefaultMenuAdderCreator</srcNode>
<endNode>freemind.controller.StructuredMenuHolder.MenuItemAdder</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.StructuredMenuHolder.MenuAdder</srcNode>
<endNode>freemind.controller.StructuredMenuItemHolder</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.StructuredMenuHolder.MenuAdderCreator</srcNode>
<endNode>freemind.controller.StructuredMenuHolder.MenuAdder</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.StructuredMenuHolder.MenuItemAdder</srcNode>
<endNode>freemind.controller.StructuredMenuHolder</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.StructuredMenuHolder.MenuItemAdder</srcNode>
<endNode>freemind.controller.StructuredMenuHolder.MenuAdder</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.StructuredMenuHolder.MenuItemAdder</srcNode>
<endNode>freemind.controller.StructuredMenuHolder.StructuredMenuListener</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.StructuredMenuHolder.MenuItemAdder</srcNode>
<endNode>freemind.controller.StructuredMenuItemHolder</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.StructuredMenuHolder.MenuItemAdder</srcNode>
<endNode>freemind.main.Resources</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.StructuredMenuHolder.MenuItemAdder</srcNode>
<endNode>freemind.main.Tools</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.StructuredMenuHolder.PrintMenuAdder</srcNode>
<endNode>freemind.controller.StructuredMenuHolder</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.StructuredMenuHolder.PrintMenuAdder</srcNode>
<endNode>freemind.controller.StructuredMenuHolder.MenuAdder</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.StructuredMenuHolder.PrintMenuAdder</srcNode>
<endNode>freemind.controller.StructuredMenuItemHolder</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.StructuredMenuHolder.PrintMenuAdderCreator</srcNode>
<endNode>freemind.controller.StructuredMenuHolder.MenuAdder</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.StructuredMenuHolder.PrintMenuAdderCreator</srcNode>
<endNode>freemind.controller.StructuredMenuHolder.MenuAdderCreator</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.StructuredMenuHolder.PrintMenuAdderCreator</srcNode>
<endNode>freemind.controller.StructuredMenuHolder.PrintMenuAdder</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.StructuredMenuHolder.StructuredMenuListener</srcNode>
<endNode>freemind.controller.MenuItemEnabledListener</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.StructuredMenuHolder.StructuredMenuListener</srcNode>
<endNode>freemind.controller.MenuItemSelectedListener</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.StructuredMenuHolder.StructuredMenuListener</srcNode>
<endNode>freemind.controller.StructuredMenuHolder</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.StructuredMenuHolder.StructuredMenuListener</srcNode>
<endNode>freemind.controller.StructuredMenuItemHolder</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.StructuredMenuHolder.StructuredMenuListener</srcNode>
<endNode>freemind.main.Resources</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.StructuredMenuHolder.updateMenus.(Anon_1)</srcNode>
<endNode>freemind.controller.StructuredMenuHolder.MenuAdder</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.StructuredMenuHolder.updateMenus.(Anon_1)</srcNode>
<endNode>freemind.controller.StructuredMenuItemHolder</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.StructuredMenuHolder.updateMenus.(Anon_1)</srcNode>
<endNode>freemind.main.Tools</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.StructuredMenuHolder.updateMenus.(Anon_2)</srcNode>
<endNode>freemind.controller.StructuredMenuHolder</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.StructuredMenuHolder.updateMenus.(Anon_2)</srcNode>
<endNode>freemind.controller.StructuredMenuHolder.MenuAdder</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.StructuredMenuHolder.updateMenus.(Anon_2)</srcNode>
<endNode>freemind.controller.StructuredMenuHolder.MenuEventSupplier</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.StructuredMenuHolder.updateMenus.(Anon_2)</srcNode>
<endNode>freemind.controller.StructuredMenuHolder.StructuredMenuListener</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.StructuredMenuHolder.updateMenus.(Anon_2)</srcNode>
<endNode>freemind.controller.StructuredMenuItemHolder</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.StructuredMenuHolder.updateMenus.(Anon_2)</srcNode>
<endNode>freemind.main.Tools</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.StructuredMenuHolder.updateMenus.(Anon_3)</srcNode>
<endNode>freemind.controller.StructuredMenuHolder.MenuAdder</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.StructuredMenuHolder.updateMenus.(Anon_3)</srcNode>
<endNode>freemind.controller.StructuredMenuItemHolder</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.StructuredMenuItemHolder</srcNode>
<endNode>freemind.controller.MenuItemEnabledListener</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.controller.StructuredMenuItemHolder</srcNode>
<endNode>freemind.controller.MenuItemSelectedListener</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.extensions.ExportHook</srcNode>
<endNode>freemind.extensions.ExportHook.ImageFilter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.extensions.ExportHook</srcNode>
<endNode>freemind.extensions.HookAdapter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.extensions.ExportHook</srcNode>
<endNode>freemind.extensions.ModeControllerHookAdapter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.extensions.ExportHook</srcNode>
<endNode>freemind.main.FreeMindMain</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.extensions.ExportHook</srcNode>
<endNode>freemind.main.Resources</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.extensions.ExportHook</srcNode>
<endNode>freemind.main.Tools</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.extensions.ExportHook</srcNode>
<endNode>freemind.modes.FreeMindFileDialog</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.extensions.ExportHook</srcNode>
<endNode>freemind.modes.MindMap</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.extensions.ExportHook</srcNode>
<endNode>freemind.modes.ModeController</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.extensions.ExportHook</srcNode>
<endNode>freemind.view.mindmapview.MapView</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.extensions.ExportHook.ImageFilter</srcNode>
<endNode>freemind.main.Tools</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.extensions.HookAdapter</srcNode>
<endNode>freemind.controller.Controller</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.extensions.HookAdapter</srcNode>
<endNode>freemind.extensions.MindMapHook</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.extensions.HookAdapter</srcNode>
<endNode>freemind.extensions.MindMapHook.PluginBaseClassSearcher</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.extensions.HookAdapter</srcNode>
<endNode>freemind.main.Resources</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.extensions.HookAdapter</srcNode>
<endNode>freemind.modes.ModeController</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.extensions.HookDescriptorBase</srcNode>
<endNode>freemind.controller.Controller</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.extensions.HookDescriptorBase</srcNode>
<endNode>freemind.main.FreeMindMain</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.extensions.HookDescriptorBase</srcNode>
<endNode>freemind.main.Resources</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.extensions.HookDescriptorBase</srcNode>
<endNode>freemind.main.Tools</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.extensions.HookDescriptorPluginAction</srcNode>
<endNode>freemind.extensions.HookDescriptorBase</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.extensions.HookDescriptorPluginAction</srcNode>
<endNode>freemind.extensions.HookInstanciationMethod</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.extensions.HookDescriptorPluginAction</srcNode>
<endNode>freemind.main.FreeMindMain</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.extensions.HookDescriptorRegistration</srcNode>
<endNode>freemind.extensions.HookDescriptorBase</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.extensions.HookDescriptorRegistration</srcNode>
<endNode>freemind.main.FreeMindMain</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.extensions.HookFactory</srcNode>
<endNode>freemind.extensions.HookFactory.RegistrationContainer</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.extensions.HookFactory</srcNode>
<endNode>freemind.extensions.HookInstanciationMethod</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.extensions.HookFactory</srcNode>
<endNode>freemind.extensions.HookRegistration</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.extensions.HookFactory</srcNode>
<endNode>freemind.extensions.ModeControllerHook</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.extensions.HookFactory</srcNode>
<endNode>freemind.extensions.NodeHook</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.extensions.HookFactory</srcNode>
<endNode>freemind.extensions.PermanentNodeHook</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.extensions.HookFactory</srcNode>
<endNode>freemind.modes.MindMapNode</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.extensions.HookFactoryAdapter</srcNode>
<endNode>freemind.extensions.HookFactory</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.extensions.HookFactoryAdapter</srcNode>
<endNode>freemind.extensions.HookFactory.RegistrationContainer</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.extensions.HookFactoryAdapter</srcNode>
<endNode>freemind.extensions.HookRegistration</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.extensions.HookFactoryAdapter</srcNode>
<endNode>freemind.extensions.MindMapHook</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.extensions.HookFactoryAdapter</srcNode>
<endNode>freemind.extensions.PermanentNodeHook</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.extensions.HookFactoryAdapter</srcNode>
<endNode>freemind.modes.MindMapNode</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.extensions.HookInstanciationMethod</srcNode>
<endNode>freemind.extensions.HookInstanciationMethod.AllDestinationNodesGetter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.extensions.HookInstanciationMethod</srcNode>
<endNode>freemind.extensions.HookInstanciationMethod.DefaultDestinationNodesGetter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.extensions.HookInstanciationMethod</srcNode>
<endNode>freemind.extensions.HookInstanciationMethod.DestinationNodesGetter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.extensions.HookInstanciationMethod</srcNode>
<endNode>freemind.extensions.HookInstanciationMethod.RootDestinationNodesGetter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.extensions.HookInstanciationMethod</srcNode>
<endNode>freemind.extensions.MindMapHook</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.extensions.HookInstanciationMethod</srcNode>
<endNode>freemind.extensions.PermanentNodeHook</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.extensions.HookInstanciationMethod</srcNode>
<endNode>freemind.modes.MindMapNode</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.extensions.HookInstanciationMethod</srcNode>
<endNode>freemind.modes.ModeController</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.extensions.HookInstanciationMethod.AllDestinationNodesGetter</srcNode>
<endNode>freemind.extensions.HookInstanciationMethod.DestinationNodesGetter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.extensions.HookInstanciationMethod.AllDestinationNodesGetter</srcNode>
<endNode>freemind.modes.MindMap</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.extensions.HookInstanciationMethod.AllDestinationNodesGetter</srcNode>
<endNode>freemind.modes.MindMapNode</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.extensions.HookInstanciationMethod.AllDestinationNodesGetter</srcNode>
<endNode>freemind.modes.ModeController</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.extensions.HookInstanciationMethod.DefaultDestinationNodesGetter</srcNode>
<endNode>freemind.extensions.HookInstanciationMethod.DestinationNodesGetter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.extensions.HookInstanciationMethod.DefaultDestinationNodesGetter</srcNode>
<endNode>freemind.modes.MindMapNode</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.extensions.HookInstanciationMethod.DefaultDestinationNodesGetter</srcNode>
<endNode>freemind.modes.ModeController</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.extensions.HookInstanciationMethod.DestinationNodesGetter</srcNode>
<endNode>freemind.modes.MindMapNode</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.extensions.HookInstanciationMethod.DestinationNodesGetter</srcNode>
<endNode>freemind.modes.ModeController</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.extensions.HookInstanciationMethod.RootDestinationNodesGetter</srcNode>
<endNode>freemind.extensions.HookInstanciationMethod.DestinationNodesGetter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.extensions.HookInstanciationMethod.RootDestinationNodesGetter</srcNode>
<endNode>freemind.modes.MindMap</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.extensions.HookInstanciationMethod.RootDestinationNodesGetter</srcNode>
<endNode>freemind.modes.MindMapNode</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.extensions.HookInstanciationMethod.RootDestinationNodesGetter</srcNode>
<endNode>freemind.modes.ModeController</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.extensions.ImportWizard</srcNode>
<endNode>freemind.main.FreeMindMain</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.extensions.ImportWizard</srcNode>
<endNode>freemind.main.Resources</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.extensions.MindMapHook</srcNode>
<endNode>freemind.extensions.MindMapHook.PluginBaseClassSearcher</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.extensions.MindMapHook</srcNode>
<endNode>freemind.modes.ModeController</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.extensions.ModeControllerHook</srcNode>
<endNode>freemind.extensions.MindMapHook</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.extensions.ModeControllerHookAdapter</srcNode>
<endNode>freemind.extensions.HookAdapter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.extensions.ModeControllerHookAdapter</srcNode>
<endNode>freemind.extensions.ModeControllerHook</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.extensions.NodeHook</srcNode>
<endNode>freemind.extensions.MindMapHook</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.extensions.NodeHook</srcNode>
<endNode>freemind.modes.MindMap</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.extensions.NodeHook</srcNode>
<endNode>freemind.modes.MindMapNode</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.extensions.NodeHookAdapter</srcNode>
<endNode>freemind.extensions.HookAdapter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.extensions.NodeHookAdapter</srcNode>
<endNode>freemind.extensions.NodeHook</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.extensions.NodeHookAdapter</srcNode>
<endNode>freemind.modes.MindMap</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.extensions.NodeHookAdapter</srcNode>
<endNode>freemind.modes.MindMapNode</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.extensions.NodeHookAdapter</srcNode>
<endNode>freemind.modes.ModeController</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.extensions.PermanentNodeHook</srcNode>
<endNode>freemind.extensions.NodeHook</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.extensions.PermanentNodeHook</srcNode>
<endNode>freemind.main.XMLElement</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.extensions.PermanentNodeHook</srcNode>
<endNode>freemind.modes.MindMapNode</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.extensions.PermanentNodeHook</srcNode>
<endNode>freemind.view.mindmapview.NodeView</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.extensions.PermanentNodeHookAdapter</srcNode>
<endNode>freemind.extensions.HookAdapter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.extensions.PermanentNodeHookAdapter</srcNode>
<endNode>freemind.extensions.NodeHookAdapter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.extensions.PermanentNodeHookAdapter</srcNode>
<endNode>freemind.extensions.PermanentNodeHook</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.extensions.PermanentNodeHookAdapter</srcNode>
<endNode>freemind.main.XMLElement</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.extensions.PermanentNodeHookAdapter</srcNode>
<endNode>freemind.modes.mindmapmode.actions.xml.ActionPair</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.extensions.PermanentNodeHookAdapter</srcNode>
<endNode>freemind.modes.MindMapNode</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.extensions.PermanentNodeHookAdapter</srcNode>
<endNode>freemind.modes.ModeController</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.extensions.PermanentNodeHookAdapter</srcNode>
<endNode>freemind.view.mindmapview.NodeView</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.extensions.PermanentNodeHookSubstituteUnknown</srcNode>
<endNode>freemind.extensions.PermanentNodeHookAdapter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.extensions.PermanentNodeHookSubstituteUnknown</srcNode>
<endNode>freemind.main.XMLElement</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.main.Base64Coding</srcNode>
<endNode>freemind.main.Resources</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.main.EditServer</srcNode>
<endNode>freemind.main.FreeMindMain</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.main.EditServer</srcNode>
<endNode>freemind.main.Resources</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.main.EditServer</srcNode>
<endNode>freemind.main.Tools</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.main.EditServer.handleClient.(Anon_1)</srcNode>
<endNode>freemind.controller.Controller</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.main.EditServer.handleClient.(Anon_1)</srcNode>
<endNode>freemind.main.EditServer</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.main.EditServer.handleClient.(Anon_1)</srcNode>
<endNode>freemind.main.FreeMindMain</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.main.EditServer.handleClient.(Anon_1)</srcNode>
<endNode>freemind.main.Resources</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.main.EditServer.handleClient.(Anon_1)</srcNode>
<endNode>freemind.main.Tools</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.main.EditServer.handleClient.(Anon_1)</srcNode>
<endNode>freemind.modes.ModeController</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.main.FreeMind</srcNode>
<endNode>freemind.controller.Controller</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.main.FreeMind</srcNode>
<endNode>freemind.controller.Controller.OptionAntialiasAction</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.main.FreeMind</srcNode>
<endNode>freemind.controller.filter.FilterController</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.main.FreeMind</srcNode>
<endNode>freemind.controller.LastOpenedList</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.main.FreeMind</srcNode>
<endNode>freemind.controller.LastStateStorageManagement</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.main.FreeMind</srcNode>
<endNode>freemind.controller.MapModuleManager</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.main.FreeMind</srcNode>
<endNode>freemind.controller.MenuBar</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.main.FreeMind</srcNode>
<endNode>freemind.main.EditServer</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.main.FreeMind</srcNode>
<endNode>freemind.main.FeedBack</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.main.FreeMind</srcNode>
<endNode>freemind.main.FreeMindCommon</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.main.FreeMind</srcNode>
<endNode>freemind.main.FreeMindMain</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.main.FreeMind</srcNode>
<endNode>freemind.main.FreeMindMain.StartupDoneListener</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.main.FreeMind</srcNode>
<endNode>freemind.main.FreeMindMain.VersionInformation</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.main.FreeMind</srcNode>
<endNode>freemind.main.FreeMindSecurityManager</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.main.FreeMind</srcNode>
<endNode>freemind.main.FreeMindSplashModern</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.main.FreeMind</srcNode>
<endNode>freemind.main.FreeMindStarter.ProxyAuthenticator</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.main.FreeMind</srcNode>
<endNode>freemind.main.HtmlTools</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.main.FreeMind</srcNode>
<endNode>freemind.main.IFreeMindSplash</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.main.FreeMind</srcNode>
<endNode>freemind.main.LogFileLogHandler</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.main.FreeMind</srcNode>
<endNode>freemind.main.LoggingOutputStream</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.main.FreeMind</srcNode>
<endNode>freemind.main.Resources</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.main.FreeMind</srcNode>
<endNode>freemind.main.StdFormatter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.main.FreeMind</srcNode>
<endNode>freemind.main.Tools</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.main.FreeMind</srcNode>
<endNode>freemind.modes.ModeController</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.main.FreeMind</srcNode>
<endNode>freemind.view.MapModule</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.main.FreeMind</srcNode>
<endNode>freemind.view.mindmapview.MapView</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.main.FreeMind</srcNode>
<endNode>freemind.view.mindmapview.MapView.ScrollPane</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.main.FreeMind.init.(Anon_1)</srcNode>
<endNode>freemind.main.FreeMind</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.main.FreeMind.init.(Anon_1)</srcNode>
<endNode>freemind.main.FreeMindCommon</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.main.FreeMind.init.(Anon_1)</srcNode>
<endNode>freemind.preferences.FreemindPropertyListener</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.main.FreeMind.main.(Anon_2)</srcNode>
<endNode>freemind.main.FeedBack</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.main.FreeMind.main.(Anon_2)</srcNode>
<endNode>freemind.main.FreeMind</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.main.FreeMind.main.(Anon_3)</srcNode>
<endNode>freemind.controller.Controller</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.main.FreeMind.main.(Anon_3)</srcNode>
<endNode>freemind.main.FreeMind</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.main.FreeMind.MyEventQueue</srcNode>
<endNode>freemind.main.FreeMind</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.main.FreeMind.setScreenBounds.(Anon_4)</srcNode>
<endNode>freemind.controller.Controller</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.main.FreeMind.setScreenBounds.(Anon_4)</srcNode>
<endNode>freemind.main.FreeMind</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.main.FreeMindApplet</srcNode>
<endNode>freemind.controller.Controller</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.main.FreeMindApplet</srcNode>
<endNode>freemind.controller.Controller.OptionAntialiasAction</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.main.FreeMindApplet</srcNode>
<endNode>freemind.controller.MenuBar</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.main.FreeMindApplet</srcNode>
<endNode>freemind.main.FreeMind</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.main.FreeMindApplet</srcNode>
<endNode>freemind.main.FreeMindCommon</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.main.FreeMindApplet</srcNode>
<endNode>freemind.main.FreeMindMain</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.main.FreeMindApplet</srcNode>
<endNode>freemind.main.FreeMindMain.StartupDoneListener</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.main.FreeMindApplet</srcNode>
<endNode>freemind.main.FreeMindMain.VersionInformation</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.main.FreeMindApplet</srcNode>
<endNode>freemind.main.Resources</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.main.FreeMindApplet</srcNode>
<endNode>freemind.main.Tools</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.main.FreeMindApplet</srcNode>
<endNode>freemind.modes.ModeController</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.main.FreeMindApplet</srcNode>
<endNode>freemind.view.mindmapview.MapView</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.main.FreeMindApplet</srcNode>
<endNode>freemind.view.mindmapview.MapView.ScrollPane</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.main.FreeMindCommon</srcNode>
<endNode>freemind.main.FreeMindCommon.FreeMindResourceBundle</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.main.FreeMindCommon</srcNode>
<endNode>freemind.main.FreeMindMain</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.main.FreeMindCommon</srcNode>
<endNode>freemind.main.Resources</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.main.FreeMindCommon</srcNode>
<endNode>freemind.main.Tools</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.main.FreeMindCommon.FreeMindResourceBundle</srcNode>
<endNode>freemind.main.FreeMindCommon</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.main.FreeMindCommon.FreeMindResourceBundle</srcNode>
<endNode>freemind.main.FreeMindMain</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.main.FreeMindCommon.FreeMindResourceBundle</srcNode>
<endNode>freemind.main.Resources</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.main.FreeMindMain</srcNode>
<endNode>freemind.controller.Controller</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.main.FreeMindMain</srcNode>
<endNode>freemind.controller.MenuBar</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.main.FreeMindMain</srcNode>
<endNode>freemind.main.FreeMindMain.StartupDoneListener</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.main.FreeMindMain</srcNode>
<endNode>freemind.main.FreeMindMain.VersionInformation</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.main.FreeMindMain</srcNode>
<endNode>freemind.view.mindmapview.MapView</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.main.FreeMindMain.VersionInformation</srcNode>
<endNode>freemind.main.FreeMindMain</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.main.FreeMindSplashModern</srcNode>
<endNode>freemind.main.FeedBack</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.main.FreeMindSplashModern</srcNode>
<endNode>freemind.main.FreeMindMain</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.main.FreeMindSplashModern</srcNode>
<endNode>freemind.main.FreeMindSplashModern.FeedBackImpl</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.main.FreeMindSplashModern</srcNode>
<endNode>freemind.main.IFreeMindSplash</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.main.FreeMindSplashModern.FeedBackImpl</srcNode>
<endNode>freemind.main.FeedBack</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.main.FreeMindSplashModern.FeedBackImpl</srcNode>
<endNode>freemind.main.FreeMindMain</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.main.FreeMindSplashModern.FeedBackImpl</srcNode>
<endNode>freemind.main.FreeMindSplashModern</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.main.FreeMindSplashModern.FeedBackImpl.progress.(Anon_1)</srcNode>
<endNode>freemind.main.FreeMindSplashModern</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.main.FreeMindSplashModern.FeedBackImpl.progress.(Anon_1)</srcNode>
<endNode>freemind.main.FreeMindSplashModern.FeedBackImpl</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.main.FreeMindSplashModern.FreeMindSplashModern.(Anon_2)</srcNode>
<endNode>freemind.main.FreeMindMain</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.main.FreeMindSplashModern.FreeMindSplashModern.(Anon_2)</srcNode>
<endNode>freemind.main.FreeMindMain.VersionInformation</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.main.FreeMindSplashModern.FreeMindSplashModern.(Anon_2)</srcNode>
<endNode>freemind.main.Tools</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.main.FreeMindStarter</srcNode>
<endNode>freemind.main.FreeMindCommon</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.main.HtmlTools</srcNode>
<endNode>freemind.main.HtmlTools.IndexPair</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.main.HtmlTools</srcNode>
<endNode>freemind.main.Resources</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.main.HtmlTools</srcNode>
<endNode>freemind.main.XHTMLWriter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.main.IFreeMindSplash</srcNode>
<endNode>freemind.main.FeedBack</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.main.LogFileLogHandler</srcNode>
<endNode>freemind.main.LogFileLogHandler.LogReceiver</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.main.Resources</srcNode>
<endNode>freemind.common.NamedObject</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.main.Resources</srcNode>
<endNode>freemind.common.TextTranslator</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.main.Resources</srcNode>
<endNode>freemind.main.FreeMindMain</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.main.Resources</srcNode>
<endNode>freemind.main.FreeMindMain.VersionInformation</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.main.Resources</srcNode>
<endNode>freemind.main.Tools</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.main.StdFormatter</srcNode>
<endNode>freemind.main.StdFormatter.StdOutErrLevel</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.main.Tools</srcNode>
<endNode>freemind.common.XmlBindingTools</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.main.Tools</srcNode>
<endNode>freemind.main.Base64Coding</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.main.Tools</srcNode>
<endNode>freemind.main.FreeMindCommon</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.main.Tools</srcNode>
<endNode>freemind.main.FreeMindMain</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.main.Tools</srcNode>
<endNode>freemind.main.HtmlTools</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.main.Tools</srcNode>
<endNode>freemind.main.Resources</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.main.Tools</srcNode>
<endNode>freemind.main.Tools.ActionHolder</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.main.Tools</srcNode>
<endNode>freemind.main.Tools.addEscapeActionToDialog.EscapeAction</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.main.Tools</srcNode>
<endNode>freemind.main.Tools.BooleanHolder</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.main.Tools</srcNode>
<endNode>freemind.main.Tools.ButtonHolder</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.main.Tools</srcNode>
<endNode>freemind.main.Tools.getUpdateReader.TransformerRunnable</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.main.Tools</srcNode>
<endNode>freemind.main.Tools.NameMnemonicHolder</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.main.Tools</srcNode>
<endNode>freemind.modes.mindmapmode.MindMapController</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.main.Tools</srcNode>
<endNode>freemind.modes.MindMapNode</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.main.Tools</srcNode>
<endNode>freemind.view.mindmapview.MapView</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.main.Tools</srcNode>
<endNode>freemind.view.mindmapview.NodeView</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.main.Tools.ActionHolder</srcNode>
<endNode>freemind.main.Tools.NameMnemonicHolder</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.main.Tools.addFocusPrintTimer.(Anon_2)</srcNode>
<endNode>freemind.main.Tools</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.main.Tools.ButtonHolder</srcNode>
<endNode>freemind.main.Tools.NameMnemonicHolder</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.main.Tools.DesEncrypter</srcNode>
<endNode>freemind.main.Tools</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.main.Tools.getUpdateReader.TransformerRunnable</srcNode>
<endNode>freemind.main.Resources</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.main.Tools.MindMapNodePair</srcNode>
<endNode>freemind.modes.MindMapNode</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.main.Tools.SingleDesEncrypter</srcNode>
<endNode>freemind.main.Tools.DesEncrypter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.main.Tools.TripleDesEncrypter</srcNode>
<endNode>freemind.main.Tools.DesEncrypter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.main.XHTMLWriter</srcNode>
<endNode>freemind.main.FixedHTMLWriter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.main.XHTMLWriter</srcNode>
<endNode>freemind.main.Resources</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.main.XHTMLWriter</srcNode>
<endNode>freemind.main.XHTMLWriter.XHTMLFilterWriter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.main.XMLElement</srcNode>
<endNode>freemind.main.XMLParseException</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.ArrowLinkAdapter</srcNode>
<endNode>freemind.main.FreeMindMain</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.ArrowLinkAdapter</srcNode>
<endNode>freemind.main.Tools</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.ArrowLinkAdapter</srcNode>
<endNode>freemind.main.XMLElement</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.ArrowLinkAdapter</srcNode>
<endNode>freemind.modes.ArrowLinkTarget</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.ArrowLinkAdapter</srcNode>
<endNode>freemind.modes.LineAdapter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.ArrowLinkAdapter</srcNode>
<endNode>freemind.modes.LinkAdapter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.ArrowLinkAdapter</srcNode>
<endNode>freemind.modes.MindMapArrowLink</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.ArrowLinkAdapter</srcNode>
<endNode>freemind.modes.MindMapLinkRegistry</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.ArrowLinkAdapter</srcNode>
<endNode>freemind.modes.MindMapNode</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.ArrowLinkTarget</srcNode>
<endNode>freemind.main.FreeMindMain</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.ArrowLinkTarget</srcNode>
<endNode>freemind.main.XMLElement</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.ArrowLinkTarget</srcNode>
<endNode>freemind.modes.ArrowLinkAdapter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.ArrowLinkTarget</srcNode>
<endNode>freemind.modes.LineAdapter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.ArrowLinkTarget</srcNode>
<endNode>freemind.modes.LinkAdapter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.ArrowLinkTarget</srcNode>
<endNode>freemind.modes.MindMapLinkRegistry</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.ArrowLinkTarget</srcNode>
<endNode>freemind.modes.mindmapmode.MindMapArrowLinkModel</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.ArrowLinkTarget</srcNode>
<endNode>freemind.modes.MindMapNode</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.ArrowLinkTarget</srcNode>
<endNode>freemind.view.mindmapview.MapView</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.attributes.AttributeController</srcNode>
<endNode>freemind.modes.attributes.AttributeRegistry</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.attributes.AttributeController</srcNode>
<endNode>freemind.modes.attributes.NodeAttributeTableModel</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.attributes.AttributeController</srcNode>
<endNode>freemind.modes.mindmapmode.MindMapNodeModel</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.attributes.AttributeRegistry</srcNode>
<endNode>freemind.controller.filter.util.SortedComboBoxModel</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.attributes.AttributeRegistry</srcNode>
<endNode>freemind.controller.filter.util.SortedListModel</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.attributes.AttributeRegistry</srcNode>
<endNode>freemind.controller.filter.util.SortedMapListModel</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.attributes.AttributeRegistry</srcNode>
<endNode>freemind.controller.filter.util.SortedMapVector</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.attributes.AttributeRegistry</srcNode>
<endNode>freemind.main.XMLElement</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.attributes.AttributeRegistry</srcNode>
<endNode>freemind.modes.attributes.Attribute</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.attributes.AttributeRegistry</srcNode>
<endNode>freemind.modes.attributes.AttributeController</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.attributes.AttributeRegistry</srcNode>
<endNode>freemind.modes.attributes.AttributeRegistryComboBoxColumnModel</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.attributes.AttributeRegistry</srcNode>
<endNode>freemind.modes.attributes.AttributeRegistryElement</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.attributes.AttributeRegistry</srcNode>
<endNode>freemind.modes.attributes.AttributeRegistryTableModel</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.attributes.AttributeRegistry</srcNode>
<endNode>freemind.modes.attributes.AttributeTableLayoutModel</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.attributes.AttributeRegistry</srcNode>
<endNode>freemind.modes.MapRegistry</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.attributes.AttributeRegistry</srcNode>
<endNode>freemind.modes.mindmapmode.attributeactors.AttributesListener</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.attributes.AttributeRegistry</srcNode>
<endNode>freemind.modes.ModeController</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.attributes.AttributeRegistry</srcNode>
<endNode>freemind.modes.XMLElementAdapter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.attributes.AttributeRegistryComboBoxColumnModel</srcNode>
<endNode>freemind.controller.filter.util.SortedListModel</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.attributes.AttributeRegistryComboBoxColumnModel</srcNode>
<endNode>freemind.modes.attributes.AttributeController</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.attributes.AttributeRegistryComboBoxColumnModel</srcNode>
<endNode>freemind.modes.attributes.AttributeRegistry</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.attributes.AttributeRegistryElement</srcNode>
<endNode>freemind.controller.filter.util.SortedComboBoxModel</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.attributes.AttributeRegistryElement</srcNode>
<endNode>freemind.controller.filter.util.SortedMapListModel</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.attributes.AttributeRegistryElement</srcNode>
<endNode>freemind.main.XMLElement</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.attributes.AttributeRegistryElement</srcNode>
<endNode>freemind.modes.attributes.AttributeRegistry</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.attributes.AttributeRegistryElement</srcNode>
<endNode>freemind.modes.attributes.AttributeRegistryElement.RegisteredAttributeValues</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.attributes.AttributeRegistryElement</srcNode>
<endNode>freemind.modes.XMLElementAdapter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.attributes.AttributeRegistryElement.RegisteredAttributeValues</srcNode>
<endNode>freemind.controller.filter.util.SortedComboBoxModel</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.attributes.AttributeRegistryElement.RegisteredAttributeValues</srcNode>
<endNode>freemind.controller.filter.util.SortedMapListModel</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.attributes.AttributeRegistryElement.RegisteredAttributeValues</srcNode>
<endNode>freemind.modes.attributes.AttributeController</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.attributes.AttributeRegistryElement.RegisteredAttributeValues</srcNode>
<endNode>freemind.modes.attributes.AttributeRegistry</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.attributes.AttributeRegistryElement.RegisteredAttributeValues</srcNode>
<endNode>freemind.modes.attributes.AttributeRegistryElement</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.attributes.AttributeRegistryTableModel</srcNode>
<endNode>freemind.main.Resources</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.attributes.AttributeRegistryTableModel</srcNode>
<endNode>freemind.modes.attributes.AttributeRegistry</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.attributes.AttributeRegistryTableModel</srcNode>
<endNode>freemind.modes.attributes.AttributeRegistryElement</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.attributes.AttributeTableLayoutModel</srcNode>
<endNode>freemind.modes.attributes.ColumnWidthChangeEvent</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.attributes.AttributeTableLayoutModel</srcNode>
<endNode>freemind.modes.attributes.ColumnWidthChangeListener</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.attributes.AttributeTableModel</srcNode>
<endNode>freemind.modes.MindMapNode</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.attributes.ColumnWidthChangeListener</srcNode>
<endNode>freemind.modes.attributes.ColumnWidthChangeEvent</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.attributes.NodeAttributeTableModel</srcNode>
<endNode>freemind.main.Resources</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.attributes.NodeAttributeTableModel</srcNode>
<endNode>freemind.main.XMLElement</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.attributes.NodeAttributeTableModel</srcNode>
<endNode>freemind.modes.attributes.Attribute</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.attributes.NodeAttributeTableModel</srcNode>
<endNode>freemind.modes.attributes.AttributeController</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.attributes.NodeAttributeTableModel</srcNode>
<endNode>freemind.modes.attributes.AttributeRegistry</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.attributes.NodeAttributeTableModel</srcNode>
<endNode>freemind.modes.attributes.AttributeTableLayoutModel</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.attributes.NodeAttributeTableModel</srcNode>
<endNode>freemind.modes.attributes.AttributeTableModel</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.attributes.NodeAttributeTableModel</srcNode>
<endNode>freemind.modes.MapRegistry</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.attributes.NodeAttributeTableModel</srcNode>
<endNode>freemind.modes.MindMap</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.attributes.NodeAttributeTableModel</srcNode>
<endNode>freemind.modes.MindMapNode</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.attributes.NodeAttributeTableModel</srcNode>
<endNode>freemind.modes.ModeController</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.attributes.NodeAttributeTableModel</srcNode>
<endNode>freemind.modes.XMLElementAdapter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.browsemode.BrowseArrowLinkModel</srcNode>
<endNode>freemind.main.FreeMindMain</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.browsemode.BrowseArrowLinkModel</srcNode>
<endNode>freemind.main.XMLElement</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.browsemode.BrowseArrowLinkModel</srcNode>
<endNode>freemind.modes.ArrowLinkAdapter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.browsemode.BrowseArrowLinkModel</srcNode>
<endNode>freemind.modes.LineAdapter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.browsemode.BrowseArrowLinkModel</srcNode>
<endNode>freemind.modes.LinkAdapter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.browsemode.BrowseArrowLinkModel</srcNode>
<endNode>freemind.modes.MindMapNode</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.browsemode.BrowseArrowLinkModel</srcNode>
<endNode>freemind.view.mindmapview.MapView</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.browsemode.BrowseCloudModel</srcNode>
<endNode>freemind.main.FreeMindMain</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.browsemode.BrowseCloudModel</srcNode>
<endNode>freemind.main.XMLElement</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.browsemode.BrowseCloudModel</srcNode>
<endNode>freemind.modes.CloudAdapter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.browsemode.BrowseCloudModel</srcNode>
<endNode>freemind.modes.MindMapNode</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.browsemode.BrowseController</srcNode>
<endNode>freemind.controller.Controller</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.browsemode.BrowseController</srcNode>
<endNode>freemind.controller.MenuBar</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.browsemode.BrowseController</srcNode>
<endNode>freemind.controller.StructuredMenuHolder</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.browsemode.BrowseController</srcNode>
<endNode>freemind.extensions.HookFactory</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.browsemode.BrowseController</srcNode>
<endNode>freemind.main.Tools</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.browsemode.BrowseController</srcNode>
<endNode>freemind.main.XMLElement</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.browsemode.BrowseController</srcNode>
<endNode>freemind.main.XMLParseException</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.browsemode.BrowseController</srcNode>
<endNode>freemind.modes.browsemode.BrowseArrowLinkModel</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.browsemode.BrowseController</srcNode>
<endNode>freemind.modes.browsemode.BrowseController.FollowLinkAction</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.browsemode.BrowseController</srcNode>
<endNode>freemind.modes.browsemode.BrowseController.FollowMapLink</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.browsemode.BrowseController</srcNode>
<endNode>freemind.modes.browsemode.BrowseHookFactory</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.browsemode.BrowseController</srcNode>
<endNode>freemind.modes.browsemode.BrowseMapModel</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.browsemode.BrowseController</srcNode>
<endNode>freemind.modes.browsemode.BrowseNodeModel</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.browsemode.BrowseController</srcNode>
<endNode>freemind.modes.browsemode.BrowsePopupMenu</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.browsemode.BrowseController</srcNode>
<endNode>freemind.modes.browsemode.BrowseToolBar</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.browsemode.BrowseController</srcNode>
<endNode>freemind.modes.browsemode.BrowseXMLElement</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.browsemode.BrowseController</srcNode>
<endNode>freemind.modes.browsemode.NodeNoteViewer</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.browsemode.BrowseController</srcNode>
<endNode>freemind.modes.common.CommonToggleFoldedAction</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.browsemode.BrowseController</srcNode>
<endNode>freemind.modes.common.GotoLinkNodeAction</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.browsemode.BrowseController</srcNode>
<endNode>freemind.modes.common.plugins.NodeNoteBase</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.browsemode.BrowseController</srcNode>
<endNode>freemind.modes.ControllerAdapter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.browsemode.BrowseController</srcNode>
<endNode>freemind.modes.LineAdapter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.browsemode.BrowseController</srcNode>
<endNode>freemind.modes.LinkAdapter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.browsemode.BrowseController</srcNode>
<endNode>freemind.modes.MapAdapter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.browsemode.BrowseController</srcNode>
<endNode>freemind.modes.MindMap</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.browsemode.BrowseController</srcNode>
<endNode>freemind.modes.MindMapLinkRegistry</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.browsemode.BrowseController</srcNode>
<endNode>freemind.modes.MindMapNode</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.browsemode.BrowseController</srcNode>
<endNode>freemind.modes.Mode</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.browsemode.BrowseController</srcNode>
<endNode>freemind.modes.ModeController</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.browsemode.BrowseController</srcNode>
<endNode>freemind.modes.NodeAdapter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.browsemode.BrowseController</srcNode>
<endNode>freemind.modes.viewmodes.ViewControllerAdapter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.browsemode.BrowseController</srcNode>
<endNode>freemind.view.mindmapview.MainView</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.browsemode.BrowseController</srcNode>
<endNode>freemind.view.mindmapview.NodeView</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.browsemode.BrowseController.FollowLinkAction</srcNode>
<endNode>freemind.modes.ControllerAdapter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.browsemode.BrowseController.FollowMapLink</srcNode>
<endNode>freemind.controller.MenuItemEnabledListener</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.browsemode.BrowseController.FollowMapLink</srcNode>
<endNode>freemind.main.FreeMindMain</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.browsemode.BrowseController.FollowMapLink</srcNode>
<endNode>freemind.main.Resources</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.browsemode.BrowseController.FollowMapLink</srcNode>
<endNode>freemind.modes.common.plugins.MapNodePositionHolderBase</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.browsemode.BrowseController.FollowMapLink</srcNode>
<endNode>freemind.modes.ControllerAdapter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.browsemode.BrowseController.FollowMapLink</srcNode>
<endNode>freemind.modes.MindMapNode</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.browsemode.BrowseController.FollowMapLink</srcNode>
<endNode>freemind.modes.viewmodes.ViewControllerAdapter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.browsemode.BrowseEdgeModel</srcNode>
<endNode>freemind.main.FreeMindMain</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.browsemode.BrowseEdgeModel</srcNode>
<endNode>freemind.main.XMLElement</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.browsemode.BrowseEdgeModel</srcNode>
<endNode>freemind.modes.EdgeAdapter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.browsemode.BrowseEdgeModel</srcNode>
<endNode>freemind.modes.LineAdapter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.browsemode.BrowseEdgeModel</srcNode>
<endNode>freemind.modes.MindMapNode</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.browsemode.BrowseHookFactory</srcNode>
<endNode>freemind.extensions.HookFactoryAdapter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.browsemode.BrowseHookFactory</srcNode>
<endNode>freemind.extensions.HookInstanciationMethod</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.browsemode.BrowseHookFactory</srcNode>
<endNode>freemind.extensions.MindMapHook</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.browsemode.BrowseHookFactory</srcNode>
<endNode>freemind.extensions.ModeControllerHook</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.browsemode.BrowseHookFactory</srcNode>
<endNode>freemind.extensions.NodeHook</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.browsemode.BrowseHookFactory</srcNode>
<endNode>freemind.extensions.PermanentNodeHookSubstituteUnknown</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.browsemode.BrowseHookFactory</srcNode>
<endNode>freemind.modes.browsemode.BrowseReminderHook</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.browsemode.BrowseHookFactory</srcNode>
<endNode>freemind.modes.common.plugins.MapNodePositionHolderBase</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.browsemode.BrowseHookFactory</srcNode>
<endNode>freemind.modes.common.plugins.ReminderHookBase</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.browsemode.BrowseMapModel</srcNode>
<endNode>freemind.controller.Controller</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.browsemode.BrowseMapModel</srcNode>
<endNode>freemind.main.FreeMindMain</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.browsemode.BrowseMapModel</srcNode>
<endNode>freemind.modes.browsemode.BrowseNodeModel</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.browsemode.BrowseMapModel</srcNode>
<endNode>freemind.modes.MapAdapter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.browsemode.BrowseMapModel</srcNode>
<endNode>freemind.modes.MindMapLinkRegistry</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.browsemode.BrowseMapModel</srcNode>
<endNode>freemind.modes.ModeController</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.browsemode.BrowseMode</srcNode>
<endNode>freemind.controller.Controller</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.browsemode.BrowseMode</srcNode>
<endNode>freemind.controller.MapModuleManager</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.browsemode.BrowseMode</srcNode>
<endNode>freemind.main.Resources</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.browsemode.BrowseMode</srcNode>
<endNode>freemind.modes.browsemode.BrowseController</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.browsemode.BrowseMode</srcNode>
<endNode>freemind.modes.browsemode.BrowseToolBar</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.browsemode.BrowseMode</srcNode>
<endNode>freemind.modes.Mode</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.browsemode.BrowseMode</srcNode>
<endNode>freemind.modes.ModeController</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.browsemode.BrowseNodeModel</srcNode>
<endNode>freemind.main.FreeMindMain</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.browsemode.BrowseNodeModel</srcNode>
<endNode>freemind.main.XMLElement</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.browsemode.BrowseNodeModel</srcNode>
<endNode>freemind.modes.browsemode.BrowseEdgeModel</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.browsemode.BrowseNodeModel</srcNode>
<endNode>freemind.modes.MindMap</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.browsemode.BrowseNodeModel</srcNode>
<endNode>freemind.modes.NodeAdapter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.browsemode.BrowsePopupMenu</srcNode>
<endNode>freemind.main.FreeMindMain</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.browsemode.BrowsePopupMenu</srcNode>
<endNode>freemind.modes.browsemode.BrowseController</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.browsemode.BrowsePopupMenu</srcNode>
<endNode>freemind.modes.browsemode.BrowseController.FollowMapLink</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.browsemode.BrowsePopupMenu</srcNode>
<endNode>freemind.modes.ControllerAdapter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.browsemode.BrowsePopupMenu</srcNode>
<endNode>freemind.modes.viewmodes.ViewControllerAdapter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.browsemode.BrowseReminderHook</srcNode>
<endNode>freemind.extensions.HookAdapter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.browsemode.BrowseReminderHook</srcNode>
<endNode>freemind.modes.common.plugins.ReminderHookBase</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.browsemode.BrowseReminderHook</srcNode>
<endNode>freemind.modes.MindMapNode</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.browsemode.BrowseReminderHook</srcNode>
<endNode>freemind.modes.ModeController</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.browsemode.BrowseToolBar</srcNode>
<endNode>freemind.controller.Controller</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.browsemode.BrowseToolBar</srcNode>
<endNode>freemind.modes.common.dialogs.PersistentEditableComboBox</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.browsemode.BrowseToolBar</srcNode>
<endNode>freemind.modes.ControllerAdapter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.browsemode.BrowseToolBar.BrowseToolBar.(Anon_1)</srcNode>
<endNode>freemind.controller.Controller</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.browsemode.BrowseToolBar.BrowseToolBar.(Anon_1)</srcNode>
<endNode>freemind.main.Resources</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.browsemode.BrowseToolBar.BrowseToolBar.(Anon_1)</srcNode>
<endNode>freemind.modes.browsemode.BrowseToolBar</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.browsemode.BrowseToolBar.BrowseToolBar.(Anon_1)</srcNode>
<endNode>freemind.modes.common.dialogs.PersistentEditableComboBox</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.browsemode.BrowseToolBar.BrowseToolBar.(Anon_1)</srcNode>
<endNode>freemind.modes.ControllerAdapter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.browsemode.BrowseXMLElement</srcNode>
<endNode>freemind.main.FreeMindMain</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.browsemode.BrowseXMLElement</srcNode>
<endNode>freemind.main.XMLElement</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.browsemode.BrowseXMLElement</srcNode>
<endNode>freemind.modes.ArrowLinkAdapter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.browsemode.BrowseXMLElement</srcNode>
<endNode>freemind.modes.ArrowLinkTarget</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.browsemode.BrowseXMLElement</srcNode>
<endNode>freemind.modes.browsemode.BrowseArrowLinkModel</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.browsemode.BrowseXMLElement</srcNode>
<endNode>freemind.modes.browsemode.BrowseCloudModel</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.browsemode.BrowseXMLElement</srcNode>
<endNode>freemind.modes.browsemode.BrowseEdgeModel</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.browsemode.BrowseXMLElement</srcNode>
<endNode>freemind.modes.browsemode.BrowseNodeModel</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.browsemode.BrowseXMLElement</srcNode>
<endNode>freemind.modes.browsemode.EncryptedBrowseNode</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.browsemode.BrowseXMLElement</srcNode>
<endNode>freemind.modes.CloudAdapter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.browsemode.BrowseXMLElement</srcNode>
<endNode>freemind.modes.EdgeAdapter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.browsemode.BrowseXMLElement</srcNode>
<endNode>freemind.modes.ModeController</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.browsemode.BrowseXMLElement</srcNode>
<endNode>freemind.modes.NodeAdapter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.browsemode.BrowseXMLElement</srcNode>
<endNode>freemind.modes.XMLElementAdapter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.browsemode.EncryptedBrowseNode</srcNode>
<endNode>freemind.main.FreeMindMain</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.browsemode.EncryptedBrowseNode</srcNode>
<endNode>freemind.main.Resources</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.browsemode.EncryptedBrowseNode</srcNode>
<endNode>freemind.main.Tools.DesEncrypter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.browsemode.EncryptedBrowseNode</srcNode>
<endNode>freemind.main.Tools.SingleDesEncrypter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.browsemode.EncryptedBrowseNode</srcNode>
<endNode>freemind.main.XMLParseException</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.browsemode.EncryptedBrowseNode</srcNode>
<endNode>freemind.modes.browsemode.BrowseNodeModel</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.browsemode.EncryptedBrowseNode</srcNode>
<endNode>freemind.modes.common.dialogs.EnterPasswordDialog</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.browsemode.EncryptedBrowseNode</srcNode>
<endNode>freemind.modes.ControllerAdapter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.browsemode.EncryptedBrowseNode</srcNode>
<endNode>freemind.modes.MapAdapter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.browsemode.EncryptedBrowseNode</srcNode>
<endNode>freemind.modes.MindIcon</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.browsemode.EncryptedBrowseNode</srcNode>
<endNode>freemind.modes.ModeController</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.browsemode.EncryptedBrowseNode</srcNode>
<endNode>freemind.modes.NodeAdapter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.browsemode.NodeNoteViewer</srcNode>
<endNode>freemind.main.FreeMindMain</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.browsemode.NodeNoteViewer</srcNode>
<endNode>freemind.modes.common.plugins.NodeNoteBase</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.browsemode.NodeNoteViewer</srcNode>
<endNode>freemind.modes.ControllerAdapter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.browsemode.NodeNoteViewer</srcNode>
<endNode>freemind.modes.MindMapNode</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.browsemode.NodeNoteViewer</srcNode>
<endNode>freemind.modes.ModeController.NodeSelectionListener</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.browsemode.NodeNoteViewer</srcNode>
<endNode>freemind.view.mindmapview.NodeView</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.CloudAdapter</srcNode>
<endNode>freemind.controller.Controller</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.CloudAdapter</srcNode>
<endNode>freemind.main.FreeMind</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.CloudAdapter</srcNode>
<endNode>freemind.main.FreeMindMain</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.CloudAdapter</srcNode>
<endNode>freemind.main.Tools</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.CloudAdapter</srcNode>
<endNode>freemind.main.XMLElement</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.CloudAdapter</srcNode>
<endNode>freemind.modes.CloudAdapter.CloudAdapterListener</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.CloudAdapter</srcNode>
<endNode>freemind.modes.LineAdapter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.CloudAdapter</srcNode>
<endNode>freemind.modes.MindMapCloud</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.CloudAdapter</srcNode>
<endNode>freemind.modes.MindMapNode</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.CloudAdapter.CloudAdapterListener</srcNode>
<endNode>freemind.main.FreeMind</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.CloudAdapter.CloudAdapterListener</srcNode>
<endNode>freemind.main.Tools</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.CloudAdapter.CloudAdapterListener</srcNode>
<endNode>freemind.modes.CloudAdapter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.CloudAdapter.CloudAdapterListener</srcNode>
<endNode>freemind.preferences.FreemindPropertyListener</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.common.actions.FindAction</srcNode>
<endNode>freemind.controller.Controller</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.common.actions.FindAction</srcNode>
<endNode>freemind.main.FreeMind</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.common.actions.FindAction</srcNode>
<endNode>freemind.main.FreeMindMain</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.common.actions.FindAction</srcNode>
<endNode>freemind.main.HtmlTools</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.common.actions.FindAction</srcNode>
<endNode>freemind.main.Resources</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.common.actions.FindAction</srcNode>
<endNode>freemind.main.Tools</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.common.actions.FindAction</srcNode>
<endNode>freemind.modes.ControllerAdapter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.common.actions.FindAction</srcNode>
<endNode>freemind.modes.MindMap</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.common.actions.FindAction</srcNode>
<endNode>freemind.modes.MindMapNode</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.common.actions.FindAction</srcNode>
<endNode>freemind.modes.ModeController</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.common.actions.FindAction</srcNode>
<endNode>freemind.view.mindmapview.MapView</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.common.actions.FindAction.displayDialog.(Anon_1)</srcNode>
<endNode>freemind.modes.common.actions.FindAction</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.common.actions.FindAction.displayDialog.(Anon_2)</srcNode>
<endNode>freemind.modes.common.actions.FindAction</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.common.actions.FindAction.displayDialog.(Anon_3)</srcNode>
<endNode>freemind.modes.common.actions.FindAction</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.common.actions.FindAction.FindNextAction</srcNode>
<endNode>freemind.controller.Controller</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.common.actions.FindAction.FindNextAction</srcNode>
<endNode>freemind.modes.common.actions.FindAction</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.common.actions.FindAction.FindNextAction</srcNode>
<endNode>freemind.modes.ControllerAdapter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.common.actions.FindAction.FindNextAction</srcNode>
<endNode>freemind.view.mindmapview.MapView</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.common.actions.NewMapAction</srcNode>
<endNode>freemind.modes.ModeController</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.common.CommonNodeKeyListener</srcNode>
<endNode>freemind.main.FreeMindMain</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.common.CommonNodeKeyListener</srcNode>
<endNode>freemind.main.Resources</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.common.CommonNodeKeyListener</srcNode>
<endNode>freemind.modes.common.CommonNodeKeyListener.EditHandler</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.common.CommonNodeKeyListener</srcNode>
<endNode>freemind.modes.ModeController</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.common.CommonNodeKeyListener</srcNode>
<endNode>freemind.view.mindmapview.MapView</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.common.CommonToggleFoldedAction</srcNode>
<endNode>freemind.main.FreeMindMain</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.common.CommonToggleFoldedAction</srcNode>
<endNode>freemind.main.Tools.BooleanHolder</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.common.CommonToggleFoldedAction</srcNode>
<endNode>freemind.modes.ControllerAdapter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.common.CommonToggleFoldedAction</srcNode>
<endNode>freemind.modes.MindMapNode</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.common.CommonToggleFoldedAction</srcNode>
<endNode>freemind.modes.ModeController</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.common.dialogs.EnterPasswordDialog</srcNode>
<endNode>freemind.common.TextTranslator</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.common.dialogs.EnterPasswordDialog</srcNode>
<endNode>freemind.main.Tools</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.common.dialogs.EnterPasswordDialog.getJCancelButton.(Anon_4)</srcNode>
<endNode>freemind.modes.common.dialogs.EnterPasswordDialog</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.common.dialogs.EnterPasswordDialog.getJOKButton.(Anon_3)</srcNode>
<endNode>freemind.modes.common.dialogs.EnterPasswordDialog</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.common.dialogs.EnterPasswordDialog.initialize.(Anon_1)</srcNode>
<endNode>freemind.modes.common.dialogs.EnterPasswordDialog</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.common.dialogs.EnterPasswordDialog.initialize.(Anon_2)</srcNode>
<endNode>freemind.modes.common.dialogs.EnterPasswordDialog</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.common.dialogs.IconSelectionPopupDialog</srcNode>
<endNode>freemind.main.FreeMindMain</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.common.dialogs.IconSelectionPopupDialog</srcNode>
<endNode>freemind.modes.common.dialogs.IconSelectionPopupDialog.Position</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.common.dialogs.IconSelectionPopupDialog</srcNode>
<endNode>freemind.modes.IconInformation</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.common.dialogs.IconSelectionPopupDialog.IconSelectionPopupDialog.(Anon_1)</srcNode>
<endNode>freemind.modes.common.dialogs.IconSelectionPopupDialog</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.common.dialogs.PersistentEditableComboBox</srcNode>
<endNode>freemind.main.FreeMindMain</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.common.dialogs.PersistentEditableComboBox</srcNode>
<endNode>freemind.modes.ModeController</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.common.dialogs.PersistentEditableComboBox.PersistentEditableComboBox.(Anon_1)</srcNode>
<endNode>freemind.modes.common.dialogs.PersistentEditableComboBox</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.common.GotoLinkNodeAction</srcNode>
<endNode>freemind.modes.MindMapNode</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.common.GotoLinkNodeAction</srcNode>
<endNode>freemind.modes.ModeController</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.common.listeners.CommonMouseMotionManager</srcNode>
<endNode>freemind.controller.MapMouseMotionListener.MapMouseMotionReceiver</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.common.listeners.CommonMouseMotionManager</srcNode>
<endNode>freemind.modes.ModeController</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.common.listeners.CommonMouseMotionManager</srcNode>
<endNode>freemind.view.mindmapview.MapView</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.common.listeners.CommonNodeMouseMotionListener</srcNode>
<endNode>freemind.controller.NodeMouseMotionListener.NodeMouseMotionObserver</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.common.listeners.CommonNodeMouseMotionListener</srcNode>
<endNode>freemind.main.FreeMindMain</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.common.listeners.CommonNodeMouseMotionListener</srcNode>
<endNode>freemind.main.Tools</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.common.listeners.CommonNodeMouseMotionListener</srcNode>
<endNode>freemind.main.Tools.BooleanHolder</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.common.listeners.CommonNodeMouseMotionListener</srcNode>
<endNode>freemind.main.Tools.IntHolder</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.common.listeners.CommonNodeMouseMotionListener</srcNode>
<endNode>freemind.modes.common.listeners.CommonNodeMouseMotionListener.timeDelayedSelection</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.common.listeners.CommonNodeMouseMotionListener</srcNode>
<endNode>freemind.modes.ModeController</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.common.listeners.CommonNodeMouseMotionListener</srcNode>
<endNode>freemind.view.mindmapview.MainView</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.common.listeners.CommonNodeMouseMotionListener</srcNode>
<endNode>freemind.view.mindmapview.MapView</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.common.listeners.CommonNodeMouseMotionListener</srcNode>
<endNode>freemind.view.mindmapview.NodeView</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.common.listeners.CommonNodeMouseMotionListener.timeDelayedSelection</srcNode>
<endNode>freemind.modes.ModeController</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.common.listeners.CommonNodeMouseMotionListener.timeDelayedSelection.run.(Anon_1)</srcNode>
<endNode>freemind.modes.common.listeners.CommonNodeMouseMotionListener.timeDelayedSelection</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.common.listeners.CommonNodeMouseMotionListener.timeDelayedSelection.run.(Anon_1)</srcNode>
<endNode>freemind.modes.ModeController</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.common.listeners.CommonNodeMouseMotionListener.timeDelayedSelection.run.(Anon_1)</srcNode>
<endNode>freemind.view.mindmapview.MapView</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.common.listeners.MindMapMouseWheelEventHandler</srcNode>
<endNode>freemind.controller.Controller</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.common.listeners.MindMapMouseWheelEventHandler</srcNode>
<endNode>freemind.main.FreeMind</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.common.listeners.MindMapMouseWheelEventHandler</srcNode>
<endNode>freemind.main.FreeMindMain</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.common.listeners.MindMapMouseWheelEventHandler</srcNode>
<endNode>freemind.main.Resources</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.common.listeners.MindMapMouseWheelEventHandler</srcNode>
<endNode>freemind.modes.ControllerAdapter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.common.listeners.MindMapMouseWheelEventHandler</srcNode>
<endNode>freemind.modes.MindMap</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.common.listeners.MindMapMouseWheelEventHandler</srcNode>
<endNode>freemind.modes.mindmapmode.actions.MindMapActions.MouseWheelEventHandler</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.common.listeners.MindMapMouseWheelEventHandler</srcNode>
<endNode>freemind.view.mindmapview.MapView</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.common.listeners.MindMapMouseWheelEventHandler.MindMapMouseWheelEventHandler.(Anon_1)</srcNode>
<endNode>freemind.main.FreeMind</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.common.listeners.MindMapMouseWheelEventHandler.MindMapMouseWheelEventHandler.(Anon_1)</srcNode>
<endNode>freemind.modes.common.listeners.MindMapMouseWheelEventHandler</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.common.listeners.MindMapMouseWheelEventHandler.MindMapMouseWheelEventHandler.(Anon_1)</srcNode>
<endNode>freemind.preferences.FreemindPropertyListener</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.common.plugins.MapNodePositionHolderBase</srcNode>
<endNode>freemind.extensions.HookAdapter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.common.plugins.MapNodePositionHolderBase</srcNode>
<endNode>freemind.extensions.NodeHookAdapter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.common.plugins.MapNodePositionHolderBase</srcNode>
<endNode>freemind.extensions.PermanentNodeHook</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.common.plugins.MapNodePositionHolderBase</srcNode>
<endNode>freemind.extensions.PermanentNodeHookAdapter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.common.plugins.MapNodePositionHolderBase</srcNode>
<endNode>freemind.main.Resources</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.common.plugins.MapNodePositionHolderBase</srcNode>
<endNode>freemind.main.Tools</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.common.plugins.MapNodePositionHolderBase</srcNode>
<endNode>freemind.main.XMLElement</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.common.plugins.MapNodePositionHolderBase</srcNode>
<endNode>freemind.modes.MindMapNode</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.common.plugins.ReminderHookBase</srcNode>
<endNode>freemind.extensions.HookAdapter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.common.plugins.ReminderHookBase</srcNode>
<endNode>freemind.extensions.NodeHookAdapter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.common.plugins.ReminderHookBase</srcNode>
<endNode>freemind.extensions.PermanentNodeHookAdapter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.common.plugins.ReminderHookBase</srcNode>
<endNode>freemind.main.XMLElement</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.common.plugins.ReminderHookBase</srcNode>
<endNode>freemind.modes.common.plugins.ReminderHookBase.TimerBlinkTask</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.common.plugins.ReminderHookBase</srcNode>
<endNode>freemind.modes.MindIcon</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.common.plugins.ReminderHookBase</srcNode>
<endNode>freemind.modes.MindMapNode</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.common.plugins.ReminderHookBase.TimerBlinkTask</srcNode>
<endNode>freemind.extensions.NodeHookAdapter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.common.plugins.ReminderHookBase.TimerBlinkTask</srcNode>
<endNode>freemind.modes.common.plugins.ReminderHookBase</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.ControllerAdapter</srcNode>
<endNode>freemind.controller.Controller</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.ControllerAdapter</srcNode>
<endNode>freemind.controller.LastStateStorageManagement</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.ControllerAdapter</srcNode>
<endNode>freemind.controller.MapModuleManager</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.ControllerAdapter</srcNode>
<endNode>freemind.controller.MapMouseWheelListener</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.ControllerAdapter</srcNode>
<endNode>freemind.controller.MindMapNodesSelection</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.ControllerAdapter</srcNode>
<endNode>freemind.controller.StructuredMenuHolder</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.ControllerAdapter</srcNode>
<endNode>freemind.extensions.MindMapHook</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.ControllerAdapter</srcNode>
<endNode>freemind.extensions.NodeHook</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.ControllerAdapter</srcNode>
<endNode>freemind.extensions.PermanentNodeHook</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.ControllerAdapter</srcNode>
<endNode>freemind.main.FreeMindCommon</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.ControllerAdapter</srcNode>
<endNode>freemind.main.FreeMindMain</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.ControllerAdapter</srcNode>
<endNode>freemind.main.Resources</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.ControllerAdapter</srcNode>
<endNode>freemind.main.Tools</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.ControllerAdapter</srcNode>
<endNode>freemind.main.XMLElement</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.ControllerAdapter</srcNode>
<endNode>freemind.main.XMLParseException</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.ControllerAdapter</srcNode>
<endNode>freemind.modes.attributes.AttributeController</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.ControllerAdapter</srcNode>
<endNode>freemind.modes.common.listeners.MindMapMouseWheelEventHandler</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.ControllerAdapter</srcNode>
<endNode>freemind.modes.ControllerAdapter.ControllerPopupMenuListener</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.ControllerAdapter</srcNode>
<endNode>freemind.modes.ControllerAdapter.FileOpener</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.ControllerAdapter</srcNode>
<endNode>freemind.modes.ControllerAdapter.nodesDepthComparator</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.ControllerAdapter</srcNode>
<endNode>freemind.modes.FreeMindAwtFileDialog</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.ControllerAdapter</srcNode>
<endNode>freemind.modes.FreeMindFileDialog</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.ControllerAdapter</srcNode>
<endNode>freemind.modes.FreeMindFileDialog.DirectoryResultListener</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.ControllerAdapter</srcNode>
<endNode>freemind.modes.FreeMindJFileDialog</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.ControllerAdapter</srcNode>
<endNode>freemind.modes.HistoryInformation</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.ControllerAdapter</srcNode>
<endNode>freemind.modes.MapAdapter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.ControllerAdapter</srcNode>
<endNode>freemind.modes.MindMap</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.ControllerAdapter</srcNode>
<endNode>freemind.modes.MindMapLinkRegistry</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.ControllerAdapter</srcNode>
<endNode>freemind.modes.MindMapNode</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.ControllerAdapter</srcNode>
<endNode>freemind.modes.Mode</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.ControllerAdapter</srcNode>
<endNode>freemind.modes.ModeController</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.ControllerAdapter</srcNode>
<endNode>freemind.modes.ModeController.NodeLifetimeListener</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.ControllerAdapter</srcNode>
<endNode>freemind.modes.ModeController.NodeSelectionListener</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.ControllerAdapter</srcNode>
<endNode>freemind.modes.NodeAdapter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.ControllerAdapter</srcNode>
<endNode>freemind.modes.XMLElementAdapter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.ControllerAdapter</srcNode>
<endNode>freemind.view.MapModule</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.ControllerAdapter</srcNode>
<endNode>freemind.view.mindmapview.MapView</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.ControllerAdapter</srcNode>
<endNode>freemind.view.mindmapview.NodeView</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.ControllerAdapter.ControllerPopupMenuListener</srcNode>
<endNode>freemind.modes.ControllerAdapter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.ControllerAdapter.EditAttributesAction</srcNode>
<endNode>freemind.main.Resources</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.ControllerAdapter.EditAttributesAction</srcNode>
<endNode>freemind.modes.ControllerAdapter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.ControllerAdapter.EditAttributesAction</srcNode>
<endNode>freemind.view.mindmapview.attributeview.AttributeView</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.ControllerAdapter.EditAttributesAction</srcNode>
<endNode>freemind.view.mindmapview.MapView</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.ControllerAdapter.EditAttributesAction</srcNode>
<endNode>freemind.view.mindmapview.NodeView</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.ControllerAdapter.FileOpener</srcNode>
<endNode>freemind.modes.ControllerAdapter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.ControllerAdapter.nodesDepthComparator</srcNode>
<endNode>freemind.modes.ControllerAdapter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.ControllerAdapter.nodesDepthComparator</srcNode>
<endNode>freemind.modes.MindMapNode</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.ControllerAdapter.OpenAction</srcNode>
<endNode>freemind.controller.Controller</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.ControllerAdapter.OpenAction</srcNode>
<endNode>freemind.modes.ControllerAdapter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.ControllerAdapter.SaveAction</srcNode>
<endNode>freemind.controller.Controller</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.ControllerAdapter.SaveAction</srcNode>
<endNode>freemind.main.FreeMindMain</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.ControllerAdapter.SaveAction</srcNode>
<endNode>freemind.main.Tools</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.ControllerAdapter.SaveAction</srcNode>
<endNode>freemind.modes.ControllerAdapter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.ControllerAdapter.SaveAsAction</srcNode>
<endNode>freemind.controller.Controller</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.ControllerAdapter.SaveAsAction</srcNode>
<endNode>freemind.modes.ControllerAdapter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.EdgeAdapter</srcNode>
<endNode>freemind.controller.Controller</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.EdgeAdapter</srcNode>
<endNode>freemind.main.FreeMind</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.EdgeAdapter</srcNode>
<endNode>freemind.main.FreeMindMain</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.EdgeAdapter</srcNode>
<endNode>freemind.main.Tools</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.EdgeAdapter</srcNode>
<endNode>freemind.main.XMLElement</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.EdgeAdapter</srcNode>
<endNode>freemind.modes.EdgeAdapter.EdgeAdapterListener</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.EdgeAdapter</srcNode>
<endNode>freemind.modes.LineAdapter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.EdgeAdapter</srcNode>
<endNode>freemind.modes.MindMapEdge</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.EdgeAdapter</srcNode>
<endNode>freemind.modes.MindMapLine</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.EdgeAdapter</srcNode>
<endNode>freemind.modes.MindMapNode</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.EdgeAdapter.EdgeAdapterListener</srcNode>
<endNode>freemind.main.FreeMind</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.EdgeAdapter.EdgeAdapterListener</srcNode>
<endNode>freemind.main.Tools</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.EdgeAdapter.EdgeAdapterListener</srcNode>
<endNode>freemind.modes.EdgeAdapter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.EdgeAdapter.EdgeAdapterListener</srcNode>
<endNode>freemind.preferences.FreemindPropertyListener</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.filemode.FileController</srcNode>
<endNode>freemind.controller.MenuBar</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.filemode.FileController</srcNode>
<endNode>freemind.controller.StructuredMenuHolder</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.filemode.FileController</srcNode>
<endNode>freemind.extensions.HookFactory</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.filemode.FileController</srcNode>
<endNode>freemind.modes.common.actions.NewMapAction</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.filemode.FileController</srcNode>
<endNode>freemind.modes.ControllerAdapter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.filemode.FileController</srcNode>
<endNode>freemind.modes.filemode.FileController.CenterAction</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.filemode.FileController</srcNode>
<endNode>freemind.modes.filemode.FileController.OpenPathAction</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.filemode.FileController</srcNode>
<endNode>freemind.modes.filemode.FileMapModel</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.filemode.FileController</srcNode>
<endNode>freemind.modes.filemode.FileMode</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.filemode.FileController</srcNode>
<endNode>freemind.modes.filemode.FileNodeModel</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.filemode.FileController</srcNode>
<endNode>freemind.modes.filemode.FilePopupMenu</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.filemode.FileController</srcNode>
<endNode>freemind.modes.MapAdapter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.filemode.FileController</srcNode>
<endNode>freemind.modes.MindMap</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.filemode.FileController</srcNode>
<endNode>freemind.modes.MindMapNode</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.filemode.FileController</srcNode>
<endNode>freemind.modes.Mode</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.filemode.FileController</srcNode>
<endNode>freemind.modes.ModeController</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.filemode.FileController</srcNode>
<endNode>freemind.modes.viewmodes.ViewControllerAdapter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.filemode.FileController</srcNode>
<endNode>freemind.view.mindmapview.MainView</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.filemode.FileController</srcNode>
<endNode>freemind.view.mindmapview.NodeView</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.filemode.FileController.CenterAction</srcNode>
<endNode>freemind.controller.Controller</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.filemode.FileController.CenterAction</srcNode>
<endNode>freemind.modes.ControllerAdapter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.filemode.FileController.CenterAction</srcNode>
<endNode>freemind.modes.filemode.FileController</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.filemode.FileController.CenterAction</srcNode>
<endNode>freemind.modes.filemode.FileMapModel</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.filemode.FileController.CenterAction</srcNode>
<endNode>freemind.modes.filemode.FileNodeModel</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.filemode.FileController.CenterAction</srcNode>
<endNode>freemind.modes.MindMap</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.filemode.FileController.OpenPathAction</srcNode>
<endNode>freemind.controller.Controller</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.filemode.FileController.OpenPathAction</srcNode>
<endNode>freemind.modes.ControllerAdapter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.filemode.FileController.OpenPathAction</srcNode>
<endNode>freemind.modes.filemode.FileController</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.filemode.FileController.OpenPathAction</srcNode>
<endNode>freemind.modes.filemode.FileMapModel</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.filemode.FileController.OpenPathAction</srcNode>
<endNode>freemind.modes.MindMap</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.filemode.FileController.OpenPathAction</srcNode>
<endNode>freemind.view.mindmapview.MapView</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.filemode.FileEdgeModel</srcNode>
<endNode>freemind.main.FreeMindMain</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.filemode.FileEdgeModel</srcNode>
<endNode>freemind.modes.EdgeAdapter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.filemode.FileEdgeModel</srcNode>
<endNode>freemind.modes.MindMapNode</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.filemode.FileMapModel</srcNode>
<endNode>freemind.main.FreeMindMain</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.filemode.FileMapModel</srcNode>
<endNode>freemind.modes.filemode.FileNodeModel</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.filemode.FileMapModel</srcNode>
<endNode>freemind.modes.MapAdapter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.filemode.FileMapModel</srcNode>
<endNode>freemind.modes.MindMapLinkRegistry</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.filemode.FileMapModel</srcNode>
<endNode>freemind.modes.MindMapNode</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.filemode.FileMapModel</srcNode>
<endNode>freemind.modes.ModeController</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.filemode.FileMode</srcNode>
<endNode>freemind.controller.Controller</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.filemode.FileMode</srcNode>
<endNode>freemind.controller.MapModuleManager</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.filemode.FileMode</srcNode>
<endNode>freemind.modes.filemode.FileController</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.filemode.FileMode</srcNode>
<endNode>freemind.modes.filemode.FileToolBar</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.filemode.FileMode</srcNode>
<endNode>freemind.modes.Mode</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.filemode.FileMode</srcNode>
<endNode>freemind.modes.ModeController</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.filemode.FileNodeModel</srcNode>
<endNode>freemind.main.FreeMindMain</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.filemode.FileNodeModel</srcNode>
<endNode>freemind.main.Resources</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.filemode.FileNodeModel</srcNode>
<endNode>freemind.main.Tools</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.filemode.FileNodeModel</srcNode>
<endNode>freemind.modes.filemode.FileEdgeModel</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.filemode.FileNodeModel</srcNode>
<endNode>freemind.modes.MindMap</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.filemode.FileNodeModel</srcNode>
<endNode>freemind.modes.MindMapNode</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.filemode.FileNodeModel</srcNode>
<endNode>freemind.modes.NodeAdapter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.filemode.FilePopupMenu</srcNode>
<endNode>freemind.main.FreeMindMain</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.filemode.FilePopupMenu</srcNode>
<endNode>freemind.modes.ControllerAdapter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.filemode.FilePopupMenu</srcNode>
<endNode>freemind.modes.filemode.FileController</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.filemode.FilePopupMenu</srcNode>
<endNode>freemind.modes.viewmodes.ViewControllerAdapter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.filemode.FileToolBar</srcNode>
<endNode>freemind.modes.filemode.FileController</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.FreeMindAwtFileDialog</srcNode>
<endNode>freemind.main.Resources</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.FreeMindAwtFileDialog</srcNode>
<endNode>freemind.modes.FreeMindAwtFileDialog.DirFilter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.FreeMindAwtFileDialog</srcNode>
<endNode>freemind.modes.FreeMindAwtFileDialog.FileAndDirFilter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.FreeMindAwtFileDialog</srcNode>
<endNode>freemind.modes.FreeMindAwtFileDialog.FileOnlyFilter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.FreeMindAwtFileDialog</srcNode>
<endNode>freemind.modes.FreeMindAwtFileDialog.FreeMindFilenameFilter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.FreeMindAwtFileDialog</srcNode>
<endNode>freemind.modes.FreeMindAwtFileDialog.NullFilter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.FreeMindAwtFileDialog</srcNode>
<endNode>freemind.modes.FreeMindFileDialog</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.FreeMindAwtFileDialog</srcNode>
<endNode>freemind.modes.FreeMindFileDialog.DirectoryResultListener</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.FreeMindAwtFileDialog.FreeMindFilenameFilter</srcNode>
<endNode>freemind.modes.FreeMindAwtFileDialog.NullFilter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.FreeMindFileDialog</srcNode>
<endNode>freemind.modes.FreeMindFileDialog.DirectoryResultListener</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.FreeMindJFileDialog</srcNode>
<endNode>freemind.main.Resources</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.FreeMindJFileDialog</srcNode>
<endNode>freemind.modes.FreeMindFileDialog</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.FreeMindJFileDialog</srcNode>
<endNode>freemind.modes.FreeMindFileDialog.DirectoryResultListener</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.LineAdapter</srcNode>
<endNode>freemind.main.FreeMindMain</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.LineAdapter</srcNode>
<endNode>freemind.main.Tools</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.LineAdapter</srcNode>
<endNode>freemind.modes.MindMapLine</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.LineAdapter</srcNode>
<endNode>freemind.modes.MindMapNode</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.LinkAdapter</srcNode>
<endNode>freemind.controller.Controller</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.LinkAdapter</srcNode>
<endNode>freemind.main.FreeMind</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.LinkAdapter</srcNode>
<endNode>freemind.main.FreeMindMain</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.LinkAdapter</srcNode>
<endNode>freemind.modes.LineAdapter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.LinkAdapter</srcNode>
<endNode>freemind.modes.LinkAdapter.LinkAdapterListener</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.LinkAdapter</srcNode>
<endNode>freemind.modes.MindMapLink</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.LinkAdapter</srcNode>
<endNode>freemind.modes.MindMapNode</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.LinkAdapter.LinkAdapterListener</srcNode>
<endNode>freemind.main.FreeMind</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.LinkAdapter.LinkAdapterListener</srcNode>
<endNode>freemind.main.Tools</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.LinkAdapter.LinkAdapterListener</srcNode>
<endNode>freemind.modes.LinkAdapter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.LinkAdapter.LinkAdapterListener</srcNode>
<endNode>freemind.preferences.FreemindPropertyListener</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.MapAdapter</srcNode>
<endNode>freemind.controller.Controller</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.MapAdapter</srcNode>
<endNode>freemind.controller.filter.condition.NoFilteringCondition</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.MapAdapter</srcNode>
<endNode>freemind.controller.filter.DefaultFilter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.MapAdapter</srcNode>
<endNode>freemind.controller.filter.Filter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.MapAdapter</srcNode>
<endNode>freemind.main.FreeMindMain</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.MapAdapter</srcNode>
<endNode>freemind.main.Resources</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.MapAdapter</srcNode>
<endNode>freemind.main.Tools</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.MapAdapter</srcNode>
<endNode>freemind.main.XMLParseException</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.MapAdapter</srcNode>
<endNode>freemind.modes.MapAdapter.FileChangeInspectorTimerTask</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.MapAdapter</srcNode>
<endNode>freemind.modes.MapRegistry</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.MapAdapter</srcNode>
<endNode>freemind.modes.MindMap</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.MapAdapter</srcNode>
<endNode>freemind.modes.MindMap.MapSourceChangedObserver</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.MapAdapter</srcNode>
<endNode>freemind.modes.MindMapLinkRegistry</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.MapAdapter</srcNode>
<endNode>freemind.modes.MindMapNode</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.MapAdapter</srcNode>
<endNode>freemind.modes.ModeController</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.MapAdapter.FileChangeInspectorTimerTask</srcNode>
<endNode>freemind.main.Resources</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.MapAdapter.FileChangeInspectorTimerTask</srcNode>
<endNode>freemind.modes.MapAdapter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.MapAdapter.FileChangeInspectorTimerTask</srcNode>
<endNode>freemind.modes.MindMap.MapSourceChangedObserver</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.MapRegistry</srcNode>
<endNode>freemind.controller.filter.util.SortedMapListModel</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.MapRegistry</srcNode>
<endNode>freemind.modes.attributes.AttributeRegistry</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.MapRegistry</srcNode>
<endNode>freemind.modes.attributes.NodeAttributeTableModel</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.MapRegistry</srcNode>
<endNode>freemind.modes.MindIcon</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.MapRegistry</srcNode>
<endNode>freemind.modes.MindMap</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.MapRegistry</srcNode>
<endNode>freemind.modes.MindMapNode</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.MapRegistry</srcNode>
<endNode>freemind.modes.ModeController</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.MindIcon</srcNode>
<endNode>freemind.main.Resources</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.MindIcon</srcNode>
<endNode>freemind.main.Tools</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.MindIcon</srcNode>
<endNode>freemind.modes.IconInformation</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.MindMap</srcNode>
<endNode>freemind.controller.filter.Filter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.MindMap</srcNode>
<endNode>freemind.main.XMLParseException</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.MindMap</srcNode>
<endNode>freemind.modes.MapRegistry</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.MindMap</srcNode>
<endNode>freemind.modes.MindMap.MapSourceChangedObserver</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.MindMap</srcNode>
<endNode>freemind.modes.MindMapLinkRegistry</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.MindMap</srcNode>
<endNode>freemind.modes.MindMapNode</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.MindMap</srcNode>
<endNode>freemind.modes.ModeController</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.MindMap.MapSourceChangedObserver</srcNode>
<endNode>freemind.modes.MindMap</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.MindMapArrowLink</srcNode>
<endNode>freemind.main.XMLElement</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.MindMapArrowLink</srcNode>
<endNode>freemind.modes.MindMapLink</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.MindMapArrowLink</srcNode>
<endNode>freemind.view.mindmapview.MapView</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.MindMapCloud</srcNode>
<endNode>freemind.main.XMLElement</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.MindMapCloud</srcNode>
<endNode>freemind.modes.MindMapLine</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.MindMapEdge</srcNode>
<endNode>freemind.main.XMLElement</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.MindMapEdge</srcNode>
<endNode>freemind.modes.MindMapLine</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.MindMapLine</srcNode>
<endNode>freemind.modes.MindMapNode</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.MindMapLink</srcNode>
<endNode>freemind.modes.MindMapLine</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.MindMapLink</srcNode>
<endNode>freemind.modes.MindMapNode</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.MindMapLinkRegistry</srcNode>
<endNode>freemind.main.Resources</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.MindMapLinkRegistry</srcNode>
<endNode>freemind.main.Tools</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.MindMapLinkRegistry</srcNode>
<endNode>freemind.modes.LinkAdapter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.MindMapLinkRegistry</srcNode>
<endNode>freemind.modes.MindMapLink</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.MindMapLinkRegistry</srcNode>
<endNode>freemind.modes.MindMapLinkRegistry.SynchronousVector</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.MindMapLinkRegistry</srcNode>
<endNode>freemind.modes.MindMapNode</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.MindMapLinkRegistry.SynchronousVector</srcNode>
<endNode>freemind.modes.MindMapLink</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.MindMapLinkRegistry.SynchronousVector</srcNode>
<endNode>freemind.modes.MindMapLinkRegistry</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.MindMapLinkRegistry.SynchronousVector</srcNode>
<endNode>freemind.modes.MindMapNode</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.AddArrowLinkAction</srcNode>
<endNode>freemind.controller.Controller</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.AddArrowLinkAction</srcNode>
<endNode>freemind.main.Tools</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.AddArrowLinkAction</srcNode>
<endNode>freemind.modes.ArrowLinkAdapter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.AddArrowLinkAction</srcNode>
<endNode>freemind.modes.ControllerAdapter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.AddArrowLinkAction</srcNode>
<endNode>freemind.modes.LineAdapter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.AddArrowLinkAction</srcNode>
<endNode>freemind.modes.LinkAdapter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.AddArrowLinkAction</srcNode>
<endNode>freemind.modes.MindMap</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.AddArrowLinkAction</srcNode>
<endNode>freemind.modes.MindMapLinkRegistry</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.AddArrowLinkAction</srcNode>
<endNode>freemind.modes.mindmapmode.actions.FreemindAction</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.AddArrowLinkAction</srcNode>
<endNode>freemind.modes.mindmapmode.actions.RemoveArrowLinkAction</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.AddArrowLinkAction</srcNode>
<endNode>freemind.modes.mindmapmode.actions.xml.ActionPair</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.AddArrowLinkAction</srcNode>
<endNode>freemind.modes.mindmapmode.actions.xml.ActorXml</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.AddArrowLinkAction</srcNode>
<endNode>freemind.modes.mindmapmode.MindMapArrowLinkModel</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.AddArrowLinkAction</srcNode>
<endNode>freemind.modes.mindmapmode.MindMapController</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.AddArrowLinkAction</srcNode>
<endNode>freemind.modes.MindMapNode</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.AddLocalLinkAction</srcNode>
<endNode>freemind.controller.Controller</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.AddLocalLinkAction</srcNode>
<endNode>freemind.modes.ControllerAdapter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.AddLocalLinkAction</srcNode>
<endNode>freemind.modes.mindmapmode.actions.FreemindAction</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.AddLocalLinkAction</srcNode>
<endNode>freemind.modes.mindmapmode.MindMapController</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.AddLocalLinkAction</srcNode>
<endNode>freemind.modes.MindMapNode</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.ApplyPatternAction</srcNode>
<endNode>freemind.controller.Controller</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.ApplyPatternAction</srcNode>
<endNode>freemind.main.Tools</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.ApplyPatternAction</srcNode>
<endNode>freemind.modes.ControllerAdapter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.ApplyPatternAction</srcNode>
<endNode>freemind.modes.EdgeAdapter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.ApplyPatternAction</srcNode>
<endNode>freemind.modes.LineAdapter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.ApplyPatternAction</srcNode>
<endNode>freemind.modes.MindIcon</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.ApplyPatternAction</srcNode>
<endNode>freemind.modes.mindmapmode.actions.ApplyPatternAction.ExternalPatternAction</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.ApplyPatternAction</srcNode>
<endNode>freemind.modes.mindmapmode.actions.NodeGeneralAction</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.ApplyPatternAction</srcNode>
<endNode>freemind.modes.mindmapmode.actions.SingleNodeOperation</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.ApplyPatternAction</srcNode>
<endNode>freemind.modes.mindmapmode.actions.xml.AbstractXmlAction</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.ApplyPatternAction</srcNode>
<endNode>freemind.modes.mindmapmode.MindMapController</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.ApplyPatternAction</srcNode>
<endNode>freemind.modes.mindmapmode.MindMapController.MindMapControllerPlugin</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.ApplyPatternAction</srcNode>
<endNode>freemind.modes.mindmapmode.MindMapMapModel</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.ApplyPatternAction</srcNode>
<endNode>freemind.modes.mindmapmode.MindMapNodeModel</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.ApplyPatternAction</srcNode>
<endNode>freemind.modes.MindMapNode</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.ApplyPatternAction</srcNode>
<endNode>freemind.modes.NodeAdapter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.ApplyPatternAction.ExternalPatternAction</srcNode>
<endNode>freemind.modes.mindmapmode.MindMapController.MindMapControllerPlugin</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.ApplyPatternAction.ExternalPatternAction</srcNode>
<endNode>freemind.modes.MindMapNode</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.BoldAction</srcNode>
<endNode>freemind.controller.MenuItemSelectedListener</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.BoldAction</srcNode>
<endNode>freemind.modes.ControllerAdapter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.BoldAction</srcNode>
<endNode>freemind.modes.MindMap</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.BoldAction</srcNode>
<endNode>freemind.modes.mindmapmode.actions.NodeActorXml</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.BoldAction</srcNode>
<endNode>freemind.modes.mindmapmode.actions.NodeGeneralAction</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.BoldAction</srcNode>
<endNode>freemind.modes.mindmapmode.actions.xml.ActionPair</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.BoldAction</srcNode>
<endNode>freemind.modes.mindmapmode.MindMapController</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.BoldAction</srcNode>
<endNode>freemind.modes.MindMapNode</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.BoldAction</srcNode>
<endNode>freemind.modes.NodeAdapter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.ChangeArrowLinkEndPoints</srcNode>
<endNode>freemind.main.Tools</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.ChangeArrowLinkEndPoints</srcNode>
<endNode>freemind.modes.ControllerAdapter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.ChangeArrowLinkEndPoints</srcNode>
<endNode>freemind.modes.MindMap</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.ChangeArrowLinkEndPoints</srcNode>
<endNode>freemind.modes.MindMapArrowLink</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.ChangeArrowLinkEndPoints</srcNode>
<endNode>freemind.modes.MindMapLink</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.ChangeArrowLinkEndPoints</srcNode>
<endNode>freemind.modes.MindMapLinkRegistry</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.ChangeArrowLinkEndPoints</srcNode>
<endNode>freemind.modes.mindmapmode.actions.FreemindAction</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.ChangeArrowLinkEndPoints</srcNode>
<endNode>freemind.modes.mindmapmode.actions.xml.ActionPair</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.ChangeArrowLinkEndPoints</srcNode>
<endNode>freemind.modes.mindmapmode.actions.xml.ActorXml</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.ChangeArrowLinkEndPoints</srcNode>
<endNode>freemind.modes.mindmapmode.MindMapController</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.ChangeArrowsInArrowLinkAction</srcNode>
<endNode>freemind.modes.ArrowLinkAdapter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.ChangeArrowsInArrowLinkAction</srcNode>
<endNode>freemind.modes.ControllerAdapter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.ChangeArrowsInArrowLinkAction</srcNode>
<endNode>freemind.modes.LinkAdapter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.ChangeArrowsInArrowLinkAction</srcNode>
<endNode>freemind.modes.MindMap</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.ChangeArrowsInArrowLinkAction</srcNode>
<endNode>freemind.modes.MindMapLink</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.ChangeArrowsInArrowLinkAction</srcNode>
<endNode>freemind.modes.MindMapLinkRegistry</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.ChangeArrowsInArrowLinkAction</srcNode>
<endNode>freemind.modes.mindmapmode.actions.FreemindAction</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.ChangeArrowsInArrowLinkAction</srcNode>
<endNode>freemind.modes.mindmapmode.actions.xml.ActionPair</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.ChangeArrowsInArrowLinkAction</srcNode>
<endNode>freemind.modes.mindmapmode.actions.xml.ActorXml</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.ChangeArrowsInArrowLinkAction</srcNode>
<endNode>freemind.modes.mindmapmode.MindMapArrowLinkModel</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.ChangeArrowsInArrowLinkAction</srcNode>
<endNode>freemind.modes.mindmapmode.MindMapController</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.CloudAction</srcNode>
<endNode>freemind.controller.MenuItemSelectedListener</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.CloudAction</srcNode>
<endNode>freemind.main.Tools</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.CloudAction</srcNode>
<endNode>freemind.modes.ControllerAdapter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.CloudAction</srcNode>
<endNode>freemind.modes.LineAdapter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.CloudAction</srcNode>
<endNode>freemind.modes.MindMap</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.CloudAction</srcNode>
<endNode>freemind.modes.MindMapLine</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.CloudAction</srcNode>
<endNode>freemind.modes.mindmapmode.actions.NodeActorXml</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.CloudAction</srcNode>
<endNode>freemind.modes.mindmapmode.actions.NodeGeneralAction</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.CloudAction</srcNode>
<endNode>freemind.modes.mindmapmode.actions.xml.AbstractXmlAction</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.CloudAction</srcNode>
<endNode>freemind.modes.mindmapmode.actions.xml.ActionPair</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.CloudAction</srcNode>
<endNode>freemind.modes.mindmapmode.MindMapCloudModel</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.CloudAction</srcNode>
<endNode>freemind.modes.mindmapmode.MindMapController</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.CloudAction</srcNode>
<endNode>freemind.modes.MindMapNode</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.CloudColorAction</srcNode>
<endNode>freemind.controller.Controller</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.CloudColorAction</srcNode>
<endNode>freemind.controller.MenuItemEnabledListener</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.CloudColorAction</srcNode>
<endNode>freemind.main.Tools</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.CloudColorAction</srcNode>
<endNode>freemind.modes.ControllerAdapter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.CloudColorAction</srcNode>
<endNode>freemind.modes.LineAdapter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.CloudColorAction</srcNode>
<endNode>freemind.modes.MindMapLine</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.CloudColorAction</srcNode>
<endNode>freemind.modes.mindmapmode.actions.FreemindAction</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.CloudColorAction</srcNode>
<endNode>freemind.modes.mindmapmode.actions.xml.ActionFactory</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.CloudColorAction</srcNode>
<endNode>freemind.modes.mindmapmode.actions.xml.ActionPair</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.CloudColorAction</srcNode>
<endNode>freemind.modes.mindmapmode.actions.xml.ActorXml</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.CloudColorAction</srcNode>
<endNode>freemind.modes.mindmapmode.MindMapController</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.CloudColorAction</srcNode>
<endNode>freemind.modes.mindmapmode.MindMapNodeModel</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.CloudColorAction</srcNode>
<endNode>freemind.modes.MindMapNode</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.CloudColorAction</srcNode>
<endNode>freemind.view.mindmapview.MapView</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.ColorArrowLinkAction</srcNode>
<endNode>freemind.controller.Controller</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.ColorArrowLinkAction</srcNode>
<endNode>freemind.main.Tools</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.ColorArrowLinkAction</srcNode>
<endNode>freemind.modes.ControllerAdapter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.ColorArrowLinkAction</srcNode>
<endNode>freemind.modes.LineAdapter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.ColorArrowLinkAction</srcNode>
<endNode>freemind.modes.MindMap</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.ColorArrowLinkAction</srcNode>
<endNode>freemind.modes.MindMapLine</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.ColorArrowLinkAction</srcNode>
<endNode>freemind.modes.MindMapLink</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.ColorArrowLinkAction</srcNode>
<endNode>freemind.modes.MindMapLinkRegistry</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.ColorArrowLinkAction</srcNode>
<endNode>freemind.modes.mindmapmode.actions.FreemindAction</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.ColorArrowLinkAction</srcNode>
<endNode>freemind.modes.mindmapmode.actions.xml.ActionPair</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.ColorArrowLinkAction</srcNode>
<endNode>freemind.modes.mindmapmode.actions.xml.ActorXml</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.ColorArrowLinkAction</srcNode>
<endNode>freemind.modes.mindmapmode.MindMapArrowLinkModel</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.ColorArrowLinkAction</srcNode>
<endNode>freemind.modes.mindmapmode.MindMapController</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.ColorArrowLinkAction</srcNode>
<endNode>freemind.view.mindmapview.MapView</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.CompoundActionHandler</srcNode>
<endNode>freemind.modes.mindmapmode.actions.xml.ActionFactory</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.CompoundActionHandler</srcNode>
<endNode>freemind.modes.mindmapmode.actions.xml.ActorXml</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.CompoundActionHandler</srcNode>
<endNode>freemind.modes.mindmapmode.MindMapController</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.CopyAction</srcNode>
<endNode>freemind.modes.ControllerAdapter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.CopyAction</srcNode>
<endNode>freemind.modes.mindmapmode.MindMapController</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.CopySingleAction</srcNode>
<endNode>freemind.modes.ControllerAdapter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.CopySingleAction</srcNode>
<endNode>freemind.modes.mindmapmode.MindMapController</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.CutAction</srcNode>
<endNode>freemind.common.OptionalDontShowMeAgainDialog</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.CutAction</srcNode>
<endNode>freemind.common.OptionalDontShowMeAgainDialog.StandardPropertyHandler</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.CutAction</srcNode>
<endNode>freemind.controller.Controller</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.CutAction</srcNode>
<endNode>freemind.main.FreeMind</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.CutAction</srcNode>
<endNode>freemind.main.FreeMindMain</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.CutAction</srcNode>
<endNode>freemind.main.Resources</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.CutAction</srcNode>
<endNode>freemind.modes.ControllerAdapter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.CutAction</srcNode>
<endNode>freemind.modes.mindmapmode.actions.DeleteChildAction</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.CutAction</srcNode>
<endNode>freemind.modes.mindmapmode.actions.PasteAction</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.CutAction</srcNode>
<endNode>freemind.modes.mindmapmode.actions.PasteAction.NodeCoordinate</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.CutAction</srcNode>
<endNode>freemind.modes.mindmapmode.actions.xml.ActionFactory</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.CutAction</srcNode>
<endNode>freemind.modes.mindmapmode.actions.xml.ActionPair</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.CutAction</srcNode>
<endNode>freemind.modes.mindmapmode.actions.xml.ActorXml</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.CutAction</srcNode>
<endNode>freemind.modes.mindmapmode.MindMapController</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.CutAction</srcNode>
<endNode>freemind.modes.MindMapNode</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.CutAction</srcNode>
<endNode>freemind.view.mindmapview.MapView</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.CutAction</srcNode>
<endNode>freemind.view.mindmapview.NodeView</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.DeleteChildAction</srcNode>
<endNode>freemind.common.OptionalDontShowMeAgainDialog</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.DeleteChildAction</srcNode>
<endNode>freemind.common.OptionalDontShowMeAgainDialog.StandardPropertyHandler</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.DeleteChildAction</srcNode>
<endNode>freemind.controller.Controller</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.DeleteChildAction</srcNode>
<endNode>freemind.extensions.PermanentNodeHook</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.DeleteChildAction</srcNode>
<endNode>freemind.main.FreeMind</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.DeleteChildAction</srcNode>
<endNode>freemind.main.FreeMindMain</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.DeleteChildAction</srcNode>
<endNode>freemind.modes.ControllerAdapter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.DeleteChildAction</srcNode>
<endNode>freemind.modes.MapAdapter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.DeleteChildAction</srcNode>
<endNode>freemind.modes.MindMapLinkRegistry</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.DeleteChildAction</srcNode>
<endNode>freemind.modes.mindmapmode.actions.PasteAction</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.DeleteChildAction</srcNode>
<endNode>freemind.modes.mindmapmode.actions.PasteAction.NodeCoordinate</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.DeleteChildAction</srcNode>
<endNode>freemind.modes.mindmapmode.actions.xml.ActionFactory</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.DeleteChildAction</srcNode>
<endNode>freemind.modes.mindmapmode.actions.xml.ActionPair</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.DeleteChildAction</srcNode>
<endNode>freemind.modes.mindmapmode.actions.xml.ActorXml</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.DeleteChildAction</srcNode>
<endNode>freemind.modes.mindmapmode.MindMapController</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.DeleteChildAction</srcNode>
<endNode>freemind.modes.MindMapNode</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.DeleteChildAction</srcNode>
<endNode>freemind.view.mindmapview.MapView</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.DeleteChildAction</srcNode>
<endNode>freemind.view.mindmapview.NodeView</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.EdgeColorAction</srcNode>
<endNode>freemind.controller.Controller</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.EdgeColorAction</srcNode>
<endNode>freemind.main.Tools</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.EdgeColorAction</srcNode>
<endNode>freemind.modes.ControllerAdapter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.EdgeColorAction</srcNode>
<endNode>freemind.modes.EdgeAdapter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.EdgeColorAction</srcNode>
<endNode>freemind.modes.LineAdapter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.EdgeColorAction</srcNode>
<endNode>freemind.modes.MindMapLine</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.EdgeColorAction</srcNode>
<endNode>freemind.modes.mindmapmode.actions.xml.ActionFactory</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.EdgeColorAction</srcNode>
<endNode>freemind.modes.mindmapmode.actions.xml.ActionPair</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.EdgeColorAction</srcNode>
<endNode>freemind.modes.mindmapmode.actions.xml.ActorXml</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.EdgeColorAction</srcNode>
<endNode>freemind.modes.mindmapmode.MindMapController</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.EdgeColorAction</srcNode>
<endNode>freemind.modes.mindmapmode.MindMapEdgeModel</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.EdgeColorAction</srcNode>
<endNode>freemind.modes.mindmapmode.MindMapNodeModel</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.EdgeColorAction</srcNode>
<endNode>freemind.modes.MindMapNode</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.EdgeColorAction</srcNode>
<endNode>freemind.view.mindmapview.MapView</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.EdgeStyleAction</srcNode>
<endNode>freemind.controller.MenuItemSelectedListener</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.EdgeStyleAction</srcNode>
<endNode>freemind.main.Tools</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.EdgeStyleAction</srcNode>
<endNode>freemind.modes.ControllerAdapter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.EdgeStyleAction</srcNode>
<endNode>freemind.modes.EdgeAdapter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.EdgeStyleAction</srcNode>
<endNode>freemind.modes.LineAdapter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.EdgeStyleAction</srcNode>
<endNode>freemind.modes.MindMap</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.EdgeStyleAction</srcNode>
<endNode>freemind.modes.MindMapEdge</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.EdgeStyleAction</srcNode>
<endNode>freemind.modes.MindMapLine</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.EdgeStyleAction</srcNode>
<endNode>freemind.modes.mindmapmode.actions.NodeActorXml</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.EdgeStyleAction</srcNode>
<endNode>freemind.modes.mindmapmode.actions.NodeGeneralAction</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.EdgeStyleAction</srcNode>
<endNode>freemind.modes.mindmapmode.actions.xml.AbstractXmlAction</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.EdgeStyleAction</srcNode>
<endNode>freemind.modes.mindmapmode.actions.xml.ActionPair</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.EdgeStyleAction</srcNode>
<endNode>freemind.modes.mindmapmode.MindMapController</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.EdgeStyleAction</srcNode>
<endNode>freemind.modes.MindMapNode</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.EdgeWidthAction</srcNode>
<endNode>freemind.controller.MenuItemSelectedListener</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.EdgeWidthAction</srcNode>
<endNode>freemind.modes.ControllerAdapter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.EdgeWidthAction</srcNode>
<endNode>freemind.modes.EdgeAdapter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.EdgeWidthAction</srcNode>
<endNode>freemind.modes.MindMap</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.EdgeWidthAction</srcNode>
<endNode>freemind.modes.MindMapLine</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.EdgeWidthAction</srcNode>
<endNode>freemind.modes.mindmapmode.actions.NodeActorXml</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.EdgeWidthAction</srcNode>
<endNode>freemind.modes.mindmapmode.actions.NodeGeneralAction</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.EdgeWidthAction</srcNode>
<endNode>freemind.modes.mindmapmode.actions.xml.AbstractXmlAction</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.EdgeWidthAction</srcNode>
<endNode>freemind.modes.mindmapmode.actions.xml.ActionPair</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.EdgeWidthAction</srcNode>
<endNode>freemind.modes.mindmapmode.MindMapController</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.EdgeWidthAction</srcNode>
<endNode>freemind.modes.MindMapNode</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.EditAction</srcNode>
<endNode>freemind.common.OptionalDontShowMeAgainDialog</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.EditAction</srcNode>
<endNode>freemind.common.OptionalDontShowMeAgainDialog.StandardPropertyHandler</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.EditAction</srcNode>
<endNode>freemind.controller.Controller</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.EditAction</srcNode>
<endNode>freemind.main.FreeMind</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.EditAction</srcNode>
<endNode>freemind.main.FreeMindMain</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.EditAction</srcNode>
<endNode>freemind.main.HtmlTools</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.EditAction</srcNode>
<endNode>freemind.main.Tools</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.EditAction</srcNode>
<endNode>freemind.modes.ControllerAdapter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.EditAction</srcNode>
<endNode>freemind.modes.mindmapmode.actions.MindMapActions</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.EditAction</srcNode>
<endNode>freemind.modes.mindmapmode.actions.xml.ActionFactory</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.EditAction</srcNode>
<endNode>freemind.modes.mindmapmode.actions.xml.ActionPair</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.EditAction</srcNode>
<endNode>freemind.modes.mindmapmode.actions.xml.ActorXml</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.EditAction</srcNode>
<endNode>freemind.modes.mindmapmode.MindMapController</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.EditAction</srcNode>
<endNode>freemind.modes.MindMapNode</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.EditAction</srcNode>
<endNode>freemind.modes.NodeAdapter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.EditAction</srcNode>
<endNode>freemind.view.mindmapview.EditNodeBase</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.EditAction</srcNode>
<endNode>freemind.view.mindmapview.EditNodeDialog</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.EditAction</srcNode>
<endNode>freemind.view.mindmapview.EditNodeExternalApplication</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.EditAction</srcNode>
<endNode>freemind.view.mindmapview.EditNodeTextField</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.EditAction</srcNode>
<endNode>freemind.view.mindmapview.EditNodeWYSIWYG</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.EditAction</srcNode>
<endNode>freemind.view.mindmapview.MapView</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.EditAction</srcNode>
<endNode>freemind.view.mindmapview.NodeView</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.EditAction.edit.(Anon_1)</srcNode>
<endNode>freemind.controller.Controller</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.EditAction.edit.(Anon_1)</srcNode>
<endNode>freemind.modes.ControllerAdapter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.EditAction.edit.(Anon_1)</srcNode>
<endNode>freemind.modes.mindmapmode.actions.EditAction</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.EditAction.edit.(Anon_1)</srcNode>
<endNode>freemind.modes.mindmapmode.MindMapController</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.EditAction.edit.(Anon_1)</srcNode>
<endNode>freemind.view.mindmapview.EditNodeBase.EditControl</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.EditAction.edit.(Anon_1)</srcNode>
<endNode>freemind.view.mindmapview.NodeView</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.EditAction.edit.(Anon_2)</srcNode>
<endNode>freemind.controller.Controller</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.EditAction.edit.(Anon_2)</srcNode>
<endNode>freemind.modes.ControllerAdapter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.EditAction.edit.(Anon_2)</srcNode>
<endNode>freemind.modes.mindmapmode.actions.EditAction</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.EditAction.edit.(Anon_2)</srcNode>
<endNode>freemind.modes.mindmapmode.MindMapController</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.EditAction.edit.(Anon_2)</srcNode>
<endNode>freemind.view.mindmapview.EditNodeBase.EditControl</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.EditAction.edit.(Anon_2)</srcNode>
<endNode>freemind.view.mindmapview.NodeView</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.EditAction.edit.(Anon_3)</srcNode>
<endNode>freemind.controller.Controller</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.EditAction.edit.(Anon_3)</srcNode>
<endNode>freemind.modes.ControllerAdapter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.EditAction.edit.(Anon_3)</srcNode>
<endNode>freemind.modes.mindmapmode.actions.EditAction</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.EditAction.edit.(Anon_3)</srcNode>
<endNode>freemind.modes.mindmapmode.MindMapController</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.EditAction.edit.(Anon_3)</srcNode>
<endNode>freemind.view.mindmapview.EditNodeBase.EditControl</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.EditAction.edit.(Anon_3)</srcNode>
<endNode>freemind.view.mindmapview.NodeView</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.EditAction.edit.(Anon_4)</srcNode>
<endNode>freemind.modes.ControllerAdapter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.EditAction.edit.(Anon_4)</srcNode>
<endNode>freemind.modes.mindmapmode.actions.EditAction</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.EditAction.edit.(Anon_4)</srcNode>
<endNode>freemind.modes.mindmapmode.MindMapController</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.EditAction.edit.(Anon_4)</srcNode>
<endNode>freemind.view.mindmapview.EditNodeBase.EditControl</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.EditAction.edit.(Anon_4)</srcNode>
<endNode>freemind.view.mindmapview.MapView</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.EditAction.edit.(Anon_4)</srcNode>
<endNode>freemind.view.mindmapview.NodeView</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.ExportBranchAction</srcNode>
<endNode>freemind.main.FreeMindCommon</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.ExportBranchAction</srcNode>
<endNode>freemind.main.FreeMindMain</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.ExportBranchAction</srcNode>
<endNode>freemind.main.Tools</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.ExportBranchAction</srcNode>
<endNode>freemind.modes.ControllerAdapter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.ExportBranchAction</srcNode>
<endNode>freemind.modes.FreeMindFileDialog</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.ExportBranchAction</srcNode>
<endNode>freemind.modes.MapAdapter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.ExportBranchAction</srcNode>
<endNode>freemind.modes.MindMap</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.ExportBranchAction</srcNode>
<endNode>freemind.modes.mindmapmode.MindMapController</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.ExportBranchAction</srcNode>
<endNode>freemind.modes.mindmapmode.MindMapMapModel</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.ExportBranchAction</srcNode>
<endNode>freemind.modes.mindmapmode.MindMapNodeModel</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.ExportBranchAction</srcNode>
<endNode>freemind.modes.MindMapNode</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.ExportBranchAction</srcNode>
<endNode>freemind.modes.Mode</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.ExportBranchAction</srcNode>
<endNode>freemind.modes.ModeController</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.ExportBranchAction</srcNode>
<endNode>freemind.modes.NodeAdapter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.FontFamilyAction</srcNode>
<endNode>freemind.controller.Controller</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.FontFamilyAction</srcNode>
<endNode>freemind.main.FreeMindMain</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.FontFamilyAction</srcNode>
<endNode>freemind.main.Tools</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.FontFamilyAction</srcNode>
<endNode>freemind.modes.ControllerAdapter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.FontFamilyAction</srcNode>
<endNode>freemind.modes.MindMap</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.FontFamilyAction</srcNode>
<endNode>freemind.modes.mindmapmode.actions.NodeActorXml</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.FontFamilyAction</srcNode>
<endNode>freemind.modes.mindmapmode.actions.NodeGeneralAction</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.FontFamilyAction</srcNode>
<endNode>freemind.modes.mindmapmode.actions.xml.AbstractXmlAction</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.FontFamilyAction</srcNode>
<endNode>freemind.modes.mindmapmode.actions.xml.ActionPair</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.FontFamilyAction</srcNode>
<endNode>freemind.modes.mindmapmode.MindMapController</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.FontFamilyAction</srcNode>
<endNode>freemind.modes.MindMapNode</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.FontFamilyAction</srcNode>
<endNode>freemind.modes.NodeAdapter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.FontSizeAction</srcNode>
<endNode>freemind.main.FreeMindMain</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.FontSizeAction</srcNode>
<endNode>freemind.main.Tools</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.FontSizeAction</srcNode>
<endNode>freemind.modes.ControllerAdapter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.FontSizeAction</srcNode>
<endNode>freemind.modes.MindMap</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.FontSizeAction</srcNode>
<endNode>freemind.modes.mindmapmode.actions.NodeActorXml</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.FontSizeAction</srcNode>
<endNode>freemind.modes.mindmapmode.actions.NodeGeneralAction</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.FontSizeAction</srcNode>
<endNode>freemind.modes.mindmapmode.actions.xml.AbstractXmlAction</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.FontSizeAction</srcNode>
<endNode>freemind.modes.mindmapmode.actions.xml.ActionPair</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.FontSizeAction</srcNode>
<endNode>freemind.modes.mindmapmode.MindMapController</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.FontSizeAction</srcNode>
<endNode>freemind.modes.MindMapNode</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.FreemindAction</srcNode>
<endNode>freemind.modes.ControllerAdapter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.FreemindAction</srcNode>
<endNode>freemind.modes.mindmapmode.actions.xml.ActionFactory</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.FreemindAction</srcNode>
<endNode>freemind.modes.mindmapmode.actions.xml.ActorXml</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.FreemindAction</srcNode>
<endNode>freemind.modes.mindmapmode.MindMapController</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.IconAction</srcNode>
<endNode>freemind.controller.filter.condition.IconContainedCondition</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.IconAction</srcNode>
<endNode>freemind.main.FreeMindMain</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.IconAction</srcNode>
<endNode>freemind.main.Tools</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.IconAction</srcNode>
<endNode>freemind.modes.ControllerAdapter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.IconAction</srcNode>
<endNode>freemind.modes.IconInformation</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.IconAction</srcNode>
<endNode>freemind.modes.MindIcon</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.IconAction</srcNode>
<endNode>freemind.modes.mindmapmode.actions.FreemindAction</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.IconAction</srcNode>
<endNode>freemind.modes.mindmapmode.actions.RemoveIconAction</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.IconAction</srcNode>
<endNode>freemind.modes.mindmapmode.actions.xml.ActionFactory</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.IconAction</srcNode>
<endNode>freemind.modes.mindmapmode.actions.xml.ActionPair</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.IconAction</srcNode>
<endNode>freemind.modes.mindmapmode.actions.xml.ActorXml</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.IconAction</srcNode>
<endNode>freemind.modes.mindmapmode.MindMapController</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.IconAction</srcNode>
<endNode>freemind.modes.mindmapmode.MindMapNodeModel</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.IconAction</srcNode>
<endNode>freemind.modes.MindMapNode</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.IconAction</srcNode>
<endNode>freemind.modes.NodeAdapter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.ImportExplorerFavoritesAction</srcNode>
<endNode>freemind.main.FreeMindMain</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.ImportExplorerFavoritesAction</srcNode>
<endNode>freemind.main.Resources</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.ImportExplorerFavoritesAction</srcNode>
<endNode>freemind.main.Tools</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.ImportExplorerFavoritesAction</srcNode>
<endNode>freemind.modes.ControllerAdapter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.ImportExplorerFavoritesAction</srcNode>
<endNode>freemind.modes.FreeMindFileDialog</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.ImportExplorerFavoritesAction</srcNode>
<endNode>freemind.modes.mindmapmode.MindMapController</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.ImportExplorerFavoritesAction</srcNode>
<endNode>freemind.modes.MindMapNode</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.ImportFolderStructureAction</srcNode>
<endNode>freemind.main.FreeMindMain</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.ImportFolderStructureAction</srcNode>
<endNode>freemind.main.Resources</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.ImportFolderStructureAction</srcNode>
<endNode>freemind.main.Tools</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.ImportFolderStructureAction</srcNode>
<endNode>freemind.modes.ControllerAdapter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.ImportFolderStructureAction</srcNode>
<endNode>freemind.modes.FreeMindFileDialog</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.ImportFolderStructureAction</srcNode>
<endNode>freemind.modes.mindmapmode.MindMapController</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.ImportFolderStructureAction</srcNode>
<endNode>freemind.modes.MindMapNode</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.ItalicAction</srcNode>
<endNode>freemind.controller.MenuItemSelectedListener</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.ItalicAction</srcNode>
<endNode>freemind.modes.ControllerAdapter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.ItalicAction</srcNode>
<endNode>freemind.modes.MindMap</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.ItalicAction</srcNode>
<endNode>freemind.modes.mindmapmode.actions.NodeActorXml</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.ItalicAction</srcNode>
<endNode>freemind.modes.mindmapmode.actions.NodeGeneralAction</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.ItalicAction</srcNode>
<endNode>freemind.modes.mindmapmode.actions.xml.ActionPair</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.ItalicAction</srcNode>
<endNode>freemind.modes.mindmapmode.MindMapController</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.ItalicAction</srcNode>
<endNode>freemind.modes.MindMapNode</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.ItalicAction</srcNode>
<endNode>freemind.modes.NodeAdapter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.JoinNodesAction</srcNode>
<endNode>freemind.main.HtmlTools</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.JoinNodesAction</srcNode>
<endNode>freemind.modes.ControllerAdapter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.JoinNodesAction</srcNode>
<endNode>freemind.modes.mindmapmode.MindMapController</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.JoinNodesAction</srcNode>
<endNode>freemind.modes.MindMapNode</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.JoinNodesAction</srcNode>
<endNode>freemind.view.mindmapview.MapView</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.JoinNodesAction</srcNode>
<endNode>freemind.view.mindmapview.NodeView</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.MindMapActions</srcNode>
<endNode>freemind.extensions.ModeControllerHook</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.MindMapActions</srcNode>
<endNode>freemind.extensions.NodeHook</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.MindMapActions</srcNode>
<endNode>freemind.modes.attributes.Attribute</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.MindMapActions</srcNode>
<endNode>freemind.modes.MindIcon</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.MindMapActions</srcNode>
<endNode>freemind.modes.MindMap</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.MindMapActions</srcNode>
<endNode>freemind.modes.MindMapArrowLink</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.MindMapActions</srcNode>
<endNode>freemind.modes.MindMapLink</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.MindMapActions</srcNode>
<endNode>freemind.modes.mindmapmode.actions.MindMapActions.MouseWheelEventHandler</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.MindMapActions</srcNode>
<endNode>freemind.modes.mindmapmode.actions.xml.ActionFactory</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.MindMapActions</srcNode>
<endNode>freemind.modes.mindmapmode.MindMapArrowLinkModel</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.MindMapActions</srcNode>
<endNode>freemind.modes.MindMapNode</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.MindMapActions</srcNode>
<endNode>freemind.modes.NodeAdapter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.MindMapControllerHookAction</srcNode>
<endNode>freemind.modes.mindmapmode.actions.HookAction</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.MindMapControllerHookAction</srcNode>
<endNode>freemind.modes.mindmapmode.MindMapController</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.ModeControllerActionHandler</srcNode>
<endNode>freemind.modes.mindmapmode.actions.xml.ActionFactory</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.ModeControllerActionHandler</srcNode>
<endNode>freemind.modes.mindmapmode.actions.xml.ActionHandler</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.ModeControllerActionHandler</srcNode>
<endNode>freemind.modes.mindmapmode.actions.xml.ActorXml</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.MoveNodeAction</srcNode>
<endNode>freemind.modes.MindMap</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.MoveNodeAction</srcNode>
<endNode>freemind.modes.mindmapmode.actions.NodeActorXml</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.MoveNodeAction</srcNode>
<endNode>freemind.modes.mindmapmode.actions.NodeGeneralAction</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.MoveNodeAction</srcNode>
<endNode>freemind.modes.mindmapmode.actions.xml.ActionPair</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.MoveNodeAction</srcNode>
<endNode>freemind.modes.mindmapmode.MindMapController</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.MoveNodeAction</srcNode>
<endNode>freemind.modes.MindMapNode</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.MoveNodeAction</srcNode>
<endNode>freemind.modes.NodeAdapter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.NewChildAction</srcNode>
<endNode>freemind.extensions.PermanentNodeHook</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.NewChildAction</srcNode>
<endNode>freemind.main.FreeMindMain</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.NewChildAction</srcNode>
<endNode>freemind.modes.ControllerAdapter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.NewChildAction</srcNode>
<endNode>freemind.modes.MapAdapter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.NewChildAction</srcNode>
<endNode>freemind.modes.MindMapLinkRegistry</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.NewChildAction</srcNode>
<endNode>freemind.modes.mindmapmode.actions.DeleteChildAction</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.NewChildAction</srcNode>
<endNode>freemind.modes.mindmapmode.actions.EditAction</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.NewChildAction</srcNode>
<endNode>freemind.modes.mindmapmode.actions.MindMapActions</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.NewChildAction</srcNode>
<endNode>freemind.modes.mindmapmode.actions.xml.ActionFactory</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.NewChildAction</srcNode>
<endNode>freemind.modes.mindmapmode.actions.xml.ActionPair</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.NewChildAction</srcNode>
<endNode>freemind.modes.mindmapmode.actions.xml.ActorXml</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.NewChildAction</srcNode>
<endNode>freemind.modes.mindmapmode.MindMapController</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.NewChildAction</srcNode>
<endNode>freemind.modes.MindMapNode</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.NewChildAction</srcNode>
<endNode>freemind.modes.NodeAdapter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.NewChildAction</srcNode>
<endNode>freemind.view.mindmapview.NodeView</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.NewPreviousSiblingAction</srcNode>
<endNode>freemind.modes.ControllerAdapter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.NewPreviousSiblingAction</srcNode>
<endNode>freemind.modes.mindmapmode.actions.MindMapActions</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.NewPreviousSiblingAction</srcNode>
<endNode>freemind.modes.mindmapmode.MindMapController</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.NewSiblingAction</srcNode>
<endNode>freemind.modes.ControllerAdapter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.NewSiblingAction</srcNode>
<endNode>freemind.modes.mindmapmode.actions.MindMapActions</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.NewSiblingAction</srcNode>
<endNode>freemind.modes.mindmapmode.MindMapController</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.NodeActorXml</srcNode>
<endNode>freemind.modes.MindMap</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.NodeActorXml</srcNode>
<endNode>freemind.modes.mindmapmode.actions.xml.ActionPair</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.NodeActorXml</srcNode>
<endNode>freemind.modes.mindmapmode.actions.xml.ActorXml</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.NodeActorXml</srcNode>
<endNode>freemind.modes.MindMapNode</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.NodeBackgroundColorAction</srcNode>
<endNode>freemind.controller.Controller</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.NodeBackgroundColorAction</srcNode>
<endNode>freemind.main.Tools</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.NodeBackgroundColorAction</srcNode>
<endNode>freemind.modes.ControllerAdapter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.NodeBackgroundColorAction</srcNode>
<endNode>freemind.modes.mindmapmode.actions.FreemindAction</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.NodeBackgroundColorAction</srcNode>
<endNode>freemind.modes.mindmapmode.actions.xml.ActionPair</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.NodeBackgroundColorAction</srcNode>
<endNode>freemind.modes.mindmapmode.actions.xml.ActorXml</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.NodeBackgroundColorAction</srcNode>
<endNode>freemind.modes.mindmapmode.MindMapController</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.NodeBackgroundColorAction</srcNode>
<endNode>freemind.modes.mindmapmode.MindMapNodeModel</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.NodeBackgroundColorAction</srcNode>
<endNode>freemind.modes.MindMapNode</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.NodeBackgroundColorAction</srcNode>
<endNode>freemind.view.mindmapview.MapView</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.NodeBackgroundColorAction.RemoveNodeBackgroundColorAction</srcNode>
<endNode>freemind.modes.mindmapmode.actions.NodeGeneralAction</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.NodeBackgroundColorAction.RemoveNodeBackgroundColorAction</srcNode>
<endNode>freemind.modes.mindmapmode.MindMapController</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.NodeBackgroundColorAction.RemoveNodeBackgroundColorAction.RemoveNodeBackgroundColorAction.(Anon_1)</srcNode>
<endNode>freemind.modes.mindmapmode.actions.SingleNodeOperation</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.NodeBackgroundColorAction.RemoveNodeBackgroundColorAction.RemoveNodeBackgroundColorAction.(Anon_1)</srcNode>
<endNode>freemind.modes.mindmapmode.MindMapController</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.NodeBackgroundColorAction.RemoveNodeBackgroundColorAction.RemoveNodeBackgroundColorAction.(Anon_1)</srcNode>
<endNode>freemind.modes.mindmapmode.MindMapMapModel</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.NodeBackgroundColorAction.RemoveNodeBackgroundColorAction.RemoveNodeBackgroundColorAction.(Anon_1)</srcNode>
<endNode>freemind.modes.mindmapmode.MindMapNodeModel</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.NodeColorAction</srcNode>
<endNode>freemind.controller.Controller</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.NodeColorAction</srcNode>
<endNode>freemind.main.Tools</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.NodeColorAction</srcNode>
<endNode>freemind.modes.ControllerAdapter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.NodeColorAction</srcNode>
<endNode>freemind.modes.mindmapmode.actions.FreemindAction</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.NodeColorAction</srcNode>
<endNode>freemind.modes.mindmapmode.actions.xml.ActionFactory</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.NodeColorAction</srcNode>
<endNode>freemind.modes.mindmapmode.actions.xml.ActionPair</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.NodeColorAction</srcNode>
<endNode>freemind.modes.mindmapmode.actions.xml.ActorXml</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.NodeColorAction</srcNode>
<endNode>freemind.modes.mindmapmode.MindMapController</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.NodeColorAction</srcNode>
<endNode>freemind.modes.mindmapmode.MindMapNodeModel</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.NodeColorAction</srcNode>
<endNode>freemind.modes.MindMapNode</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.NodeColorAction</srcNode>
<endNode>freemind.view.mindmapview.MapView</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.NodeColorBlendAction</srcNode>
<endNode>freemind.modes.mindmapmode.actions.NodeGeneralAction</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.NodeColorBlendAction</srcNode>
<endNode>freemind.modes.mindmapmode.MindMapController</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.NodeColorBlendAction.NodeColorBlendAction.(Anon_1)</srcNode>
<endNode>freemind.modes.mindmapmode.actions.SingleNodeOperation</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.NodeColorBlendAction.NodeColorBlendAction.(Anon_1)</srcNode>
<endNode>freemind.modes.mindmapmode.MindMapController</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.NodeColorBlendAction.NodeColorBlendAction.(Anon_1)</srcNode>
<endNode>freemind.modes.mindmapmode.MindMapMapModel</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.NodeColorBlendAction.NodeColorBlendAction.(Anon_1)</srcNode>
<endNode>freemind.modes.mindmapmode.MindMapNodeModel</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.NodeGeneralAction</srcNode>
<endNode>freemind.main.FreeMindMain</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.NodeGeneralAction</srcNode>
<endNode>freemind.main.Tools</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.NodeGeneralAction</srcNode>
<endNode>freemind.modes.ControllerAdapter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.NodeGeneralAction</srcNode>
<endNode>freemind.modes.mindmapmode.actions.NodeActorXml</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.NodeGeneralAction</srcNode>
<endNode>freemind.modes.mindmapmode.actions.SingleNodeOperation</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.NodeGeneralAction</srcNode>
<endNode>freemind.modes.mindmapmode.actions.xml.AbstractXmlAction</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.NodeGeneralAction</srcNode>
<endNode>freemind.modes.mindmapmode.actions.xml.ActionPair</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.NodeGeneralAction</srcNode>
<endNode>freemind.modes.mindmapmode.MindMapController</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.NodeGeneralAction</srcNode>
<endNode>freemind.modes.mindmapmode.MindMapMapModel</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.NodeGeneralAction</srcNode>
<endNode>freemind.modes.mindmapmode.MindMapNodeModel</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.NodeGeneralAction</srcNode>
<endNode>freemind.modes.MindMapNode</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.NodeGeneralAction</srcNode>
<endNode>freemind.modes.NodeAdapter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.NodeHookAction</srcNode>
<endNode>freemind.controller.MenuItemEnabledListener</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.NodeHookAction</srcNode>
<endNode>freemind.controller.MenuItemSelectedListener</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.NodeHookAction</srcNode>
<endNode>freemind.extensions.HookFactory</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.NodeHookAction</srcNode>
<endNode>freemind.extensions.HookInstanciationMethod</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.NodeHookAction</srcNode>
<endNode>freemind.extensions.MindMapHook</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.NodeHookAction</srcNode>
<endNode>freemind.extensions.NodeHook</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.NodeHookAction</srcNode>
<endNode>freemind.extensions.PermanentNodeHook</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.NodeHookAction</srcNode>
<endNode>freemind.extensions.PermanentNodeHookAdapter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.NodeHookAction</srcNode>
<endNode>freemind.main.FreeMindMain</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.NodeHookAction</srcNode>
<endNode>freemind.main.Tools</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.NodeHookAction</srcNode>
<endNode>freemind.main.XMLElement</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.NodeHookAction</srcNode>
<endNode>freemind.modes.ControllerAdapter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.NodeHookAction</srcNode>
<endNode>freemind.modes.mindmapmode.actions.FreemindAction</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.NodeHookAction</srcNode>
<endNode>freemind.modes.mindmapmode.actions.HookAction</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.NodeHookAction</srcNode>
<endNode>freemind.modes.mindmapmode.actions.xml.ActionFactory</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.NodeHookAction</srcNode>
<endNode>freemind.modes.mindmapmode.actions.xml.ActionPair</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.NodeHookAction</srcNode>
<endNode>freemind.modes.mindmapmode.actions.xml.ActorXml</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.NodeHookAction</srcNode>
<endNode>freemind.modes.mindmapmode.MindMapController</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.NodeHookAction</srcNode>
<endNode>freemind.modes.MindMapNode</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.NodeHookAction</srcNode>
<endNode>freemind.view.mindmapview.MapView</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.NodeStyleAction</srcNode>
<endNode>freemind.controller.MenuItemSelectedListener</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.NodeStyleAction</srcNode>
<endNode>freemind.main.Tools</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.NodeStyleAction</srcNode>
<endNode>freemind.modes.ControllerAdapter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.NodeStyleAction</srcNode>
<endNode>freemind.modes.MindMap</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.NodeStyleAction</srcNode>
<endNode>freemind.modes.mindmapmode.actions.NodeActorXml</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.NodeStyleAction</srcNode>
<endNode>freemind.modes.mindmapmode.actions.NodeGeneralAction</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.NodeStyleAction</srcNode>
<endNode>freemind.modes.mindmapmode.actions.xml.ActionPair</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.NodeStyleAction</srcNode>
<endNode>freemind.modes.mindmapmode.MindMapController</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.NodeStyleAction</srcNode>
<endNode>freemind.modes.MindMapNode</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.NodeUpAction</srcNode>
<endNode>freemind.main.FreeMindMain</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.NodeUpAction</srcNode>
<endNode>freemind.modes.ControllerAdapter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.NodeUpAction</srcNode>
<endNode>freemind.modes.MapAdapter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.NodeUpAction</srcNode>
<endNode>freemind.modes.mindmapmode.actions.xml.ActionFactory</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.NodeUpAction</srcNode>
<endNode>freemind.modes.mindmapmode.actions.xml.ActionPair</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.NodeUpAction</srcNode>
<endNode>freemind.modes.mindmapmode.actions.xml.ActorXml</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.NodeUpAction</srcNode>
<endNode>freemind.modes.mindmapmode.MindMapController</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.NodeUpAction</srcNode>
<endNode>freemind.modes.MindMapNode</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.NodeUpAction.getSortedSiblings.(Anon_2)</srcNode>
<endNode>freemind.modes.MindMapNode</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.PasteAction</srcNode>
<endNode>freemind.controller.MindMapNodesSelection</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.PasteAction</srcNode>
<endNode>freemind.main.FreeMindCommon</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.PasteAction</srcNode>
<endNode>freemind.main.FreeMindMain</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.PasteAction</srcNode>
<endNode>freemind.main.HtmlTools</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.PasteAction</srcNode>
<endNode>freemind.main.Resources</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.PasteAction</srcNode>
<endNode>freemind.main.Tools</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.PasteAction</srcNode>
<endNode>freemind.main.XMLParseException</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.PasteAction</srcNode>
<endNode>freemind.modes.ControllerAdapter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.PasteAction</srcNode>
<endNode>freemind.modes.MindMap</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.PasteAction</srcNode>
<endNode>freemind.modes.mindmapmode.actions.PasteAction.DataFlavorHandler</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.PasteAction</srcNode>
<endNode>freemind.modes.mindmapmode.actions.PasteAction.DirectHtmlFlavorHandler</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.PasteAction</srcNode>
<endNode>freemind.modes.mindmapmode.actions.PasteAction.FileListFlavorHandler</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.PasteAction</srcNode>
<endNode>freemind.modes.mindmapmode.actions.PasteAction.ImageFlavorHandler</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.PasteAction</srcNode>
<endNode>freemind.modes.mindmapmode.actions.PasteAction.MindMapNodesFlavorHandler</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.PasteAction</srcNode>
<endNode>freemind.modes.mindmapmode.actions.PasteAction.NodeCoordinate</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.PasteAction</srcNode>
<endNode>freemind.modes.mindmapmode.actions.PasteAction.StringFlavorHandler</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.PasteAction</srcNode>
<endNode>freemind.modes.mindmapmode.actions.UndoPasteHandler</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.PasteAction</srcNode>
<endNode>freemind.modes.mindmapmode.actions.xml.ActionFactory</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.PasteAction</srcNode>
<endNode>freemind.modes.mindmapmode.actions.xml.ActionPair</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.PasteAction</srcNode>
<endNode>freemind.modes.mindmapmode.actions.xml.ActorXml</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.PasteAction</srcNode>
<endNode>freemind.modes.mindmapmode.MindMapController</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.PasteAction</srcNode>
<endNode>freemind.modes.mindmapmode.MindMapNodeModel</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.PasteAction</srcNode>
<endNode>freemind.modes.MindMapNode</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.PasteAction</srcNode>
<endNode>freemind.modes.ModeController</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.PasteAction</srcNode>
<endNode>freemind.modes.NodeAdapter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.PasteAction.DataFlavorHandler</srcNode>
<endNode>freemind.modes.MindMapNode</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.PasteAction.DirectHtmlFlavorHandler</srcNode>
<endNode>freemind.controller.MindMapNodesSelection</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.PasteAction.DirectHtmlFlavorHandler</srcNode>
<endNode>freemind.main.FreeMindMain</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.PasteAction.DirectHtmlFlavorHandler</srcNode>
<endNode>freemind.main.HtmlTools</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.PasteAction.DirectHtmlFlavorHandler</srcNode>
<endNode>freemind.main.Tools</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.PasteAction.DirectHtmlFlavorHandler</srcNode>
<endNode>freemind.modes.ControllerAdapter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.PasteAction.DirectHtmlFlavorHandler</srcNode>
<endNode>freemind.modes.mindmapmode.actions.PasteAction</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.PasteAction.DirectHtmlFlavorHandler</srcNode>
<endNode>freemind.modes.mindmapmode.actions.PasteAction.DataFlavorHandler</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.PasteAction.DirectHtmlFlavorHandler</srcNode>
<endNode>freemind.modes.mindmapmode.MindMapController</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.PasteAction.DirectHtmlFlavorHandler</srcNode>
<endNode>freemind.modes.MindMapNode</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.PasteAction.FileListFlavorHandler</srcNode>
<endNode>freemind.controller.MindMapNodesSelection</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.PasteAction.FileListFlavorHandler</srcNode>
<endNode>freemind.main.Tools</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.PasteAction.FileListFlavorHandler</srcNode>
<endNode>freemind.modes.ControllerAdapter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.PasteAction.FileListFlavorHandler</srcNode>
<endNode>freemind.modes.MapAdapter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.PasteAction.FileListFlavorHandler</srcNode>
<endNode>freemind.modes.mindmapmode.actions.PasteAction</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.PasteAction.FileListFlavorHandler</srcNode>
<endNode>freemind.modes.mindmapmode.actions.PasteAction.DataFlavorHandler</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.PasteAction.FileListFlavorHandler</srcNode>
<endNode>freemind.modes.mindmapmode.MindMapController</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.PasteAction.FileListFlavorHandler</srcNode>
<endNode>freemind.modes.mindmapmode.MindMapNodeModel</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.PasteAction.FileListFlavorHandler</srcNode>
<endNode>freemind.modes.MindMapNode</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.PasteAction.HtmlFlavorHandler</srcNode>
<endNode>freemind.controller.MindMapNodesSelection</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.PasteAction.HtmlFlavorHandler</srcNode>
<endNode>freemind.main.HtmlTools</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.PasteAction.HtmlFlavorHandler</srcNode>
<endNode>freemind.modes.ControllerAdapter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.PasteAction.HtmlFlavorHandler</srcNode>
<endNode>freemind.modes.mindmapmode.actions.PasteAction</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.PasteAction.HtmlFlavorHandler</srcNode>
<endNode>freemind.modes.mindmapmode.actions.PasteAction.DataFlavorHandler</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.PasteAction.HtmlFlavorHandler</srcNode>
<endNode>freemind.modes.mindmapmode.MindMapController</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.PasteAction.HtmlFlavorHandler</srcNode>
<endNode>freemind.modes.mindmapmode.MindMapNodeModel</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.PasteAction.HtmlFlavorHandler</srcNode>
<endNode>freemind.modes.MindMapNode</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.PasteAction.HtmlFlavorHandler</srcNode>
<endNode>freemind.modes.NodeAdapter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.PasteAction.HtmlFlavorHandler</srcNode>
<endNode>freemind.view.mindmapview.MapView</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.PasteAction.ImageFlavorHandler</srcNode>
<endNode>freemind.main.FreeMindMain</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.PasteAction.ImageFlavorHandler</srcNode>
<endNode>freemind.modes.ControllerAdapter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.PasteAction.ImageFlavorHandler</srcNode>
<endNode>freemind.modes.mindmapmode.actions.PasteAction</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.PasteAction.ImageFlavorHandler</srcNode>
<endNode>freemind.modes.mindmapmode.actions.PasteAction.DataFlavorHandler</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.PasteAction.ImageFlavorHandler</srcNode>
<endNode>freemind.modes.mindmapmode.MindMapController</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.PasteAction.ImageFlavorHandler</srcNode>
<endNode>freemind.modes.MindMapNode</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.PasteAction.MindMapNodesFlavorHandler</srcNode>
<endNode>freemind.controller.MindMapNodesSelection</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.PasteAction.MindMapNodesFlavorHandler</srcNode>
<endNode>freemind.main.FreeMind</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.PasteAction.MindMapNodesFlavorHandler</srcNode>
<endNode>freemind.main.FreeMindMain</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.PasteAction.MindMapNodesFlavorHandler</srcNode>
<endNode>freemind.main.Resources</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.PasteAction.MindMapNodesFlavorHandler</srcNode>
<endNode>freemind.modes.ControllerAdapter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.PasteAction.MindMapNodesFlavorHandler</srcNode>
<endNode>freemind.modes.mindmapmode.actions.PasteAction</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.PasteAction.MindMapNodesFlavorHandler</srcNode>
<endNode>freemind.modes.mindmapmode.actions.PasteAction.DataFlavorHandler</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.PasteAction.MindMapNodesFlavorHandler</srcNode>
<endNode>freemind.modes.mindmapmode.MindMapController</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.PasteAction.MindMapNodesFlavorHandler</srcNode>
<endNode>freemind.modes.mindmapmode.MindMapMapModel</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.PasteAction.MindMapNodesFlavorHandler</srcNode>
<endNode>freemind.modes.mindmapmode.MindMapMapModel.StringReaderCreator</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.PasteAction.MindMapNodesFlavorHandler</srcNode>
<endNode>freemind.modes.mindmapmode.MindMapNodeModel</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.PasteAction.MindMapNodesFlavorHandler</srcNode>
<endNode>freemind.modes.MindMapNode</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.PasteAction.MindMapNodesFlavorHandler</srcNode>
<endNode>freemind.modes.ModeController</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.PasteAction.NodeCoordinate</srcNode>
<endNode>freemind.modes.mindmapmode.actions.PasteAction</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.PasteAction.NodeCoordinate</srcNode>
<endNode>freemind.modes.MindMapNode</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.PasteAction.StringFlavorHandler</srcNode>
<endNode>freemind.modes.mindmapmode.actions.PasteAction</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.PasteAction.StringFlavorHandler</srcNode>
<endNode>freemind.modes.mindmapmode.actions.PasteAction.DataFlavorHandler</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.PasteAction.StringFlavorHandler</srcNode>
<endNode>freemind.modes.MindMapNode</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.PasteAsPlainTextAction</srcNode>
<endNode>freemind.main.FreeMindMain</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.PasteAsPlainTextAction</srcNode>
<endNode>freemind.main.HtmlTools</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.PasteAsPlainTextAction</srcNode>
<endNode>freemind.main.Resources</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.PasteAsPlainTextAction</srcNode>
<endNode>freemind.modes.ControllerAdapter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.PasteAsPlainTextAction</srcNode>
<endNode>freemind.modes.mindmapmode.MindMapController</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.PasteAsPlainTextAction</srcNode>
<endNode>freemind.modes.MindMapNode</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.RedoAction</srcNode>
<endNode>freemind.modes.ControllerAdapter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.RedoAction</srcNode>
<endNode>freemind.modes.mindmapmode.actions.UndoAction</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.RedoAction</srcNode>
<endNode>freemind.modes.mindmapmode.actions.xml.ActionPair</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.RedoAction</srcNode>
<endNode>freemind.modes.mindmapmode.MindMapController</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.RemoveAllIconsAction</srcNode>
<endNode>freemind.main.FreeMindMain</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.RemoveAllIconsAction</srcNode>
<endNode>freemind.main.Tools</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.RemoveAllIconsAction</srcNode>
<endNode>freemind.modes.ControllerAdapter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.RemoveAllIconsAction</srcNode>
<endNode>freemind.modes.IconInformation</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.RemoveAllIconsAction</srcNode>
<endNode>freemind.modes.MindIcon</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.RemoveAllIconsAction</srcNode>
<endNode>freemind.modes.MindMap</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.RemoveAllIconsAction</srcNode>
<endNode>freemind.modes.mindmapmode.actions.IconAction</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.RemoveAllIconsAction</srcNode>
<endNode>freemind.modes.mindmapmode.actions.NodeActorXml</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.RemoveAllIconsAction</srcNode>
<endNode>freemind.modes.mindmapmode.actions.NodeGeneralAction</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.RemoveAllIconsAction</srcNode>
<endNode>freemind.modes.mindmapmode.actions.xml.AbstractXmlAction</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.RemoveAllIconsAction</srcNode>
<endNode>freemind.modes.mindmapmode.actions.xml.ActionPair</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.RemoveAllIconsAction</srcNode>
<endNode>freemind.modes.mindmapmode.MindMapController</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.RemoveAllIconsAction</srcNode>
<endNode>freemind.modes.MindMapNode</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.RemoveArrowLinkAction</srcNode>
<endNode>freemind.main.Tools</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.RemoveArrowLinkAction</srcNode>
<endNode>freemind.modes.ControllerAdapter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.RemoveArrowLinkAction</srcNode>
<endNode>freemind.modes.MindMap</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.RemoveArrowLinkAction</srcNode>
<endNode>freemind.modes.MindMapArrowLink</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.RemoveArrowLinkAction</srcNode>
<endNode>freemind.modes.MindMapLine</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.RemoveArrowLinkAction</srcNode>
<endNode>freemind.modes.MindMapLink</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.RemoveArrowLinkAction</srcNode>
<endNode>freemind.modes.MindMapLinkRegistry</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.RemoveArrowLinkAction</srcNode>
<endNode>freemind.modes.mindmapmode.actions.FreemindAction</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.RemoveArrowLinkAction</srcNode>
<endNode>freemind.modes.mindmapmode.actions.xml.ActionPair</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.RemoveArrowLinkAction</srcNode>
<endNode>freemind.modes.mindmapmode.actions.xml.ActorXml</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.RemoveArrowLinkAction</srcNode>
<endNode>freemind.modes.mindmapmode.MindMapArrowLinkModel</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.RemoveArrowLinkAction</srcNode>
<endNode>freemind.modes.mindmapmode.MindMapController</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.RemoveArrowLinkAction</srcNode>
<endNode>freemind.modes.MindMapNode</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.RemoveIconAction</srcNode>
<endNode>freemind.main.FreeMindMain</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.RemoveIconAction</srcNode>
<endNode>freemind.main.Tools</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.RemoveIconAction</srcNode>
<endNode>freemind.modes.ControllerAdapter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.RemoveIconAction</srcNode>
<endNode>freemind.modes.IconInformation</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.RemoveIconAction</srcNode>
<endNode>freemind.modes.MindIcon</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.RemoveIconAction</srcNode>
<endNode>freemind.modes.MindMap</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.RemoveIconAction</srcNode>
<endNode>freemind.modes.mindmapmode.actions.IconAction</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.RemoveIconAction</srcNode>
<endNode>freemind.modes.mindmapmode.actions.NodeActorXml</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.RemoveIconAction</srcNode>
<endNode>freemind.modes.mindmapmode.actions.NodeGeneralAction</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.RemoveIconAction</srcNode>
<endNode>freemind.modes.mindmapmode.actions.xml.AbstractXmlAction</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.RemoveIconAction</srcNode>
<endNode>freemind.modes.mindmapmode.actions.xml.ActionPair</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.RemoveIconAction</srcNode>
<endNode>freemind.modes.mindmapmode.MindMapController</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.RemoveIconAction</srcNode>
<endNode>freemind.modes.MindMapNode</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.RevertAction</srcNode>
<endNode>freemind.controller.Controller</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.RevertAction</srcNode>
<endNode>freemind.main.Resources</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.RevertAction</srcNode>
<endNode>freemind.modes.ControllerAdapter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.RevertAction</srcNode>
<endNode>freemind.modes.MindMap</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.RevertAction</srcNode>
<endNode>freemind.modes.mindmapmode.actions.FreemindAction</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.RevertAction</srcNode>
<endNode>freemind.modes.mindmapmode.actions.xml.ActionPair</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.RevertAction</srcNode>
<endNode>freemind.modes.mindmapmode.actions.xml.ActorXml</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.RevertAction</srcNode>
<endNode>freemind.modes.mindmapmode.MindMapController</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.SelectAllAction</srcNode>
<endNode>freemind.modes.mindmapmode.actions.NodeGeneralAction</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.SelectAllAction</srcNode>
<endNode>freemind.modes.mindmapmode.MindMapController</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.SelectAllAction.SelectAllAction.(Anon_1)</srcNode>
<endNode>freemind.modes.ControllerAdapter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.SelectAllAction.SelectAllAction.(Anon_1)</srcNode>
<endNode>freemind.modes.mindmapmode.actions.SingleNodeOperation</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.SelectAllAction.SelectAllAction.(Anon_1)</srcNode>
<endNode>freemind.modes.mindmapmode.MindMapMapModel</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.SelectAllAction.SelectAllAction.(Anon_1)</srcNode>
<endNode>freemind.modes.mindmapmode.MindMapNodeModel</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.SelectAllAction.SelectAllAction.(Anon_1)</srcNode>
<endNode>freemind.view.mindmapview.MapView</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.SelectBranchAction</srcNode>
<endNode>freemind.modes.ControllerAdapter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.SelectBranchAction</srcNode>
<endNode>freemind.modes.mindmapmode.actions.FreemindAction</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.SelectBranchAction</srcNode>
<endNode>freemind.modes.mindmapmode.MindMapController</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.SetLinkByTextFieldAction</srcNode>
<endNode>freemind.modes.ControllerAdapter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.SetLinkByTextFieldAction</srcNode>
<endNode>freemind.modes.mindmapmode.actions.FreemindAction</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.SetLinkByTextFieldAction</srcNode>
<endNode>freemind.modes.mindmapmode.actions.xml.ActionPair</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.SetLinkByTextFieldAction</srcNode>
<endNode>freemind.modes.mindmapmode.actions.xml.ActorXml</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.SetLinkByTextFieldAction</srcNode>
<endNode>freemind.modes.mindmapmode.MindMapController</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.SetLinkByTextFieldAction</srcNode>
<endNode>freemind.modes.MindMapNode</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.SetLinkByTextFieldAction</srcNode>
<endNode>freemind.modes.NodeAdapter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.SetLinkByTextFieldAction</srcNode>
<endNode>freemind.view.mindmapview.MapView</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.SingleNodeOperation</srcNode>
<endNode>freemind.modes.mindmapmode.MindMapMapModel</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.SingleNodeOperation</srcNode>
<endNode>freemind.modes.mindmapmode.MindMapNodeModel</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.ToggleChildrenFoldedAction</srcNode>
<endNode>freemind.controller.Controller</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.ToggleChildrenFoldedAction</srcNode>
<endNode>freemind.modes.ControllerAdapter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.ToggleChildrenFoldedAction</srcNode>
<endNode>freemind.modes.mindmapmode.actions.ToggleFoldedAction</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.ToggleChildrenFoldedAction</srcNode>
<endNode>freemind.modes.mindmapmode.MindMapController</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.ToggleChildrenFoldedAction</srcNode>
<endNode>freemind.modes.MindMapNode</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.ToggleChildrenFoldedAction</srcNode>
<endNode>freemind.view.mindmapview.MapView</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.ToggleFoldedAction</srcNode>
<endNode>freemind.main.FreeMind</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.ToggleFoldedAction</srcNode>
<endNode>freemind.main.FreeMindMain</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.ToggleFoldedAction</srcNode>
<endNode>freemind.main.Resources</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.ToggleFoldedAction</srcNode>
<endNode>freemind.main.Tools</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.ToggleFoldedAction</srcNode>
<endNode>freemind.modes.common.CommonToggleFoldedAction</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.ToggleFoldedAction</srcNode>
<endNode>freemind.modes.ControllerAdapter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.ToggleFoldedAction</srcNode>
<endNode>freemind.modes.mindmapmode.actions.xml.ActionFactory</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.ToggleFoldedAction</srcNode>
<endNode>freemind.modes.mindmapmode.actions.xml.ActionPair</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.ToggleFoldedAction</srcNode>
<endNode>freemind.modes.mindmapmode.actions.xml.ActorXml</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.ToggleFoldedAction</srcNode>
<endNode>freemind.modes.mindmapmode.MindMapController</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.ToggleFoldedAction</srcNode>
<endNode>freemind.modes.MindMapNode</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.UnderlinedAction</srcNode>
<endNode>freemind.controller.MenuItemSelectedListener</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.UnderlinedAction</srcNode>
<endNode>freemind.modes.ControllerAdapter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.UnderlinedAction</srcNode>
<endNode>freemind.modes.MindMap</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.UnderlinedAction</srcNode>
<endNode>freemind.modes.mindmapmode.actions.NodeActorXml</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.UnderlinedAction</srcNode>
<endNode>freemind.modes.mindmapmode.actions.NodeGeneralAction</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.UnderlinedAction</srcNode>
<endNode>freemind.modes.mindmapmode.actions.xml.ActionPair</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.UnderlinedAction</srcNode>
<endNode>freemind.modes.mindmapmode.MindMapController</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.UnderlinedAction</srcNode>
<endNode>freemind.modes.MindMapNode</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.UnderlinedAction</srcNode>
<endNode>freemind.modes.NodeAdapter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.UndoAction</srcNode>
<endNode>freemind.main.FreeMindMain</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.UndoAction</srcNode>
<endNode>freemind.main.Resources</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.UndoAction</srcNode>
<endNode>freemind.main.Tools</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.UndoAction</srcNode>
<endNode>freemind.modes.ControllerAdapter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.UndoAction</srcNode>
<endNode>freemind.modes.mindmapmode.actions.xml.AbstractXmlAction</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.UndoAction</srcNode>
<endNode>freemind.modes.mindmapmode.actions.xml.ActionPair</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.UndoAction</srcNode>
<endNode>freemind.modes.mindmapmode.MindMapController</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.UndoAction.startActionFrame.(Anon_1)</srcNode>
<endNode>freemind.modes.mindmapmode.actions.UndoAction</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.UndoPasteHandler</srcNode>
<endNode>freemind.main.Resources</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.UndoPasteHandler</srcNode>
<endNode>freemind.modes.mindmapmode.actions.DeleteChildAction</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.UndoPasteHandler</srcNode>
<endNode>freemind.modes.mindmapmode.actions.PasteAction.NodeCoordinate</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.UndoPasteHandler</srcNode>
<endNode>freemind.modes.mindmapmode.actions.xml.ActorXml</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.UndoPasteHandler</srcNode>
<endNode>freemind.modes.mindmapmode.MindMapController</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.UndoPasteHandler</srcNode>
<endNode>freemind.modes.MindMapNode</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.UsePlainTextAction</srcNode>
<endNode>freemind.modes.mindmapmode.actions.NodeGeneralAction</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.UsePlainTextAction</srcNode>
<endNode>freemind.modes.mindmapmode.MindMapController</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.UsePlainTextAction.UsePlainTextAction.(Anon_1)</srcNode>
<endNode>freemind.main.HtmlTools</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.UsePlainTextAction.UsePlainTextAction.(Anon_1)</srcNode>
<endNode>freemind.modes.mindmapmode.actions.SingleNodeOperation</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.UsePlainTextAction.UsePlainTextAction.(Anon_1)</srcNode>
<endNode>freemind.modes.mindmapmode.MindMapController</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.UsePlainTextAction.UsePlainTextAction.(Anon_1)</srcNode>
<endNode>freemind.modes.mindmapmode.MindMapMapModel</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.UsePlainTextAction.UsePlainTextAction.(Anon_1)</srcNode>
<endNode>freemind.modes.mindmapmode.MindMapNodeModel</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.UsePlainTextAction.UsePlainTextAction.(Anon_1)</srcNode>
<endNode>freemind.modes.NodeAdapter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.UseRichFormattingAction</srcNode>
<endNode>freemind.modes.mindmapmode.actions.NodeGeneralAction</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.UseRichFormattingAction</srcNode>
<endNode>freemind.modes.mindmapmode.MindMapController</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.UseRichFormattingAction.UseRichFormattingAction.(Anon_1)</srcNode>
<endNode>freemind.main.HtmlTools</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.UseRichFormattingAction.UseRichFormattingAction.(Anon_1)</srcNode>
<endNode>freemind.modes.mindmapmode.actions.SingleNodeOperation</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.UseRichFormattingAction.UseRichFormattingAction.(Anon_1)</srcNode>
<endNode>freemind.modes.mindmapmode.MindMapController</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.UseRichFormattingAction.UseRichFormattingAction.(Anon_1)</srcNode>
<endNode>freemind.modes.mindmapmode.MindMapMapModel</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.UseRichFormattingAction.UseRichFormattingAction.(Anon_1)</srcNode>
<endNode>freemind.modes.mindmapmode.MindMapNodeModel</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.UseRichFormattingAction.UseRichFormattingAction.(Anon_1)</srcNode>
<endNode>freemind.modes.NodeAdapter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.xml.AbstractActorXml</srcNode>
<endNode>freemind.modes.attributes.AttributeController</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.xml.AbstractActorXml</srcNode>
<endNode>freemind.modes.attributes.AttributeRegistry</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.xml.AbstractActorXml</srcNode>
<endNode>freemind.modes.ControllerAdapter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.xml.AbstractActorXml</srcNode>
<endNode>freemind.modes.MapRegistry</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.xml.AbstractActorXml</srcNode>
<endNode>freemind.modes.MindMap</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.xml.AbstractActorXml</srcNode>
<endNode>freemind.modes.mindmapmode.actions.xml.ActionFactory</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.xml.AbstractActorXml</srcNode>
<endNode>freemind.modes.mindmapmode.actions.xml.ActorXml</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.xml.AbstractActorXml</srcNode>
<endNode>freemind.modes.mindmapmode.MindMapController</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.xml.AbstractActorXml</srcNode>
<endNode>freemind.modes.MindMapNode</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.xml.AbstractActorXml</srcNode>
<endNode>freemind.modes.NodeAdapter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.xml.AbstractXmlAction</srcNode>
<endNode>freemind.modes.mindmapmode.actions.FreemindAction</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.xml.AbstractXmlAction</srcNode>
<endNode>freemind.modes.mindmapmode.actions.xml.ActionFactory</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.xml.AbstractXmlAction</srcNode>
<endNode>freemind.modes.mindmapmode.actions.xml.ActorXml</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.xml.AbstractXmlAction</srcNode>
<endNode>freemind.modes.mindmapmode.MindMapController</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.xml.ActionFactory</srcNode>
<endNode>freemind.controller.Controller</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.xml.ActionFactory</srcNode>
<endNode>freemind.main.Resources</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.xml.ActionFactory</srcNode>
<endNode>freemind.modes.mindmapmode.actions.xml.ActionFilter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.xml.ActionFactory</srcNode>
<endNode>freemind.modes.mindmapmode.actions.xml.ActionFilter.FinalActionFilter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.xml.ActionFactory</srcNode>
<endNode>freemind.modes.mindmapmode.actions.xml.ActionFilter.FirstActionFilter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.xml.ActionFactory</srcNode>
<endNode>freemind.modes.mindmapmode.actions.xml.ActionHandler</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.xml.ActionFactory</srcNode>
<endNode>freemind.modes.mindmapmode.actions.xml.ActionPair</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.xml.ActionFactory</srcNode>
<endNode>freemind.modes.mindmapmode.actions.xml.ActorXml</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.xml.ActionFactory</srcNode>
<endNode>freemind.modes.mindmapmode.actions.xml.UndoActionHandler</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.xml.ActionFilter</srcNode>
<endNode>freemind.modes.mindmapmode.actions.xml.ActionPair</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.xml.ActionFilter.FinalActionFilter</srcNode>
<endNode>freemind.modes.mindmapmode.actions.xml.ActionFilter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.xml.ActionFilter.FirstActionFilter</srcNode>
<endNode>freemind.modes.mindmapmode.actions.xml.ActionFilter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.xml.PrintActionHandler</srcNode>
<endNode>freemind.main.FreeMindMain</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.xml.PrintActionHandler</srcNode>
<endNode>freemind.modes.ControllerAdapter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.xml.PrintActionHandler</srcNode>
<endNode>freemind.modes.mindmapmode.actions.xml.ActionHandler</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.xml.PrintActionHandler</srcNode>
<endNode>freemind.modes.mindmapmode.MindMapController</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.xml.UndoActionHandler</srcNode>
<endNode>freemind.modes.mindmapmode.actions.RedoAction</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.xml.UndoActionHandler</srcNode>
<endNode>freemind.modes.mindmapmode.actions.UndoAction</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.xml.UndoActionHandler</srcNode>
<endNode>freemind.modes.mindmapmode.actions.xml.ActionPair</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.actions.xml.UndoActionHandler</srcNode>
<endNode>freemind.modes.mindmapmode.MindMapController</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.attributeactors.AssignAttributeDialog</srcNode>
<endNode>freemind.controller.Controller</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.attributeactors.AssignAttributeDialog</srcNode>
<endNode>freemind.controller.MapModuleManager</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.attributeactors.AssignAttributeDialog</srcNode>
<endNode>freemind.controller.MapModuleManager.MapModuleChangeObserver</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.attributeactors.AssignAttributeDialog</srcNode>
<endNode>freemind.main.Resources</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.attributeactors.AssignAttributeDialog</srcNode>
<endNode>freemind.main.Tools</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.attributeactors.AssignAttributeDialog</srcNode>
<endNode>freemind.modes.attributes.AttributeRegistry</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.attributeactors.AssignAttributeDialog</srcNode>
<endNode>freemind.modes.attributes.AttributeRegistryElement</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.attributeactors.AssignAttributeDialog</srcNode>
<endNode>freemind.modes.MapRegistry</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.attributeactors.AssignAttributeDialog</srcNode>
<endNode>freemind.modes.MindMap</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.attributeactors.AssignAttributeDialog</srcNode>
<endNode>freemind.modes.mindmapmode.attributeactors.AssignAttributeDialog.AddAction</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.attributeactors.AssignAttributeDialog</srcNode>
<endNode>freemind.modes.mindmapmode.attributeactors.AssignAttributeDialog.ClonedComboBoxModel</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.attributeactors.AssignAttributeDialog</srcNode>
<endNode>freemind.modes.mindmapmode.attributeactors.AssignAttributeDialog.DeleteAttributeAction</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.attributeactors.AssignAttributeDialog</srcNode>
<endNode>freemind.modes.mindmapmode.attributeactors.AssignAttributeDialog.DeleteValueAction</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.attributeactors.AssignAttributeDialog</srcNode>
<endNode>freemind.modes.mindmapmode.attributeactors.AssignAttributeDialog.ReplaceValueAction</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.attributeactors.AssignAttributeDialog</srcNode>
<endNode>freemind.modes.mindmapmode.attributeactors.AttributesListener</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.attributeactors.AssignAttributeDialog</srcNode>
<endNode>freemind.modes.mindmapmode.MindMapMode</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.attributeactors.AssignAttributeDialog</srcNode>
<endNode>freemind.modes.Mode</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.attributeactors.AssignAttributeDialog</srcNode>
<endNode>freemind.view.MapModule</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.attributeactors.AssignAttributeDialog</srcNode>
<endNode>freemind.view.mindmapview.MapView</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.attributeactors.AssignAttributeDialog.AddAction</srcNode>
<endNode>freemind.modes.attributes.AttributeController</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.attributeactors.AssignAttributeDialog.AddAction</srcNode>
<endNode>freemind.modes.attributes.NodeAttributeTableModel</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.attributeactors.AssignAttributeDialog.AddAction</srcNode>
<endNode>freemind.modes.mindmapmode.attributeactors.AssignAttributeDialog</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.attributeactors.AssignAttributeDialog.AddAction</srcNode>
<endNode>freemind.modes.mindmapmode.attributeactors.AssignAttributeDialog.IteratingAction</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.attributeactors.AssignAttributeDialog.AddAction</srcNode>
<endNode>freemind.modes.MindMapNode</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.attributeactors.AssignAttributeDialog.AssignAttributeDialog.(Anon_1)</srcNode>
<endNode>freemind.modes.mindmapmode.attributeactors.AssignAttributeDialog</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.attributeactors.AssignAttributeDialog.AssignAttributeDialog.(Anon_2)</srcNode>
<endNode>freemind.modes.mindmapmode.attributeactors.AssignAttributeDialog</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.attributeactors.AssignAttributeDialog.DeleteAttributeAction</srcNode>
<endNode>freemind.modes.attributes.Attribute</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.attributeactors.AssignAttributeDialog.DeleteAttributeAction</srcNode>
<endNode>freemind.modes.attributes.AttributeController</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.attributeactors.AssignAttributeDialog.DeleteAttributeAction</srcNode>
<endNode>freemind.modes.attributes.NodeAttributeTableModel</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.attributeactors.AssignAttributeDialog.DeleteAttributeAction</srcNode>
<endNode>freemind.modes.mindmapmode.attributeactors.AssignAttributeDialog</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.attributeactors.AssignAttributeDialog.DeleteAttributeAction</srcNode>
<endNode>freemind.modes.mindmapmode.attributeactors.AssignAttributeDialog.IteratingAction</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.attributeactors.AssignAttributeDialog.DeleteAttributeAction</srcNode>
<endNode>freemind.modes.MindMapNode</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.attributeactors.AssignAttributeDialog.DeleteValueAction</srcNode>
<endNode>freemind.modes.attributes.Attribute</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.attributeactors.AssignAttributeDialog.DeleteValueAction</srcNode>
<endNode>freemind.modes.attributes.AttributeController</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.attributeactors.AssignAttributeDialog.DeleteValueAction</srcNode>
<endNode>freemind.modes.attributes.NodeAttributeTableModel</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.attributeactors.AssignAttributeDialog.DeleteValueAction</srcNode>
<endNode>freemind.modes.mindmapmode.attributeactors.AssignAttributeDialog</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.attributeactors.AssignAttributeDialog.DeleteValueAction</srcNode>
<endNode>freemind.modes.mindmapmode.attributeactors.AssignAttributeDialog.IteratingAction</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.attributeactors.AssignAttributeDialog.DeleteValueAction</srcNode>
<endNode>freemind.modes.MindMapNode</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.attributeactors.AssignAttributeDialog.IteratingAction</srcNode>
<endNode>freemind.main.Resources</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.attributeactors.AssignAttributeDialog.IteratingAction</srcNode>
<endNode>freemind.modes.mindmapmode.attributeactors.AssignAttributeDialog</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.attributeactors.AssignAttributeDialog.IteratingAction</srcNode>
<endNode>freemind.modes.MindMapNode</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.attributeactors.AssignAttributeDialog.IteratingAction</srcNode>
<endNode>freemind.view.mindmapview.MapView</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.attributeactors.AssignAttributeDialog.IteratingAction</srcNode>
<endNode>freemind.view.mindmapview.NodeView</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.attributeactors.AssignAttributeDialog.ReplaceValueAction</srcNode>
<endNode>freemind.modes.attributes.Attribute</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.attributeactors.AssignAttributeDialog.ReplaceValueAction</srcNode>
<endNode>freemind.modes.attributes.AttributeController</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.attributeactors.AssignAttributeDialog.ReplaceValueAction</srcNode>
<endNode>freemind.modes.attributes.NodeAttributeTableModel</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.attributeactors.AssignAttributeDialog.ReplaceValueAction</srcNode>
<endNode>freemind.modes.mindmapmode.attributeactors.AssignAttributeDialog</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.attributeactors.AssignAttributeDialog.ReplaceValueAction</srcNode>
<endNode>freemind.modes.mindmapmode.attributeactors.AssignAttributeDialog.IteratingAction</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.attributeactors.AssignAttributeDialog.ReplaceValueAction</srcNode>
<endNode>freemind.modes.MindMapNode</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.attributeactors.AttributeManagerDialog</srcNode>
<endNode>freemind.controller.Controller</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.attributeactors.AttributeManagerDialog</srcNode>
<endNode>freemind.controller.MapModuleManager</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.attributeactors.AttributeManagerDialog</srcNode>
<endNode>freemind.controller.MapModuleManager.MapModuleChangeObserver</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.attributeactors.AttributeManagerDialog</srcNode>
<endNode>freemind.main.Resources</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.attributeactors.AttributeManagerDialog</srcNode>
<endNode>freemind.main.Tools</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.attributeactors.AttributeManagerDialog</srcNode>
<endNode>freemind.modes.attributes.AttributeController</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.attributeactors.AttributeManagerDialog</srcNode>
<endNode>freemind.modes.attributes.AttributeRegistry</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.attributeactors.AttributeManagerDialog</srcNode>
<endNode>freemind.modes.MapRegistry</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.attributeactors.AttributeManagerDialog</srcNode>
<endNode>freemind.modes.MindMap</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.attributeactors.AttributeManagerDialog</srcNode>
<endNode>freemind.modes.mindmapmode.attributeactors.AttributeManagerDialog.ApplyAction</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.attributeactors.AttributeManagerDialog</srcNode>
<endNode>freemind.modes.mindmapmode.attributeactors.AttributeManagerDialog.CancelAction</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.attributeactors.AttributeManagerDialog</srcNode>
<endNode>freemind.modes.mindmapmode.attributeactors.AttributeManagerDialog.ClosingListener</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.attributeactors.AttributeManagerDialog</srcNode>
<endNode>freemind.modes.mindmapmode.attributeactors.AttributeManagerDialog.EditListAction</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.attributeactors.AttributeManagerDialog</srcNode>
<endNode>freemind.modes.mindmapmode.attributeactors.AttributeManagerDialog.ImportAction</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.attributeactors.AttributeManagerDialog</srcNode>
<endNode>freemind.modes.mindmapmode.attributeactors.AttributeManagerDialog.OKAction</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.attributeactors.AttributeManagerDialog</srcNode>
<endNode>freemind.modes.mindmapmode.attributeactors.AttributeRegistryTable</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.attributeactors.AttributeManagerDialog</srcNode>
<endNode>freemind.modes.mindmapmode.attributeactors.ImportAttributesDialog</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.attributeactors.AttributeManagerDialog</srcNode>
<endNode>freemind.modes.Mode</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.attributeactors.AttributeManagerDialog</srcNode>
<endNode>freemind.view.MapModule</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.attributeactors.AttributeManagerDialog.ApplyAction</srcNode>
<endNode>freemind.main.Resources</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.attributeactors.AttributeManagerDialog.ApplyAction</srcNode>
<endNode>freemind.main.Tools</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.attributeactors.AttributeManagerDialog.ApplyAction</srcNode>
<endNode>freemind.modes.mindmapmode.attributeactors.AttributeManagerDialog</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.attributeactors.AttributeManagerDialog.AttributeManagerDialog.(Anon_1)</srcNode>
<endNode>freemind.modes.attributes.AttributeRegistry</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.attributeactors.AttributeManagerDialog.AttributeManagerDialog.(Anon_1)</srcNode>
<endNode>freemind.modes.mindmapmode.attributeactors.AttributeManagerDialog</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.attributeactors.AttributeManagerDialog.AttributeManagerDialog.(Anon_2)</srcNode>
<endNode>freemind.modes.attributes.AttributeRegistry</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.attributeactors.AttributeManagerDialog.AttributeManagerDialog.(Anon_2)</srcNode>
<endNode>freemind.modes.mindmapmode.attributeactors.AttributeManagerDialog</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.attributeactors.AttributeManagerDialog.CancelAction</srcNode>
<endNode>freemind.main.Resources</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.attributeactors.AttributeManagerDialog.CancelAction</srcNode>
<endNode>freemind.main.Tools</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.attributeactors.AttributeManagerDialog.CancelAction</srcNode>
<endNode>freemind.modes.mindmapmode.attributeactors.AttributeManagerDialog</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.attributeactors.AttributeManagerDialog.ClosingListener</srcNode>
<endNode>freemind.modes.mindmapmode.attributeactors.AttributeManagerDialog</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.attributeactors.AttributeManagerDialog.EditListAction</srcNode>
<endNode>freemind.controller.filter.util.SortedListModel</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.attributeactors.AttributeManagerDialog.EditListAction</srcNode>
<endNode>freemind.modes.mindmapmode.attributeactors.AttributeManagerDialog</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.attributeactors.AttributeManagerDialog.EditListAction</srcNode>
<endNode>freemind.modes.mindmapmode.attributeactors.ListDialog</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.attributeactors.AttributeManagerDialog.ImportAction</srcNode>
<endNode>freemind.main.Resources</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.attributeactors.AttributeManagerDialog.ImportAction</srcNode>
<endNode>freemind.main.Tools</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.attributeactors.AttributeManagerDialog.ImportAction</srcNode>
<endNode>freemind.modes.mindmapmode.attributeactors.AttributeManagerDialog</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.attributeactors.AttributeManagerDialog.ImportAction</srcNode>
<endNode>freemind.modes.mindmapmode.attributeactors.ImportAttributesDialog</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.attributeactors.AttributeManagerDialog.OKAction</srcNode>
<endNode>freemind.main.Resources</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.attributeactors.AttributeManagerDialog.OKAction</srcNode>
<endNode>freemind.main.Tools</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.attributeactors.AttributeManagerDialog.OKAction</srcNode>
<endNode>freemind.modes.mindmapmode.attributeactors.AttributeManagerDialog</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.attributeactors.AttributeRegistryTable</srcNode>
<endNode>freemind.controller.filter.util.SortedListModel</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.attributeactors.AttributeRegistryTable</srcNode>
<endNode>freemind.main.Resources</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.attributeactors.AttributeRegistryTable</srcNode>
<endNode>freemind.modes.mindmapmode.attributeactors.AttributeManagerDialog</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.attributeactors.AttributeRegistryTable</srcNode>
<endNode>freemind.modes.mindmapmode.attributeactors.AttributeManagerDialog.EditListAction</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.attributeactors.AttributeRegistryTable</srcNode>
<endNode>freemind.modes.mindmapmode.attributeactors.AttributeRegistryTable.ButtonEditor</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.attributeactors.AttributeRegistryTable</srcNode>
<endNode>freemind.modes.mindmapmode.attributeactors.AttributeRegistryTable.ButtonRenderer</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.attributeactors.AttributeRegistryTable</srcNode>
<endNode>freemind.modes.mindmapmode.attributeactors.AttributeRegistryTable.ToggleAllAction</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.attributeactors.AttributeRegistryTable.ToggleAllAction</srcNode>
<endNode>freemind.modes.mindmapmode.attributeactors.AttributeRegistryTable</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.attributeactors.ImportAttributesDialog</srcNode>
<endNode>freemind.controller.Controller</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.attributeactors.ImportAttributesDialog</srcNode>
<endNode>freemind.controller.filter.util.SortedComboBoxModel</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.attributeactors.ImportAttributesDialog</srcNode>
<endNode>freemind.controller.filter.util.SortedMapListModel</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.attributeactors.ImportAttributesDialog</srcNode>
<endNode>freemind.controller.MapModuleManager</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.attributeactors.ImportAttributesDialog</srcNode>
<endNode>freemind.main.Resources</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.attributeactors.ImportAttributesDialog</srcNode>
<endNode>freemind.main.Tools</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.attributeactors.ImportAttributesDialog</srcNode>
<endNode>freemind.modes.attributes.AttributeController</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.attributeactors.ImportAttributesDialog</srcNode>
<endNode>freemind.modes.attributes.AttributeRegistry</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.attributeactors.ImportAttributesDialog</srcNode>
<endNode>freemind.modes.attributes.AttributeRegistryElement</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.attributeactors.ImportAttributesDialog</srcNode>
<endNode>freemind.modes.MapRegistry</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.attributeactors.ImportAttributesDialog</srcNode>
<endNode>freemind.modes.MindMap</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.attributeactors.ImportAttributesDialog</srcNode>
<endNode>freemind.modes.mindmapmode.attributeactors.ImportAttributesDialog.AttributeTreeNodeInfo</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.attributeactors.ImportAttributesDialog</srcNode>
<endNode>freemind.modes.mindmapmode.attributeactors.ImportAttributesDialog.MyRenderer</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.attributeactors.ImportAttributesDialog</srcNode>
<endNode>freemind.modes.mindmapmode.attributeactors.ImportAttributesDialog.TreeNodeInfo</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.attributeactors.ImportAttributesDialog</srcNode>
<endNode>freemind.view.MapModule</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.attributeactors.ImportAttributesDialog.AttributeTreeNodeInfo</srcNode>
<endNode>freemind.modes.mindmapmode.attributeactors.ImportAttributesDialog.TreeNodeInfo</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.attributeactors.ImportAttributesDialog.ImportAttributesDialog.(Anon_1)</srcNode>
<endNode>freemind.modes.mindmapmode.attributeactors.ImportAttributesDialog</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.attributeactors.ImportAttributesDialog.MyRenderer</srcNode>
<endNode>freemind.modes.MindIcon</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.attributeactors.ImportAttributesDialog.MyRenderer</srcNode>
<endNode>freemind.modes.mindmapmode.attributeactors.ImportAttributesDialog.TreeNodeInfo</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.attributeactors.InsertAttributeActor</srcNode>
<endNode>freemind.modes.attributes.Attribute</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.attributeactors.InsertAttributeActor</srcNode>
<endNode>freemind.modes.attributes.NodeAttributeTableModel</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.attributeactors.InsertAttributeActor</srcNode>
<endNode>freemind.modes.mindmapmode.actions.xml.AbstractActorXml</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.attributeactors.InsertAttributeActor</srcNode>
<endNode>freemind.modes.mindmapmode.actions.xml.ActionPair</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.attributeactors.InsertAttributeActor</srcNode>
<endNode>freemind.modes.mindmapmode.attributeactors.MindMapModeAttributeController</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.attributeactors.InsertAttributeActor</srcNode>
<endNode>freemind.modes.mindmapmode.attributeactors.RemoveAttributeActor</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.attributeactors.InsertAttributeActor</srcNode>
<endNode>freemind.modes.mindmapmode.MindMapController</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.attributeactors.InsertAttributeActor</srcNode>
<endNode>freemind.modes.NodeAdapter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.attributeactors.ListDialog</srcNode>
<endNode>freemind.controller.filter.util.SortedListModel</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.attributeactors.ListDialog</srcNode>
<endNode>freemind.main.Resources</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.attributeactors.ListDialog</srcNode>
<endNode>freemind.main.Tools</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.attributeactors.ListDialog</srcNode>
<endNode>freemind.modes.mindmapmode.attributeactors.ListDialog.AddAction</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.attributeactors.ListDialog</srcNode>
<endNode>freemind.modes.mindmapmode.attributeactors.ListDialog.CloseAction</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.attributeactors.ListDialog</srcNode>
<endNode>freemind.modes.mindmapmode.attributeactors.ListDialog.DeleteAction</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.attributeactors.ListDialog</srcNode>
<endNode>freemind.modes.mindmapmode.attributeactors.ListDialog.ListSelectionChangeListener</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.attributeactors.ListDialog</srcNode>
<endNode>freemind.modes.mindmapmode.attributeactors.ListDialog.RenameAction</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.attributeactors.ListDialog</srcNode>
<endNode>freemind.modes.mindmapmode.attributeactors.ListDialog.TextChangeListener</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.attributeactors.ListDialog.AddAction</srcNode>
<endNode>freemind.controller.filter.util.SortedListModel</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.attributeactors.ListDialog.AddAction</srcNode>
<endNode>freemind.modes.mindmapmode.attributeactors.ListDialog</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.attributeactors.ListDialog.CloseAction</srcNode>
<endNode>freemind.modes.mindmapmode.attributeactors.ListDialog</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.attributeactors.ListDialog.DeleteAction</srcNode>
<endNode>freemind.controller.filter.util.SortedListModel</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.attributeactors.ListDialog.DeleteAction</srcNode>
<endNode>freemind.modes.mindmapmode.attributeactors.ListDialog</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.attributeactors.ListDialog.ListDialog.(Anon_2)</srcNode>
<endNode>freemind.modes.mindmapmode.attributeactors.ListDialog</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.attributeactors.ListDialog.ListSelectionChangeListener</srcNode>
<endNode>freemind.modes.mindmapmode.attributeactors.ListDialog</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.attributeactors.ListDialog.RenameAction</srcNode>
<endNode>freemind.controller.filter.util.SortedListModel</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.attributeactors.ListDialog.RenameAction</srcNode>
<endNode>freemind.modes.mindmapmode.attributeactors.ListDialog</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.attributeactors.ListDialog.TextChangeListener</srcNode>
<endNode>freemind.modes.mindmapmode.attributeactors.ListDialog</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.attributeactors.MindMapModeAttributeController</srcNode>
<endNode>freemind.controller.filter.util.SortedComboBoxModel</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.attributeactors.MindMapModeAttributeController</srcNode>
<endNode>freemind.controller.filter.util.SortedMapListModel</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.attributeactors.MindMapModeAttributeController</srcNode>
<endNode>freemind.controller.filter.util.SortedMapVector</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.attributeactors.MindMapModeAttributeController</srcNode>
<endNode>freemind.modes.attributes.Attribute</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.attributeactors.MindMapModeAttributeController</srcNode>
<endNode>freemind.modes.attributes.AttributeController</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.attributeactors.MindMapModeAttributeController</srcNode>
<endNode>freemind.modes.attributes.AttributeRegistry</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.attributeactors.MindMapModeAttributeController</srcNode>
<endNode>freemind.modes.attributes.AttributeRegistryElement</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.attributeactors.MindMapModeAttributeController</srcNode>
<endNode>freemind.modes.attributes.AttributeTableLayoutModel</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.attributeactors.MindMapModeAttributeController</srcNode>
<endNode>freemind.modes.attributes.NodeAttributeTableModel</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.attributeactors.MindMapModeAttributeController</srcNode>
<endNode>freemind.modes.ControllerAdapter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.attributeactors.MindMapModeAttributeController</srcNode>
<endNode>freemind.modes.MapRegistry</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.attributeactors.MindMapModeAttributeController</srcNode>
<endNode>freemind.modes.MindMap</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.attributeactors.MindMapModeAttributeController</srcNode>
<endNode>freemind.modes.mindmapmode.actions.xml.ActionFactory</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.attributeactors.MindMapModeAttributeController</srcNode>
<endNode>freemind.modes.mindmapmode.actions.xml.ActionPair</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.attributeactors.MindMapModeAttributeController</srcNode>
<endNode>freemind.modes.mindmapmode.attributeactors.InsertAttributeActor</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.attributeactors.MindMapModeAttributeController</srcNode>
<endNode>freemind.modes.mindmapmode.attributeactors.MindMapModeAttributeController.AttributeChanger</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.attributeactors.MindMapModeAttributeController</srcNode>
<endNode>freemind.modes.mindmapmode.attributeactors.MindMapModeAttributeController.AttributeRemover</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.attributeactors.MindMapModeAttributeController</srcNode>
<endNode>freemind.modes.mindmapmode.attributeactors.MindMapModeAttributeController.AttributeRenamer</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.attributeactors.MindMapModeAttributeController</srcNode>
<endNode>freemind.modes.mindmapmode.attributeactors.MindMapModeAttributeController.AttributeValueRemover</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.attributeactors.MindMapModeAttributeController</srcNode>
<endNode>freemind.modes.mindmapmode.attributeactors.MindMapModeAttributeController.Iterator</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.attributeactors.MindMapModeAttributeController</srcNode>
<endNode>freemind.modes.mindmapmode.attributeactors.MindMapModeAttributeController.Visitor</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.attributeactors.MindMapModeAttributeController</srcNode>
<endNode>freemind.modes.mindmapmode.attributeactors.RegistryAttributeActor</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.attributeactors.MindMapModeAttributeController</srcNode>
<endNode>freemind.modes.mindmapmode.attributeactors.RegistryAttributeValueActor</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.attributeactors.MindMapModeAttributeController</srcNode>
<endNode>freemind.modes.mindmapmode.attributeactors.RemoveAttributeActor</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.attributeactors.MindMapModeAttributeController</srcNode>
<endNode>freemind.modes.mindmapmode.attributeactors.ReplaceAttributeValueActor</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.attributeactors.MindMapModeAttributeController</srcNode>
<endNode>freemind.modes.mindmapmode.attributeactors.SetAttributeColumnWidthActor</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.attributeactors.MindMapModeAttributeController</srcNode>
<endNode>freemind.modes.mindmapmode.attributeactors.SetAttributeFontSizeActor</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.attributeactors.MindMapModeAttributeController</srcNode>
<endNode>freemind.modes.mindmapmode.attributeactors.SetAttributeNameActor</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.attributeactors.MindMapModeAttributeController</srcNode>
<endNode>freemind.modes.mindmapmode.attributeactors.SetAttributeRestrictedActor</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.attributeactors.MindMapModeAttributeController</srcNode>
<endNode>freemind.modes.mindmapmode.attributeactors.SetAttributeValueActor</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.attributeactors.MindMapModeAttributeController</srcNode>
<endNode>freemind.modes.mindmapmode.attributeactors.SetAttributeVisibleActor</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.attributeactors.MindMapModeAttributeController</srcNode>
<endNode>freemind.modes.mindmapmode.attributeactors.UnregistryAttributeActor</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.attributeactors.MindMapModeAttributeController</srcNode>
<endNode>freemind.modes.mindmapmode.attributeactors.UnregistryAttributeValueActor</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.attributeactors.MindMapModeAttributeController</srcNode>
<endNode>freemind.modes.mindmapmode.MindMapController</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.attributeactors.MindMapModeAttributeController</srcNode>
<endNode>freemind.modes.mindmapmode.MindMapNodeModel</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.attributeactors.MindMapModeAttributeController</srcNode>
<endNode>freemind.modes.MindMapNode</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.attributeactors.MindMapModeAttributeController</srcNode>
<endNode>freemind.modes.NodeAdapter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.attributeactors.MindMapModeAttributeController.AttributeChanger</srcNode>
<endNode>freemind.modes.attributes.NodeAttributeTableModel</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.attributeactors.MindMapModeAttributeController.AttributeChanger</srcNode>
<endNode>freemind.modes.mindmapmode.actions.xml.ActionPair</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.attributeactors.MindMapModeAttributeController.AttributeChanger</srcNode>
<endNode>freemind.modes.mindmapmode.attributeactors.MindMapModeAttributeController</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.attributeactors.MindMapModeAttributeController.AttributeChanger</srcNode>
<endNode>freemind.modes.mindmapmode.attributeactors.MindMapModeAttributeController.Visitor</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.attributeactors.MindMapModeAttributeController.AttributeChanger</srcNode>
<endNode>freemind.modes.mindmapmode.attributeactors.SetAttributeValueActor</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.attributeactors.MindMapModeAttributeController.AttributeChanger</srcNode>
<endNode>freemind.modes.mindmapmode.MindMapController</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.attributeactors.MindMapModeAttributeController.AttributeRemover</srcNode>
<endNode>freemind.modes.attributes.NodeAttributeTableModel</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.attributeactors.MindMapModeAttributeController.AttributeRemover</srcNode>
<endNode>freemind.modes.mindmapmode.actions.xml.ActionPair</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.attributeactors.MindMapModeAttributeController.AttributeRemover</srcNode>
<endNode>freemind.modes.mindmapmode.attributeactors.MindMapModeAttributeController</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.attributeactors.MindMapModeAttributeController.AttributeRemover</srcNode>
<endNode>freemind.modes.mindmapmode.attributeactors.MindMapModeAttributeController.Visitor</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.attributeactors.MindMapModeAttributeController.AttributeRemover</srcNode>
<endNode>freemind.modes.mindmapmode.attributeactors.RemoveAttributeActor</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.attributeactors.MindMapModeAttributeController.AttributeRemover</srcNode>
<endNode>freemind.modes.mindmapmode.MindMapController</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.attributeactors.MindMapModeAttributeController.AttributeRenamer</srcNode>
<endNode>freemind.modes.attributes.NodeAttributeTableModel</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.attributeactors.MindMapModeAttributeController.AttributeRenamer</srcNode>
<endNode>freemind.modes.mindmapmode.actions.xml.ActionPair</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.attributeactors.MindMapModeAttributeController.AttributeRenamer</srcNode>
<endNode>freemind.modes.mindmapmode.attributeactors.MindMapModeAttributeController</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.attributeactors.MindMapModeAttributeController.AttributeRenamer</srcNode>
<endNode>freemind.modes.mindmapmode.attributeactors.MindMapModeAttributeController.Visitor</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.attributeactors.MindMapModeAttributeController.AttributeRenamer</srcNode>
<endNode>freemind.modes.mindmapmode.attributeactors.SetAttributeNameActor</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.attributeactors.MindMapModeAttributeController.AttributeRenamer</srcNode>
<endNode>freemind.modes.mindmapmode.MindMapController</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.attributeactors.MindMapModeAttributeController.AttributeValueRemover</srcNode>
<endNode>freemind.modes.attributes.NodeAttributeTableModel</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.attributeactors.MindMapModeAttributeController.AttributeValueRemover</srcNode>
<endNode>freemind.modes.mindmapmode.actions.xml.ActionPair</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.attributeactors.MindMapModeAttributeController.AttributeValueRemover</srcNode>
<endNode>freemind.modes.mindmapmode.attributeactors.MindMapModeAttributeController</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.attributeactors.MindMapModeAttributeController.AttributeValueRemover</srcNode>
<endNode>freemind.modes.mindmapmode.attributeactors.MindMapModeAttributeController.Visitor</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.attributeactors.MindMapModeAttributeController.AttributeValueRemover</srcNode>
<endNode>freemind.modes.mindmapmode.attributeactors.RemoveAttributeActor</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.attributeactors.MindMapModeAttributeController.AttributeValueRemover</srcNode>
<endNode>freemind.modes.mindmapmode.MindMapController</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.attributeactors.MindMapModeAttributeController.Iterator</srcNode>
<endNode>freemind.modes.mindmapmode.attributeactors.MindMapModeAttributeController.Visitor</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.attributeactors.MindMapModeAttributeController.Iterator</srcNode>
<endNode>freemind.modes.MindMapNode</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.attributeactors.MindMapModeAttributeController.Visitor</srcNode>
<endNode>freemind.modes.attributes.NodeAttributeTableModel</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.attributeactors.RegistryAttributeActor</srcNode>
<endNode>freemind.controller.filter.util.SortedMapVector</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.attributeactors.RegistryAttributeActor</srcNode>
<endNode>freemind.modes.attributes.AttributeRegistry</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.attributeactors.RegistryAttributeActor</srcNode>
<endNode>freemind.modes.attributes.AttributeRegistryElement</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.attributeactors.RegistryAttributeActor</srcNode>
<endNode>freemind.modes.attributes.AttributeRegistryTableModel</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.attributeactors.RegistryAttributeActor</srcNode>
<endNode>freemind.modes.mindmapmode.actions.xml.AbstractActorXml</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.attributeactors.RegistryAttributeActor</srcNode>
<endNode>freemind.modes.mindmapmode.actions.xml.ActionPair</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.attributeactors.RegistryAttributeActor</srcNode>
<endNode>freemind.modes.mindmapmode.attributeactors.MindMapModeAttributeController</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.attributeactors.RegistryAttributeActor</srcNode>
<endNode>freemind.modes.mindmapmode.attributeactors.UnregistryAttributeActor</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.attributeactors.RegistryAttributeActor</srcNode>
<endNode>freemind.modes.mindmapmode.MindMapController</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.attributeactors.RegistryAttributeValueActor</srcNode>
<endNode>freemind.modes.attributes.AttributeRegistry</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.attributeactors.RegistryAttributeValueActor</srcNode>
<endNode>freemind.modes.attributes.AttributeRegistryElement</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.attributeactors.RegistryAttributeValueActor</srcNode>
<endNode>freemind.modes.mindmapmode.actions.xml.AbstractActorXml</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.attributeactors.RegistryAttributeValueActor</srcNode>
<endNode>freemind.modes.mindmapmode.actions.xml.ActionPair</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.attributeactors.RegistryAttributeValueActor</srcNode>
<endNode>freemind.modes.mindmapmode.attributeactors.MindMapModeAttributeController</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.attributeactors.RegistryAttributeValueActor</srcNode>
<endNode>freemind.modes.mindmapmode.attributeactors.UnregistryAttributeValueActor</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.attributeactors.RegistryAttributeValueActor</srcNode>
<endNode>freemind.modes.mindmapmode.MindMapController</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.attributeactors.RemoveAttributeActor</srcNode>
<endNode>freemind.modes.attributes.Attribute</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.attributeactors.RemoveAttributeActor</srcNode>
<endNode>freemind.modes.attributes.NodeAttributeTableModel</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.attributeactors.RemoveAttributeActor</srcNode>
<endNode>freemind.modes.mindmapmode.actions.xml.AbstractActorXml</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.attributeactors.RemoveAttributeActor</srcNode>
<endNode>freemind.modes.mindmapmode.actions.xml.ActionPair</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.attributeactors.RemoveAttributeActor</srcNode>
<endNode>freemind.modes.mindmapmode.attributeactors.InsertAttributeActor</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.attributeactors.RemoveAttributeActor</srcNode>
<endNode>freemind.modes.mindmapmode.attributeactors.MindMapModeAttributeController</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.attributeactors.RemoveAttributeActor</srcNode>
<endNode>freemind.modes.mindmapmode.MindMapController</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.attributeactors.RemoveAttributeActor</srcNode>
<endNode>freemind.modes.NodeAdapter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.attributeactors.ReplaceAttributeValueActor</srcNode>
<endNode>freemind.modes.attributes.AttributeRegistry</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.attributeactors.ReplaceAttributeValueActor</srcNode>
<endNode>freemind.modes.attributes.AttributeRegistryElement</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.attributeactors.ReplaceAttributeValueActor</srcNode>
<endNode>freemind.modes.mindmapmode.actions.xml.AbstractActorXml</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.attributeactors.ReplaceAttributeValueActor</srcNode>
<endNode>freemind.modes.mindmapmode.actions.xml.ActionPair</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.attributeactors.ReplaceAttributeValueActor</srcNode>
<endNode>freemind.modes.mindmapmode.MindMapController</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.attributeactors.SetAttributeColumnWidthActor</srcNode>
<endNode>freemind.modes.attributes.AttributeTableLayoutModel</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.attributeactors.SetAttributeColumnWidthActor</srcNode>
<endNode>freemind.modes.attributes.NodeAttributeTableModel</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.attributeactors.SetAttributeColumnWidthActor</srcNode>
<endNode>freemind.modes.mindmapmode.actions.xml.AbstractActorXml</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.attributeactors.SetAttributeColumnWidthActor</srcNode>
<endNode>freemind.modes.mindmapmode.actions.xml.ActionPair</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.attributeactors.SetAttributeColumnWidthActor</srcNode>
<endNode>freemind.modes.mindmapmode.MindMapController</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.attributeactors.SetAttributeColumnWidthActor</srcNode>
<endNode>freemind.modes.NodeAdapter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.attributeactors.SetAttributeFontSizeActor</srcNode>
<endNode>freemind.modes.attributes.AttributeRegistry</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.attributeactors.SetAttributeFontSizeActor</srcNode>
<endNode>freemind.modes.mindmapmode.actions.xml.AbstractActorXml</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.attributeactors.SetAttributeFontSizeActor</srcNode>
<endNode>freemind.modes.mindmapmode.actions.xml.ActionPair</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.attributeactors.SetAttributeFontSizeActor</srcNode>
<endNode>freemind.modes.mindmapmode.MindMapController</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.attributeactors.SetAttributeNameActor</srcNode>
<endNode>freemind.modes.attributes.Attribute</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.attributeactors.SetAttributeNameActor</srcNode>
<endNode>freemind.modes.attributes.NodeAttributeTableModel</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.attributeactors.SetAttributeNameActor</srcNode>
<endNode>freemind.modes.mindmapmode.actions.xml.AbstractActorXml</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.attributeactors.SetAttributeNameActor</srcNode>
<endNode>freemind.modes.mindmapmode.actions.xml.ActionPair</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.attributeactors.SetAttributeNameActor</srcNode>
<endNode>freemind.modes.mindmapmode.MindMapController</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.attributeactors.SetAttributeNameActor</srcNode>
<endNode>freemind.modes.NodeAdapter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.attributeactors.SetAttributeRestrictedActor</srcNode>
<endNode>freemind.modes.attributes.AttributeRegistry</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.attributeactors.SetAttributeRestrictedActor</srcNode>
<endNode>freemind.modes.attributes.AttributeRegistryElement</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.attributeactors.SetAttributeRestrictedActor</srcNode>
<endNode>freemind.modes.mindmapmode.actions.xml.AbstractActorXml</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.attributeactors.SetAttributeRestrictedActor</srcNode>
<endNode>freemind.modes.mindmapmode.actions.xml.ActionPair</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.attributeactors.SetAttributeRestrictedActor</srcNode>
<endNode>freemind.modes.mindmapmode.MindMapController</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.attributeactors.SetAttributeValueActor</srcNode>
<endNode>freemind.modes.attributes.Attribute</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.attributeactors.SetAttributeValueActor</srcNode>
<endNode>freemind.modes.attributes.NodeAttributeTableModel</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.attributeactors.SetAttributeValueActor</srcNode>
<endNode>freemind.modes.mindmapmode.actions.xml.AbstractActorXml</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.attributeactors.SetAttributeValueActor</srcNode>
<endNode>freemind.modes.mindmapmode.actions.xml.ActionPair</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.attributeactors.SetAttributeValueActor</srcNode>
<endNode>freemind.modes.mindmapmode.MindMapController</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.attributeactors.SetAttributeValueActor</srcNode>
<endNode>freemind.modes.NodeAdapter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.attributeactors.SetAttributeVisibleActor</srcNode>
<endNode>freemind.modes.attributes.AttributeRegistry</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.attributeactors.SetAttributeVisibleActor</srcNode>
<endNode>freemind.modes.attributes.AttributeRegistryElement</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.attributeactors.SetAttributeVisibleActor</srcNode>
<endNode>freemind.modes.mindmapmode.actions.xml.AbstractActorXml</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.attributeactors.SetAttributeVisibleActor</srcNode>
<endNode>freemind.modes.mindmapmode.actions.xml.ActionPair</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.attributeactors.SetAttributeVisibleActor</srcNode>
<endNode>freemind.modes.mindmapmode.MindMapController</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.attributeactors.UnregistryAttributeActor</srcNode>
<endNode>freemind.controller.filter.util.SortedComboBoxModel</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.attributeactors.UnregistryAttributeActor</srcNode>
<endNode>freemind.controller.filter.util.SortedMapListModel</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.attributeactors.UnregistryAttributeActor</srcNode>
<endNode>freemind.modes.attributes.AttributeRegistry</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.attributeactors.UnregistryAttributeActor</srcNode>
<endNode>freemind.modes.attributes.AttributeRegistryElement</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.attributeactors.UnregistryAttributeActor</srcNode>
<endNode>freemind.modes.mindmapmode.actions.xml.AbstractActorXml</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.attributeactors.UnregistryAttributeActor</srcNode>
<endNode>freemind.modes.mindmapmode.actions.xml.ActionPair</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.attributeactors.UnregistryAttributeActor</srcNode>
<endNode>freemind.modes.mindmapmode.attributeactors.MindMapModeAttributeController</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.attributeactors.UnregistryAttributeActor</srcNode>
<endNode>freemind.modes.mindmapmode.attributeactors.RegistryAttributeActor</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.attributeactors.UnregistryAttributeActor</srcNode>
<endNode>freemind.modes.mindmapmode.attributeactors.RegistryAttributeValueActor</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.attributeactors.UnregistryAttributeActor</srcNode>
<endNode>freemind.modes.mindmapmode.MindMapController</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.attributeactors.UnregistryAttributeValueActor</srcNode>
<endNode>freemind.modes.attributes.AttributeRegistry</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.attributeactors.UnregistryAttributeValueActor</srcNode>
<endNode>freemind.modes.attributes.AttributeRegistryElement</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.attributeactors.UnregistryAttributeValueActor</srcNode>
<endNode>freemind.modes.mindmapmode.actions.xml.AbstractActorXml</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.attributeactors.UnregistryAttributeValueActor</srcNode>
<endNode>freemind.modes.mindmapmode.actions.xml.ActionPair</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.attributeactors.UnregistryAttributeValueActor</srcNode>
<endNode>freemind.modes.mindmapmode.attributeactors.MindMapModeAttributeController</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.attributeactors.UnregistryAttributeValueActor</srcNode>
<endNode>freemind.modes.mindmapmode.attributeactors.RegistryAttributeValueActor</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.attributeactors.UnregistryAttributeValueActor</srcNode>
<endNode>freemind.modes.mindmapmode.MindMapController</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.dialogs.IntegerComboProperty</srcNode>
<endNode>freemind.common.ComboProperty</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.dialogs.IntegerComboProperty</srcNode>
<endNode>freemind.main.Resources</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.dialogs.StylePatternFrame</srcNode>
<endNode>freemind.common.BooleanProperty</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.dialogs.StylePatternFrame</srcNode>
<endNode>freemind.common.ColorProperty</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.dialogs.StylePatternFrame</srcNode>
<endNode>freemind.common.ComboProperty</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.dialogs.StylePatternFrame</srcNode>
<endNode>freemind.common.FontProperty</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.dialogs.StylePatternFrame</srcNode>
<endNode>freemind.common.IconProperty</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.dialogs.StylePatternFrame</srcNode>
<endNode>freemind.common.NextLineProperty</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.dialogs.StylePatternFrame</srcNode>
<endNode>freemind.common.PropertyBean</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.dialogs.StylePatternFrame</srcNode>
<endNode>freemind.common.PropertyControl</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.dialogs.StylePatternFrame</srcNode>
<endNode>freemind.common.ScriptEditorProperty</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.dialogs.StylePatternFrame</srcNode>
<endNode>freemind.common.SeparatorProperty</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.dialogs.StylePatternFrame</srcNode>
<endNode>freemind.common.StringProperty</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.dialogs.StylePatternFrame</srcNode>
<endNode>freemind.common.TextTranslator</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.dialogs.StylePatternFrame</srcNode>
<endNode>freemind.common.ThreeCheckBoxProperty</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.dialogs.StylePatternFrame</srcNode>
<endNode>freemind.controller.Controller</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.dialogs.StylePatternFrame</srcNode>
<endNode>freemind.main.FreeMind</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.dialogs.StylePatternFrame</srcNode>
<endNode>freemind.modes.ControllerAdapter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.dialogs.StylePatternFrame</srcNode>
<endNode>freemind.modes.EdgeAdapter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.dialogs.StylePatternFrame</srcNode>
<endNode>freemind.modes.MindIcon</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.dialogs.StylePatternFrame</srcNode>
<endNode>freemind.modes.mindmapmode.actions.ApplyPatternAction</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.dialogs.StylePatternFrame</srcNode>
<endNode>freemind.modes.mindmapmode.actions.IconAction</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.dialogs.StylePatternFrame</srcNode>
<endNode>freemind.modes.mindmapmode.dialogs.IntegerComboProperty</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.dialogs.StylePatternFrame</srcNode>
<endNode>freemind.modes.mindmapmode.dialogs.StylePatternFrame.EdgeWidthBackTransformer</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.dialogs.StylePatternFrame</srcNode>
<endNode>freemind.modes.mindmapmode.dialogs.StylePatternFrame.EdgeWidthTransformer</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.dialogs.StylePatternFrame</srcNode>
<endNode>freemind.modes.mindmapmode.dialogs.StylePatternFrame.IdentityTransformer</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.dialogs.StylePatternFrame</srcNode>
<endNode>freemind.modes.mindmapmode.dialogs.StylePatternFrame.StylePatternFrameType</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.dialogs.StylePatternFrame</srcNode>
<endNode>freemind.modes.mindmapmode.dialogs.StylePatternFrame.ValueTransformator</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.dialogs.StylePatternFrame</srcNode>
<endNode>freemind.modes.mindmapmode.MindMapController</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.dialogs.StylePatternFrame</srcNode>
<endNode>freemind.modes.MindMapNode</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.dialogs.StylePatternFrame.addListeners.(Anon_1)</srcNode>
<endNode>freemind.common.ThreeCheckBoxProperty</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.dialogs.StylePatternFrame.addListeners.(Anon_1)</srcNode>
<endNode>freemind.modes.mindmapmode.dialogs.StylePatternFrame</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.dialogs.StylePatternFrame.EdgeWidthBackTransformer</srcNode>
<endNode>freemind.modes.mindmapmode.dialogs.StylePatternFrame</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.dialogs.StylePatternFrame.EdgeWidthBackTransformer</srcNode>
<endNode>freemind.modes.mindmapmode.dialogs.StylePatternFrame.ValueTransformator</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.dialogs.StylePatternFrame.EdgeWidthTransformer</srcNode>
<endNode>freemind.modes.mindmapmode.dialogs.StylePatternFrame</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.dialogs.StylePatternFrame.EdgeWidthTransformer</srcNode>
<endNode>freemind.modes.mindmapmode.dialogs.StylePatternFrame.ValueTransformator</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.dialogs.StylePatternFrame.IdentityTransformer</srcNode>
<endNode>freemind.modes.mindmapmode.dialogs.StylePatternFrame.ValueTransformator</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.EncryptedMindMapNode</srcNode>
<endNode>freemind.main.FreeMindMain</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.EncryptedMindMapNode</srcNode>
<endNode>freemind.main.HtmlTools</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.EncryptedMindMapNode</srcNode>
<endNode>freemind.main.Resources</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.EncryptedMindMapNode</srcNode>
<endNode>freemind.main.Tools.DesEncrypter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.EncryptedMindMapNode</srcNode>
<endNode>freemind.main.Tools.SingleDesEncrypter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.EncryptedMindMapNode</srcNode>
<endNode>freemind.main.XMLElement</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.EncryptedMindMapNode</srcNode>
<endNode>freemind.modes.MapRegistry</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.EncryptedMindMapNode</srcNode>
<endNode>freemind.modes.MindIcon</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.EncryptedMindMapNode</srcNode>
<endNode>freemind.modes.MindMap</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.EncryptedMindMapNode</srcNode>
<endNode>freemind.modes.MindMapLinkRegistry</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.EncryptedMindMapNode</srcNode>
<endNode>freemind.modes.mindmapmode.MindMapController</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.EncryptedMindMapNode</srcNode>
<endNode>freemind.modes.mindmapmode.MindMapMapModel</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.EncryptedMindMapNode</srcNode>
<endNode>freemind.modes.mindmapmode.MindMapMapModel.StringReaderCreator</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.EncryptedMindMapNode</srcNode>
<endNode>freemind.modes.mindmapmode.MindMapNodeModel</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.EncryptedMindMapNode</srcNode>
<endNode>freemind.modes.MindMapNode</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.EncryptedMindMapNode</srcNode>
<endNode>freemind.modes.ModeController</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.EncryptedMindMapNode</srcNode>
<endNode>freemind.modes.NodeAdapter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.hooks.MindMapHookAdapter</srcNode>
<endNode>freemind.extensions.HookAdapter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.hooks.MindMapHookAdapter</srcNode>
<endNode>freemind.extensions.ModeControllerHookAdapter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.hooks.MindMapHookAdapter</srcNode>
<endNode>freemind.main.FreeMindMain</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.hooks.MindMapHookAdapter</srcNode>
<endNode>freemind.modes.ControllerAdapter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.hooks.MindMapHookAdapter</srcNode>
<endNode>freemind.modes.mindmapmode.MindMapController</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.hooks.MindMapHookFactory</srcNode>
<endNode>freemind.common.XmlBindingTools</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.hooks.MindMapHookFactory</srcNode>
<endNode>freemind.extensions.HookDescriptorBase</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.hooks.MindMapHookFactory</srcNode>
<endNode>freemind.extensions.HookDescriptorPluginAction</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.hooks.MindMapHookFactory</srcNode>
<endNode>freemind.extensions.HookDescriptorRegistration</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.hooks.MindMapHookFactory</srcNode>
<endNode>freemind.extensions.HookFactory.RegistrationContainer</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.hooks.MindMapHookFactory</srcNode>
<endNode>freemind.extensions.HookFactoryAdapter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.hooks.MindMapHookFactory</srcNode>
<endNode>freemind.extensions.HookInstanciationMethod</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.hooks.MindMapHookFactory</srcNode>
<endNode>freemind.extensions.ImportWizard</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.hooks.MindMapHookFactory</srcNode>
<endNode>freemind.extensions.MindMapHook</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.hooks.MindMapHookFactory</srcNode>
<endNode>freemind.extensions.MindMapHook.PluginBaseClassSearcher</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.hooks.MindMapHookFactory</srcNode>
<endNode>freemind.extensions.ModeControllerHook</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.hooks.MindMapHookFactory</srcNode>
<endNode>freemind.extensions.NodeHook</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.hooks.MindMapHookFactory</srcNode>
<endNode>freemind.main.FreeMindMain</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.hooks.MindMapHookFactory</srcNode>
<endNode>freemind.main.Resources</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.hooks.MindMapHookFactory.decorateHook.(Anon_1)</srcNode>
<endNode>freemind.extensions.MindMapHook.PluginBaseClassSearcher</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.hooks.MindMapHookFactory.decorateHook.(Anon_1)</srcNode>
<endNode>freemind.modes.mindmapmode.hooks.MindMapHookFactory</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.hooks.MindMapNodeHookAdapter</srcNode>
<endNode>freemind.extensions.HookAdapter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.hooks.MindMapNodeHookAdapter</srcNode>
<endNode>freemind.extensions.NodeHookAdapter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.hooks.MindMapNodeHookAdapter</srcNode>
<endNode>freemind.modes.mindmapmode.MindMapController</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.hooks.PermanentMindMapNodeHookAdapter</srcNode>
<endNode>freemind.extensions.HookAdapter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.hooks.PermanentMindMapNodeHookAdapter</srcNode>
<endNode>freemind.extensions.NodeHookAdapter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.hooks.PermanentMindMapNodeHookAdapter</srcNode>
<endNode>freemind.extensions.PermanentNodeHook</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.hooks.PermanentMindMapNodeHookAdapter</srcNode>
<endNode>freemind.extensions.PermanentNodeHookAdapter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.hooks.PermanentMindMapNodeHookAdapter</srcNode>
<endNode>freemind.modes.mindmapmode.MindMapController</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.hooks.PermanentMindMapNodeHookAdapter</srcNode>
<endNode>freemind.modes.MindMapNode</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.listeners.MindMapMouseMotionManager</srcNode>
<endNode>freemind.controller.MapMouseMotionListener.MapMouseMotionReceiver</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.listeners.MindMapMouseMotionManager</srcNode>
<endNode>freemind.modes.ControllerAdapter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.listeners.MindMapMouseMotionManager</srcNode>
<endNode>freemind.modes.MindMapArrowLink</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.listeners.MindMapMouseMotionManager</srcNode>
<endNode>freemind.modes.mindmapmode.MindMapController</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.listeners.MindMapMouseMotionManager</srcNode>
<endNode>freemind.view.mindmapview.MapView</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.listeners.MindMapNodeDropListener</srcNode>
<endNode>freemind.controller.MindMapNodesSelection</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.listeners.MindMapNodeDropListener</srcNode>
<endNode>freemind.main.FreeMindMain</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.listeners.MindMapNodeDropListener</srcNode>
<endNode>freemind.main.Resources</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.listeners.MindMapNodeDropListener</srcNode>
<endNode>freemind.modes.ControllerAdapter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.listeners.MindMapNodeDropListener</srcNode>
<endNode>freemind.modes.mindmapmode.MindMapController</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.listeners.MindMapNodeDropListener</srcNode>
<endNode>freemind.modes.mindmapmode.MindMapMapModel</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.listeners.MindMapNodeDropListener</srcNode>
<endNode>freemind.modes.mindmapmode.MindMapNodeModel</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.listeners.MindMapNodeDropListener</srcNode>
<endNode>freemind.modes.MindMapNode</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.listeners.MindMapNodeDropListener</srcNode>
<endNode>freemind.view.mindmapview.MainView</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.listeners.MindMapNodeDropListener</srcNode>
<endNode>freemind.view.mindmapview.MapView</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.listeners.MindMapNodeDropListener</srcNode>
<endNode>freemind.view.mindmapview.NodeView</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.listeners.MindMapNodeMotionListener</srcNode>
<endNode>freemind.controller.NodeMotionListener.NodeMotionAdapter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.listeners.MindMapNodeMotionListener</srcNode>
<endNode>freemind.main.FreeMindMain</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.listeners.MindMapNodeMotionListener</srcNode>
<endNode>freemind.main.Resources</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.listeners.MindMapNodeMotionListener</srcNode>
<endNode>freemind.main.Tools</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.listeners.MindMapNodeMotionListener</srcNode>
<endNode>freemind.modes.ControllerAdapter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.listeners.MindMapNodeMotionListener</srcNode>
<endNode>freemind.modes.mindmapmode.MindMapController</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.listeners.MindMapNodeMotionListener</srcNode>
<endNode>freemind.modes.MindMapNode</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.listeners.MindMapNodeMotionListener</srcNode>
<endNode>freemind.modes.NodeAdapter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.listeners.MindMapNodeMotionListener</srcNode>
<endNode>freemind.view.mindmapview.MapView</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.listeners.MindMapNodeMotionListener</srcNode>
<endNode>freemind.view.mindmapview.NodeMotionListenerView</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.listeners.MindMapNodeMotionListener</srcNode>
<endNode>freemind.view.mindmapview.NodeView</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapArrowLinkModel</srcNode>
<endNode>freemind.main.FreeMindMain</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapArrowLinkModel</srcNode>
<endNode>freemind.main.XMLElement</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapArrowLinkModel</srcNode>
<endNode>freemind.modes.ArrowLinkAdapter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapArrowLinkModel</srcNode>
<endNode>freemind.modes.LineAdapter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapArrowLinkModel</srcNode>
<endNode>freemind.modes.LinkAdapter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapArrowLinkModel</srcNode>
<endNode>freemind.modes.MindMapNode</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapArrowLinkModel</srcNode>
<endNode>freemind.view.mindmapview.MapView</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapArrowLinkModel</srcNode>
<endNode>freemind.view.mindmapview.NodeView</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapCloudModel</srcNode>
<endNode>freemind.main.FreeMindMain</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapCloudModel</srcNode>
<endNode>freemind.modes.CloudAdapter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapCloudModel</srcNode>
<endNode>freemind.modes.MindMapNode</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapController</srcNode>
<endNode>freemind.common.XmlBindingTools</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapController</srcNode>
<endNode>freemind.controller.Controller</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapController</srcNode>
<endNode>freemind.controller.MapModuleManager</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapController</srcNode>
<endNode>freemind.controller.MapMouseMotionListener</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapController</srcNode>
<endNode>freemind.controller.MenuBar</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapController</srcNode>
<endNode>freemind.controller.MindMapNodesSelection</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapController</srcNode>
<endNode>freemind.controller.NodeDropListener</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapController</srcNode>
<endNode>freemind.controller.NodeKeyListener</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapController</srcNode>
<endNode>freemind.controller.NodeMotionListener</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapController</srcNode>
<endNode>freemind.controller.NodeMouseMotionListener</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapController</srcNode>
<endNode>freemind.controller.StructuredMenuHolder</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapController</srcNode>
<endNode>freemind.extensions.HookFactory</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapController</srcNode>
<endNode>freemind.extensions.HookFactory.RegistrationContainer</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapController</srcNode>
<endNode>freemind.extensions.HookInstanciationMethod</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapController</srcNode>
<endNode>freemind.extensions.HookRegistration</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapController</srcNode>
<endNode>freemind.extensions.MindMapHook</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapController</srcNode>
<endNode>freemind.extensions.ModeControllerHook</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapController</srcNode>
<endNode>freemind.extensions.NodeHook</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapController</srcNode>
<endNode>freemind.extensions.PermanentNodeHook</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapController</srcNode>
<endNode>freemind.extensions.UndoEventReceiver</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapController</srcNode>
<endNode>freemind.main.ExampleFileFilter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapController</srcNode>
<endNode>freemind.main.FixedHTMLWriter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapController</srcNode>
<endNode>freemind.main.FreeMindCommon</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapController</srcNode>
<endNode>freemind.main.FreeMindMain</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapController</srcNode>
<endNode>freemind.main.HtmlTools</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapController</srcNode>
<endNode>freemind.main.Resources</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapController</srcNode>
<endNode>freemind.main.Tools</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapController</srcNode>
<endNode>freemind.main.XMLElement</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapController</srcNode>
<endNode>freemind.modes.ArrowLinkAdapter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapController</srcNode>
<endNode>freemind.modes.attributes.Attribute</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapController</srcNode>
<endNode>freemind.modes.attributes.AttributeController</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapController</srcNode>
<endNode>freemind.modes.attributes.NodeAttributeTableModel</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapController</srcNode>
<endNode>freemind.modes.common.actions.FindAction</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapController</srcNode>
<endNode>freemind.modes.common.actions.FindAction.FindNextAction</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapController</srcNode>
<endNode>freemind.modes.common.actions.NewMapAction</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapController</srcNode>
<endNode>freemind.modes.common.CommonNodeKeyListener</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapController</srcNode>
<endNode>freemind.modes.common.GotoLinkNodeAction</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapController</srcNode>
<endNode>freemind.modes.common.listeners.CommonNodeMouseMotionListener</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapController</srcNode>
<endNode>freemind.modes.ControllerAdapter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapController</srcNode>
<endNode>freemind.modes.ControllerAdapter.EditAttributesAction</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapController</srcNode>
<endNode>freemind.modes.ControllerAdapter.OpenAction</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapController</srcNode>
<endNode>freemind.modes.ControllerAdapter.SaveAction</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapController</srcNode>
<endNode>freemind.modes.ControllerAdapter.SaveAsAction</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapController</srcNode>
<endNode>freemind.modes.EdgeAdapter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapController</srcNode>
<endNode>freemind.modes.FreeMindFileDialog</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapController</srcNode>
<endNode>freemind.modes.LineAdapter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapController</srcNode>
<endNode>freemind.modes.LinkAdapter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapController</srcNode>
<endNode>freemind.modes.MapAdapter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapController</srcNode>
<endNode>freemind.modes.MindIcon</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapController</srcNode>
<endNode>freemind.modes.MindMap</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapController</srcNode>
<endNode>freemind.modes.MindMap.MapSourceChangedObserver</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapController</srcNode>
<endNode>freemind.modes.MindMapArrowLink</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapController</srcNode>
<endNode>freemind.modes.MindMapEdge</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapController</srcNode>
<endNode>freemind.modes.MindMapLink</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapController</srcNode>
<endNode>freemind.modes.MindMapLinkRegistry</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapController</srcNode>
<endNode>freemind.modes.mindmapmode.actions.AddArrowLinkAction</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapController</srcNode>
<endNode>freemind.modes.mindmapmode.actions.AddLocalLinkAction</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapController</srcNode>
<endNode>freemind.modes.mindmapmode.actions.ApplyPatternAction</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapController</srcNode>
<endNode>freemind.modes.mindmapmode.actions.BoldAction</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapController</srcNode>
<endNode>freemind.modes.mindmapmode.actions.ChangeArrowLinkEndPoints</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapController</srcNode>
<endNode>freemind.modes.mindmapmode.actions.ChangeArrowsInArrowLinkAction</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapController</srcNode>
<endNode>freemind.modes.mindmapmode.actions.CloudAction</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapController</srcNode>
<endNode>freemind.modes.mindmapmode.actions.CloudColorAction</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapController</srcNode>
<endNode>freemind.modes.mindmapmode.actions.ColorArrowLinkAction</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapController</srcNode>
<endNode>freemind.modes.mindmapmode.actions.CompoundActionHandler</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapController</srcNode>
<endNode>freemind.modes.mindmapmode.actions.CopyAction</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapController</srcNode>
<endNode>freemind.modes.mindmapmode.actions.CopySingleAction</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapController</srcNode>
<endNode>freemind.modes.mindmapmode.actions.CutAction</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapController</srcNode>
<endNode>freemind.modes.mindmapmode.actions.DeleteChildAction</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapController</srcNode>
<endNode>freemind.modes.mindmapmode.actions.EdgeColorAction</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapController</srcNode>
<endNode>freemind.modes.mindmapmode.actions.EdgeStyleAction</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapController</srcNode>
<endNode>freemind.modes.mindmapmode.actions.EdgeWidthAction</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapController</srcNode>
<endNode>freemind.modes.mindmapmode.actions.EditAction</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapController</srcNode>
<endNode>freemind.modes.mindmapmode.actions.ExportBranchAction</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapController</srcNode>
<endNode>freemind.modes.mindmapmode.actions.FontFamilyAction</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapController</srcNode>
<endNode>freemind.modes.mindmapmode.actions.FontSizeAction</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapController</srcNode>
<endNode>freemind.modes.mindmapmode.actions.HookAction</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapController</srcNode>
<endNode>freemind.modes.mindmapmode.actions.IconAction</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapController</srcNode>
<endNode>freemind.modes.mindmapmode.actions.ImportExplorerFavoritesAction</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapController</srcNode>
<endNode>freemind.modes.mindmapmode.actions.ImportFolderStructureAction</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapController</srcNode>
<endNode>freemind.modes.mindmapmode.actions.ItalicAction</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapController</srcNode>
<endNode>freemind.modes.mindmapmode.actions.JoinNodesAction</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapController</srcNode>
<endNode>freemind.modes.mindmapmode.actions.MindMapActions</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapController</srcNode>
<endNode>freemind.modes.mindmapmode.actions.MindMapActions.MouseWheelEventHandler</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapController</srcNode>
<endNode>freemind.modes.mindmapmode.actions.MindMapControllerHookAction</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapController</srcNode>
<endNode>freemind.modes.mindmapmode.actions.ModeControllerActionHandler</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapController</srcNode>
<endNode>freemind.modes.mindmapmode.actions.MoveNodeAction</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapController</srcNode>
<endNode>freemind.modes.mindmapmode.actions.NewChildAction</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapController</srcNode>
<endNode>freemind.modes.mindmapmode.actions.NewPreviousSiblingAction</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapController</srcNode>
<endNode>freemind.modes.mindmapmode.actions.NewSiblingAction</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapController</srcNode>
<endNode>freemind.modes.mindmapmode.actions.NodeBackgroundColorAction</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapController</srcNode>
<endNode>freemind.modes.mindmapmode.actions.NodeBackgroundColorAction.RemoveNodeBackgroundColorAction</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapController</srcNode>
<endNode>freemind.modes.mindmapmode.actions.NodeColorAction</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapController</srcNode>
<endNode>freemind.modes.mindmapmode.actions.NodeColorBlendAction</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapController</srcNode>
<endNode>freemind.modes.mindmapmode.actions.NodeGeneralAction</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapController</srcNode>
<endNode>freemind.modes.mindmapmode.actions.NodeHookAction</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapController</srcNode>
<endNode>freemind.modes.mindmapmode.actions.NodeStyleAction</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapController</srcNode>
<endNode>freemind.modes.mindmapmode.actions.NodeUpAction</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapController</srcNode>
<endNode>freemind.modes.mindmapmode.actions.PasteAction</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapController</srcNode>
<endNode>freemind.modes.mindmapmode.actions.PasteAsPlainTextAction</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapController</srcNode>
<endNode>freemind.modes.mindmapmode.actions.RedoAction</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapController</srcNode>
<endNode>freemind.modes.mindmapmode.actions.RemoveAllIconsAction</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapController</srcNode>
<endNode>freemind.modes.mindmapmode.actions.RemoveArrowLinkAction</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapController</srcNode>
<endNode>freemind.modes.mindmapmode.actions.RemoveIconAction</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapController</srcNode>
<endNode>freemind.modes.mindmapmode.actions.RevertAction</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapController</srcNode>
<endNode>freemind.modes.mindmapmode.actions.SelectAllAction</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapController</srcNode>
<endNode>freemind.modes.mindmapmode.actions.SelectBranchAction</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapController</srcNode>
<endNode>freemind.modes.mindmapmode.actions.SetLinkByTextFieldAction</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapController</srcNode>
<endNode>freemind.modes.mindmapmode.actions.ToggleChildrenFoldedAction</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapController</srcNode>
<endNode>freemind.modes.mindmapmode.actions.ToggleFoldedAction</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapController</srcNode>
<endNode>freemind.modes.mindmapmode.actions.UnderlinedAction</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapController</srcNode>
<endNode>freemind.modes.mindmapmode.actions.UndoAction</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapController</srcNode>
<endNode>freemind.modes.mindmapmode.actions.UsePlainTextAction</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapController</srcNode>
<endNode>freemind.modes.mindmapmode.actions.UseRichFormattingAction</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapController</srcNode>
<endNode>freemind.modes.mindmapmode.actions.xml.ActionFactory</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapController</srcNode>
<endNode>freemind.modes.mindmapmode.actions.xml.ActionPair</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapController</srcNode>
<endNode>freemind.modes.mindmapmode.actions.xml.UndoActionHandler</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapController</srcNode>
<endNode>freemind.modes.mindmapmode.attributeactors.AssignAttributeDialog</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapController</srcNode>
<endNode>freemind.modes.mindmapmode.attributeactors.MindMapModeAttributeController</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapController</srcNode>
<endNode>freemind.modes.mindmapmode.hooks.MindMapHookFactory</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapController</srcNode>
<endNode>freemind.modes.mindmapmode.listeners.MindMapMouseMotionManager</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapController</srcNode>
<endNode>freemind.modes.mindmapmode.listeners.MindMapNodeDropListener</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapController</srcNode>
<endNode>freemind.modes.mindmapmode.listeners.MindMapNodeMotionListener</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapController</srcNode>
<endNode>freemind.modes.mindmapmode.MindMapArrowLinkModel</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapController</srcNode>
<endNode>freemind.modes.mindmapmode.MindMapController.AssignAttributesAction</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapController</srcNode>
<endNode>freemind.modes.mindmapmode.MindMapController.DefaultMindMapNodeCreator</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapController</srcNode>
<endNode>freemind.modes.mindmapmode.MindMapController.EditLongAction</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapController</srcNode>
<endNode>freemind.modes.mindmapmode.MindMapController.ExportBranchToHTMLAction</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapController</srcNode>
<endNode>freemind.modes.mindmapmode.MindMapController.ExportToHTMLAction</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapController</srcNode>
<endNode>freemind.modes.mindmapmode.MindMapController.FollowLinkAction</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapController</srcNode>
<endNode>freemind.modes.mindmapmode.MindMapController.ImportBranchAction</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapController</srcNode>
<endNode>freemind.modes.mindmapmode.MindMapController.ImportLinkedBranchAction</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapController</srcNode>
<endNode>freemind.modes.mindmapmode.MindMapController.ImportLinkedBranchWithoutRootAction</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapController</srcNode>
<endNode>freemind.modes.mindmapmode.MindMapController.MapSourceChangeDialog</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapController</srcNode>
<endNode>freemind.modes.mindmapmode.MindMapController.MindMapControllerPlugin</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapController</srcNode>
<endNode>freemind.modes.mindmapmode.MindMapController.MindMapFilter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapController</srcNode>
<endNode>freemind.modes.mindmapmode.MindMapController.NewNodeCreator</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapController</srcNode>
<endNode>freemind.modes.mindmapmode.MindMapController.OpenLinkDirectoryAction</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapController</srcNode>
<endNode>freemind.modes.mindmapmode.MindMapController.SetImageByFileChooserAction</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapController</srcNode>
<endNode>freemind.modes.mindmapmode.MindMapController.SetLinkByFileChooserAction</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapController</srcNode>
<endNode>freemind.modes.mindmapmode.MindMapHTMLWriter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapController</srcNode>
<endNode>freemind.modes.mindmapmode.MindMapMapModel</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapController</srcNode>
<endNode>freemind.modes.mindmapmode.MindMapNodeModel</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapController</srcNode>
<endNode>freemind.modes.mindmapmode.MindMapPopupMenu</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapController</srcNode>
<endNode>freemind.modes.mindmapmode.MindMapToolBar</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapController</srcNode>
<endNode>freemind.modes.mindmapmode.MindMapXMLElement</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapController</srcNode>
<endNode>freemind.modes.MindMapNode</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapController</srcNode>
<endNode>freemind.modes.Mode</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapController</srcNode>
<endNode>freemind.modes.ModeController</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapController</srcNode>
<endNode>freemind.modes.NodeAdapter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapController</srcNode>
<endNode>freemind.modes.NodeDownAction</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapController</srcNode>
<endNode>freemind.modes.StylePatternFactory</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapController</srcNode>
<endNode>freemind.view.MapModule</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapController</srcNode>
<endNode>freemind.view.mindmapview.attributeview.AttributePopupMenu</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapController</srcNode>
<endNode>freemind.view.mindmapview.MainView</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapController</srcNode>
<endNode>freemind.view.mindmapview.MapView</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapController</srcNode>
<endNode>freemind.view.mindmapview.NodeView</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapController.(Anon_1)</srcNode>
<endNode>freemind.modes.mindmapmode.actions.SingleNodeOperation</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapController.(Anon_1)</srcNode>
<endNode>freemind.modes.mindmapmode.MindMapController</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapController.(Anon_1)</srcNode>
<endNode>freemind.modes.mindmapmode.MindMapMapModel</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapController.(Anon_1)</srcNode>
<endNode>freemind.modes.mindmapmode.MindMapNodeModel</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapController.(Anon_2)</srcNode>
<endNode>freemind.modes.mindmapmode.actions.SingleNodeOperation</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapController.(Anon_2)</srcNode>
<endNode>freemind.modes.mindmapmode.MindMapController</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapController.(Anon_2)</srcNode>
<endNode>freemind.modes.mindmapmode.MindMapMapModel</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapController.(Anon_2)</srcNode>
<endNode>freemind.modes.mindmapmode.MindMapNodeModel</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapController.AssignAttributesAction</srcNode>
<endNode>freemind.modes.ControllerAdapter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapController.AssignAttributesAction</srcNode>
<endNode>freemind.modes.mindmapmode.attributeactors.AssignAttributeDialog</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapController.AssignAttributesAction</srcNode>
<endNode>freemind.modes.mindmapmode.MindMapController</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapController.DefaultMindMapNodeCreator</srcNode>
<endNode>freemind.modes.ControllerAdapter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapController.DefaultMindMapNodeCreator</srcNode>
<endNode>freemind.modes.MindMap</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapController.DefaultMindMapNodeCreator</srcNode>
<endNode>freemind.modes.mindmapmode.MindMapController.NewNodeCreator</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapController.DefaultMindMapNodeCreator</srcNode>
<endNode>freemind.modes.mindmapmode.MindMapNodeModel</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapController.DefaultMindMapNodeCreator</srcNode>
<endNode>freemind.modes.MindMapNode</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapController.EditLongAction</srcNode>
<endNode>freemind.modes.ControllerAdapter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapController.EditLongAction</srcNode>
<endNode>freemind.modes.mindmapmode.MindMapController</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapController.ExportBranchToHTMLAction</srcNode>
<endNode>freemind.main.FreeMindCommon</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapController.ExportBranchToHTMLAction</srcNode>
<endNode>freemind.main.FreeMindMain</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapController.ExportBranchToHTMLAction</srcNode>
<endNode>freemind.modes.ControllerAdapter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapController.ExportBranchToHTMLAction</srcNode>
<endNode>freemind.modes.MindMap</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapController.ExportBranchToHTMLAction</srcNode>
<endNode>freemind.modes.mindmapmode.MindMapController</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapController.ExportBranchToHTMLAction</srcNode>
<endNode>freemind.modes.mindmapmode.MindMapNodeModel</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapController.ExportToHTMLAction</srcNode>
<endNode>freemind.main.FreeMindMain</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapController.ExportToHTMLAction</srcNode>
<endNode>freemind.main.Resources</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapController.ExportToHTMLAction</srcNode>
<endNode>freemind.modes.ControllerAdapter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapController.ExportToHTMLAction</srcNode>
<endNode>freemind.modes.MapAdapter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapController.ExportToHTMLAction</srcNode>
<endNode>freemind.modes.MindMap</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapController.ExportToHTMLAction</srcNode>
<endNode>freemind.modes.mindmapmode.MindMapController</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapController.ExportToHTMLAction</srcNode>
<endNode>freemind.modes.mindmapmode.MindMapNodeModel</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapController.FollowLinkAction</srcNode>
<endNode>freemind.modes.ControllerAdapter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapController.FollowLinkAction</srcNode>
<endNode>freemind.modes.mindmapmode.MindMapController</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapController.FollowLinkAction</srcNode>
<endNode>freemind.modes.mindmapmode.MindMapController.LinkActionBase</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapController.FollowLinkAction</srcNode>
<endNode>freemind.modes.MindMapNode</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapController.ImportBranchAction</srcNode>
<endNode>freemind.main.FreeMindMain</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapController.ImportBranchAction</srcNode>
<endNode>freemind.modes.ControllerAdapter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapController.ImportBranchAction</srcNode>
<endNode>freemind.modes.FreeMindFileDialog</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapController.ImportBranchAction</srcNode>
<endNode>freemind.modes.mindmapmode.MindMapController</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapController.ImportBranchAction</srcNode>
<endNode>freemind.modes.mindmapmode.MindMapMapModel</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapController.ImportBranchAction</srcNode>
<endNode>freemind.modes.mindmapmode.MindMapNodeModel</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapController.ImportLinkedBranchAction</srcNode>
<endNode>freemind.main.Resources</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapController.ImportLinkedBranchAction</srcNode>
<endNode>freemind.main.Tools</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapController.ImportLinkedBranchAction</srcNode>
<endNode>freemind.modes.ControllerAdapter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapController.ImportLinkedBranchAction</srcNode>
<endNode>freemind.modes.MindMap</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapController.ImportLinkedBranchAction</srcNode>
<endNode>freemind.modes.mindmapmode.MindMapController</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapController.ImportLinkedBranchAction</srcNode>
<endNode>freemind.modes.mindmapmode.MindMapMapModel</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapController.ImportLinkedBranchAction</srcNode>
<endNode>freemind.modes.mindmapmode.MindMapNodeModel</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapController.ImportLinkedBranchAction</srcNode>
<endNode>freemind.modes.NodeAdapter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapController.ImportLinkedBranchWithoutRootAction</srcNode>
<endNode>freemind.main.Tools</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapController.ImportLinkedBranchWithoutRootAction</srcNode>
<endNode>freemind.modes.ControllerAdapter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapController.ImportLinkedBranchWithoutRootAction</srcNode>
<endNode>freemind.modes.MindMap</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapController.ImportLinkedBranchWithoutRootAction</srcNode>
<endNode>freemind.modes.mindmapmode.MindMapController</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapController.ImportLinkedBranchWithoutRootAction</srcNode>
<endNode>freemind.modes.mindmapmode.MindMapMapModel</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapController.ImportLinkedBranchWithoutRootAction</srcNode>
<endNode>freemind.modes.mindmapmode.MindMapNodeModel</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapController.ImportLinkedBranchWithoutRootAction</srcNode>
<endNode>freemind.modes.NodeAdapter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapController.LinkActionBase</srcNode>
<endNode>freemind.controller.MenuItemEnabledListener</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapController.LinkActionBase</srcNode>
<endNode>freemind.modes.ControllerAdapter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapController.LinkActionBase</srcNode>
<endNode>freemind.modes.MindMapNode</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapController.MapSourceChangeDialog</srcNode>
<endNode>freemind.common.OptionalDontShowMeAgainDialog</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapController.MapSourceChangeDialog</srcNode>
<endNode>freemind.common.OptionalDontShowMeAgainDialog.StandardPropertyHandler</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapController.MapSourceChangeDialog</srcNode>
<endNode>freemind.main.FreeMind</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapController.MapSourceChangeDialog</srcNode>
<endNode>freemind.main.FreeMindMain</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapController.MapSourceChangeDialog</srcNode>
<endNode>freemind.main.Tools</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapController.MapSourceChangeDialog</srcNode>
<endNode>freemind.modes.ControllerAdapter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapController.MapSourceChangeDialog</srcNode>
<endNode>freemind.modes.MindMap</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapController.MapSourceChangeDialog</srcNode>
<endNode>freemind.modes.mindmapmode.actions.RevertAction</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapController.MapSourceChangeDialog</srcNode>
<endNode>freemind.modes.mindmapmode.MindMapController</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapController.MindMapFilter</srcNode>
<endNode>freemind.main.FreeMindCommon</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapController.MindMapFilter</srcNode>
<endNode>freemind.main.Tools</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapController.MindMapFilter</srcNode>
<endNode>freemind.modes.ControllerAdapter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapController.NewNodeCreator</srcNode>
<endNode>freemind.modes.MindMap</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapController.NewNodeCreator</srcNode>
<endNode>freemind.modes.MindMapNode</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapController.OpenLinkDirectoryAction</srcNode>
<endNode>freemind.modes.ControllerAdapter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapController.OpenLinkDirectoryAction</srcNode>
<endNode>freemind.modes.mindmapmode.MindMapController</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapController.OpenLinkDirectoryAction</srcNode>
<endNode>freemind.modes.mindmapmode.MindMapController.LinkActionBase</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapController.OpenLinkDirectoryAction</srcNode>
<endNode>freemind.modes.MindMapNode</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapController.SetImageByFileChooserAction</srcNode>
<endNode>freemind.controller.Controller</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapController.SetImageByFileChooserAction</srcNode>
<endNode>freemind.modes.ControllerAdapter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapController.SetImageByFileChooserAction</srcNode>
<endNode>freemind.modes.mindmapmode.MindMapController</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapController.SetLinkByFileChooserAction</srcNode>
<endNode>freemind.modes.ControllerAdapter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapController.SetLinkByFileChooserAction</srcNode>
<endNode>freemind.modes.mindmapmode.MindMapController</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapController.startupController.(Anon_3)</srcNode>
<endNode>freemind.modes.common.CommonNodeKeyListener.EditHandler</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapController.startupController.(Anon_3)</srcNode>
<endNode>freemind.modes.mindmapmode.MindMapController</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapEdgeModel</srcNode>
<endNode>freemind.main.FreeMindMain</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapEdgeModel</srcNode>
<endNode>freemind.modes.EdgeAdapter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapEdgeModel</srcNode>
<endNode>freemind.modes.MindMapNode</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapHTMLWriter</srcNode>
<endNode>freemind.extensions.PermanentNodeHook</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapHTMLWriter</srcNode>
<endNode>freemind.main.HtmlTools</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapHTMLWriter</srcNode>
<endNode>freemind.main.Resources</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapHTMLWriter</srcNode>
<endNode>freemind.main.Tools</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapHTMLWriter</srcNode>
<endNode>freemind.modes.MindIcon</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapHTMLWriter</srcNode>
<endNode>freemind.modes.mindmapmode.MindMapNodeModel</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapHTMLWriter</srcNode>
<endNode>freemind.modes.NodeAdapter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapMapModel</srcNode>
<endNode>freemind.common.OptionalDontShowMeAgainDialog</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapMapModel</srcNode>
<endNode>freemind.common.OptionalDontShowMeAgainDialog.StandardPropertyHandler</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapMapModel</srcNode>
<endNode>freemind.controller.Controller</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapMapModel</srcNode>
<endNode>freemind.main.FreeMind</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapMapModel</srcNode>
<endNode>freemind.main.FreeMindMain</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapMapModel</srcNode>
<endNode>freemind.main.HtmlTools</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapMapModel</srcNode>
<endNode>freemind.main.Resources</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapMapModel</srcNode>
<endNode>freemind.main.Tools</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapMapModel</srcNode>
<endNode>freemind.main.XMLParseException</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapMapModel</srcNode>
<endNode>freemind.modes.MapAdapter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapMapModel</srcNode>
<endNode>freemind.modes.MapRegistry</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapMapModel</srcNode>
<endNode>freemind.modes.MindMapLinkRegistry</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapMapModel</srcNode>
<endNode>freemind.modes.mindmapmode.MindMapController</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapMapModel</srcNode>
<endNode>freemind.modes.mindmapmode.MindMapMapModel.DoAutomaticSave</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapMapModel</srcNode>
<endNode>freemind.modes.mindmapmode.MindMapMapModel.DummyLockManager</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapMapModel</srcNode>
<endNode>freemind.modes.mindmapmode.MindMapMapModel.FileReaderCreator</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapMapModel</srcNode>
<endNode>freemind.modes.mindmapmode.MindMapMapModel.LockManager</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapMapModel</srcNode>
<endNode>freemind.modes.mindmapmode.MindMapMapModel.ReaderCreator</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapMapModel</srcNode>
<endNode>freemind.modes.mindmapmode.MindMapNodeModel</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapMapModel</srcNode>
<endNode>freemind.modes.mindmapmode.MindMapXMLElement</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapMapModel</srcNode>
<endNode>freemind.modes.MindMapNode</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapMapModel</srcNode>
<endNode>freemind.modes.ModeController</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapMapModel</srcNode>
<endNode>freemind.modes.NodeAdapter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapMapModel.DoAutomaticSave</srcNode>
<endNode>freemind.main.Resources</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapMapModel.DoAutomaticSave</srcNode>
<endNode>freemind.modes.MapAdapter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapMapModel.DoAutomaticSave</srcNode>
<endNode>freemind.modes.mindmapmode.MindMapMapModel</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapMapModel.DoAutomaticSave.run.(Anon_2)</srcNode>
<endNode>freemind.main.FreeMindCommon</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapMapModel.DoAutomaticSave.run.(Anon_2)</srcNode>
<endNode>freemind.main.FreeMindMain</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapMapModel.DoAutomaticSave.run.(Anon_2)</srcNode>
<endNode>freemind.main.Resources</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapMapModel.DoAutomaticSave.run.(Anon_2)</srcNode>
<endNode>freemind.modes.MapAdapter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapMapModel.DoAutomaticSave.run.(Anon_2)</srcNode>
<endNode>freemind.modes.mindmapmode.MindMapMapModel</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapMapModel.DoAutomaticSave.run.(Anon_2)</srcNode>
<endNode>freemind.modes.mindmapmode.MindMapMapModel.DoAutomaticSave</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapMapModel.DummyLockManager</srcNode>
<endNode>freemind.modes.mindmapmode.MindMapMapModel.LockManager</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapMapModel.FileReaderCreator</srcNode>
<endNode>freemind.common.UnicodeReader</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapMapModel.FileReaderCreator</srcNode>
<endNode>freemind.modes.mindmapmode.MindMapMapModel.ReaderCreator</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapMapModel.LockManager</srcNode>
<endNode>freemind.main.Resources</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapMapModel.LockManager</srcNode>
<endNode>freemind.main.Tools</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapMapModel.MindMapMapModel.(Anon_1)</srcNode>
<endNode>freemind.modes.mindmapmode.MindMapMapModel</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapMapModel.StringReaderCreator</srcNode>
<endNode>freemind.modes.mindmapmode.MindMapMapModel.ReaderCreator</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapMode</srcNode>
<endNode>freemind.controller.Controller</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapMode</srcNode>
<endNode>freemind.controller.MapModuleManager</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapMode</srcNode>
<endNode>freemind.main.FreeMindMain</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapMode</srcNode>
<endNode>freemind.main.XMLParseException</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapMode</srcNode>
<endNode>freemind.modes.mindmapmode.MindMapController</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapMode</srcNode>
<endNode>freemind.modes.Mode</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapMode</srcNode>
<endNode>freemind.modes.ModeController</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapNodeModel</srcNode>
<endNode>freemind.main.FreeMindMain</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapNodeModel</srcNode>
<endNode>freemind.main.HtmlTools</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapNodeModel</srcNode>
<endNode>freemind.modes.MindMap</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapNodeModel</srcNode>
<endNode>freemind.modes.mindmapmode.MindMapEdgeModel</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapNodeModel</srcNode>
<endNode>freemind.modes.NodeAdapter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapPopupMenu</srcNode>
<endNode>freemind.controller.FreeMindPopupMenu</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapPopupMenu</srcNode>
<endNode>freemind.controller.StructuredMenuHolder</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapPopupMenu</srcNode>
<endNode>freemind.main.FreeMindMain</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapPopupMenu</srcNode>
<endNode>freemind.modes.ControllerAdapter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapPopupMenu</srcNode>
<endNode>freemind.modes.mindmapmode.MindMapController</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapToolBar</srcNode>
<endNode>freemind.controller.Controller</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapToolBar</srcNode>
<endNode>freemind.controller.FreeMindToolBar</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapToolBar</srcNode>
<endNode>freemind.controller.StructuredMenuHolder</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapToolBar</srcNode>
<endNode>freemind.controller.ZoomListener</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapToolBar</srcNode>
<endNode>freemind.main.Resources</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapToolBar</srcNode>
<endNode>freemind.main.Tools</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapToolBar</srcNode>
<endNode>freemind.modes.ControllerAdapter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapToolBar</srcNode>
<endNode>freemind.modes.mindmapmode.JAutoScrollBarPane</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapToolBar</srcNode>
<endNode>freemind.modes.mindmapmode.MindMapController</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapToolBar</srcNode>
<endNode>freemind.modes.mindmapmode.MindMapToolBar.FreeMindComboBox</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapToolBar.MindMapToolBar.(Anon_1)</srcNode>
<endNode>freemind.modes.mindmapmode.actions.FontFamilyAction</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapToolBar.MindMapToolBar.(Anon_1)</srcNode>
<endNode>freemind.modes.mindmapmode.MindMapController</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapToolBar.MindMapToolBar.(Anon_1)</srcNode>
<endNode>freemind.modes.mindmapmode.MindMapToolBar</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapToolBar.MindMapToolBar.(Anon_2)</srcNode>
<endNode>freemind.modes.mindmapmode.actions.FontSizeAction</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapToolBar.MindMapToolBar.(Anon_2)</srcNode>
<endNode>freemind.modes.mindmapmode.MindMapController</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapToolBar.MindMapToolBar.(Anon_2)</srcNode>
<endNode>freemind.modes.mindmapmode.MindMapToolBar</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapToolBar.MindMapToolBar.(Anon_3)</srcNode>
<endNode>freemind.modes.mindmapmode.MindMapToolBar</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapXMLElement</srcNode>
<endNode>freemind.main.FreeMindMain</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapXMLElement</srcNode>
<endNode>freemind.main.Resources</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapXMLElement</srcNode>
<endNode>freemind.main.XMLElement</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapXMLElement</srcNode>
<endNode>freemind.modes.ArrowLinkAdapter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapXMLElement</srcNode>
<endNode>freemind.modes.ArrowLinkTarget</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapXMLElement</srcNode>
<endNode>freemind.modes.CloudAdapter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapXMLElement</srcNode>
<endNode>freemind.modes.EdgeAdapter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapXMLElement</srcNode>
<endNode>freemind.modes.mindmapmode.MindMapArrowLinkModel</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapXMLElement</srcNode>
<endNode>freemind.modes.mindmapmode.MindMapCloudModel</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapXMLElement</srcNode>
<endNode>freemind.modes.mindmapmode.MindMapEdgeModel</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapXMLElement</srcNode>
<endNode>freemind.modes.mindmapmode.MindMapNodeModel</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapXMLElement</srcNode>
<endNode>freemind.modes.ModeController</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapXMLElement</srcNode>
<endNode>freemind.modes.NodeAdapter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.mindmapmode.MindMapXMLElement</srcNode>
<endNode>freemind.modes.XMLElementAdapter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.MindMapNode</srcNode>
<endNode>freemind.controller.filter.FilterInfo</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.MindMapNode</srcNode>
<endNode>freemind.extensions.NodeHook</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.MindMapNode</srcNode>
<endNode>freemind.extensions.PermanentNodeHook</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.MindMapNode</srcNode>
<endNode>freemind.main.XMLElement</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.MindMapNode</srcNode>
<endNode>freemind.modes.attributes.Attribute</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.MindMapNode</srcNode>
<endNode>freemind.modes.attributes.NodeAttributeTableModel</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.MindMapNode</srcNode>
<endNode>freemind.modes.HistoryInformation</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.MindMapNode</srcNode>
<endNode>freemind.modes.MindIcon</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.MindMapNode</srcNode>
<endNode>freemind.modes.MindMap</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.MindMapNode</srcNode>
<endNode>freemind.modes.MindMapCloud</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.MindMapNode</srcNode>
<endNode>freemind.modes.MindMapEdge</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.MindMapNode</srcNode>
<endNode>freemind.modes.MindMapLinkRegistry</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.MindMapNode</srcNode>
<endNode>freemind.modes.ModeController</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.MindMapNode</srcNode>
<endNode>freemind.view.mindmapview.NodeView</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.MindMapNode</srcNode>
<endNode>freemind.view.mindmapview.NodeViewVisitor</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.Mode</srcNode>
<endNode>freemind.controller.Controller</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.Mode</srcNode>
<endNode>freemind.main.XMLParseException</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.Mode</srcNode>
<endNode>freemind.modes.ModeController</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.ModeController</srcNode>
<endNode>freemind.common.TextTranslator</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.ModeController</srcNode>
<endNode>freemind.controller.Controller</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.ModeController</srcNode>
<endNode>freemind.controller.MapModuleManager</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.ModeController</srcNode>
<endNode>freemind.controller.StructuredMenuHolder</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.ModeController</srcNode>
<endNode>freemind.extensions.HookFactory</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.ModeController</srcNode>
<endNode>freemind.main.FreeMindMain</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.ModeController</srcNode>
<endNode>freemind.main.XMLParseException</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.ModeController</srcNode>
<endNode>freemind.modes.attributes.AttributeController</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.ModeController</srcNode>
<endNode>freemind.modes.FreeMindFileDialog</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.ModeController</srcNode>
<endNode>freemind.modes.MapAdapter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.ModeController</srcNode>
<endNode>freemind.modes.MindMap</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.ModeController</srcNode>
<endNode>freemind.modes.MindMapNode</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.ModeController</srcNode>
<endNode>freemind.modes.Mode</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.ModeController</srcNode>
<endNode>freemind.modes.ModeController.NodeLifetimeListener</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.ModeController</srcNode>
<endNode>freemind.modes.ModeController.NodeSelectionListener</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.ModeController</srcNode>
<endNode>freemind.modes.NodeAdapter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.ModeController</srcNode>
<endNode>freemind.view.MapModule</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.ModeController</srcNode>
<endNode>freemind.view.mindmapview.MapView</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.ModeController</srcNode>
<endNode>freemind.view.mindmapview.NodeView</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.ModeController.NodeLifetimeListener</srcNode>
<endNode>freemind.modes.MindMapNode</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.ModeController.NodeSelectionListener</srcNode>
<endNode>freemind.modes.MindMapNode</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.ModeController.NodeSelectionListener</srcNode>
<endNode>freemind.view.mindmapview.NodeView</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.ModesCreator</srcNode>
<endNode>freemind.controller.Controller</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.ModesCreator</srcNode>
<endNode>freemind.main.FreeMindMain</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.ModesCreator</srcNode>
<endNode>freemind.main.Resources</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.ModesCreator</srcNode>
<endNode>freemind.modes.Mode</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.NodeAdapter</srcNode>
<endNode>freemind.controller.Controller</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.NodeAdapter</srcNode>
<endNode>freemind.controller.filter.Filter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.NodeAdapter</srcNode>
<endNode>freemind.controller.filter.FilterInfo</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.NodeAdapter</srcNode>
<endNode>freemind.extensions.DontSaveMarker</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.NodeAdapter</srcNode>
<endNode>freemind.extensions.MindMapHook</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.NodeAdapter</srcNode>
<endNode>freemind.extensions.NodeHook</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.NodeAdapter</srcNode>
<endNode>freemind.extensions.PermanentNodeHook</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.NodeAdapter</srcNode>
<endNode>freemind.main.FreeMind</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.NodeAdapter</srcNode>
<endNode>freemind.main.FreeMindMain</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.NodeAdapter</srcNode>
<endNode>freemind.main.HtmlTools</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.NodeAdapter</srcNode>
<endNode>freemind.main.Resources</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.NodeAdapter</srcNode>
<endNode>freemind.main.Tools</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.NodeAdapter</srcNode>
<endNode>freemind.main.XMLElement</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.NodeAdapter</srcNode>
<endNode>freemind.modes.ArrowLinkAdapter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.NodeAdapter</srcNode>
<endNode>freemind.modes.ArrowLinkTarget</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.NodeAdapter</srcNode>
<endNode>freemind.modes.attributes.Attribute</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.NodeAdapter</srcNode>
<endNode>freemind.modes.attributes.NodeAttributeTableModel</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.NodeAdapter</srcNode>
<endNode>freemind.modes.HistoryInformation</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.NodeAdapter</srcNode>
<endNode>freemind.modes.MapRegistry</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.NodeAdapter</srcNode>
<endNode>freemind.modes.MindIcon</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.NodeAdapter</srcNode>
<endNode>freemind.modes.MindMap</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.NodeAdapter</srcNode>
<endNode>freemind.modes.MindMapCloud</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.NodeAdapter</srcNode>
<endNode>freemind.modes.MindMapEdge</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.NodeAdapter</srcNode>
<endNode>freemind.modes.MindMapLinkRegistry</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.NodeAdapter</srcNode>
<endNode>freemind.modes.MindMapNode</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.NodeAdapter</srcNode>
<endNode>freemind.modes.ModeController</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.NodeAdapter</srcNode>
<endNode>freemind.modes.XMLElementAdapter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.NodeAdapter</srcNode>
<endNode>freemind.preferences.FreemindPropertyListener</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.NodeAdapter</srcNode>
<endNode>freemind.view.mindmapview.NodeView</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.NodeAdapter</srcNode>
<endNode>freemind.view.mindmapview.NodeViewVisitor</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.NodeAdapter.(Anon_1)</srcNode>
<endNode>freemind.modes.attributes.Attribute</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.NodeAdapter.(Anon_1)</srcNode>
<endNode>freemind.modes.attributes.NodeAttributeTableModel</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.NodeAdapter.NodeAdapter.(Anon_2)</srcNode>
<endNode>freemind.main.FreeMindCommon</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.NodeAdapter.NodeAdapter.(Anon_2)</srcNode>
<endNode>freemind.modes.NodeAdapter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.NodeAdapter.NodeAdapter.(Anon_2)</srcNode>
<endNode>freemind.preferences.FreemindPropertyListener</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.NodeAdapter.sortedChildrenUnfolded.(Anon_3)</srcNode>
<endNode>freemind.modes.MindMapNode</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.NodeDownAction</srcNode>
<endNode>freemind.modes.ControllerAdapter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.NodeDownAction</srcNode>
<endNode>freemind.modes.mindmapmode.MindMapController</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.NodeDownAction</srcNode>
<endNode>freemind.modes.MindMapNode</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.NodeViewEvent</srcNode>
<endNode>freemind.modes.MindMapNode</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.NodeViewEventListener</srcNode>
<endNode>freemind.modes.NodeViewEvent</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.schememode.SchemeController</srcNode>
<endNode>freemind.controller.MenuBar</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.schememode.SchemeController</srcNode>
<endNode>freemind.controller.StructuredMenuHolder</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.schememode.SchemeController</srcNode>
<endNode>freemind.extensions.HookFactory</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.schememode.SchemeController</srcNode>
<endNode>freemind.modes.common.actions.NewMapAction</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.schememode.SchemeController</srcNode>
<endNode>freemind.modes.ControllerAdapter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.schememode.SchemeController</srcNode>
<endNode>freemind.modes.ControllerAdapter.OpenAction</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.schememode.SchemeController</srcNode>
<endNode>freemind.modes.ControllerAdapter.SaveAction</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.schememode.SchemeController</srcNode>
<endNode>freemind.modes.ControllerAdapter.SaveAsAction</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.schememode.SchemeController</srcNode>
<endNode>freemind.modes.FreeMindFileDialog</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.schememode.SchemeController</srcNode>
<endNode>freemind.modes.MapAdapter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.schememode.SchemeController</srcNode>
<endNode>freemind.modes.MindMap</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.schememode.SchemeController</srcNode>
<endNode>freemind.modes.MindMapNode</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.schememode.SchemeController</srcNode>
<endNode>freemind.modes.Mode</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.schememode.SchemeController</srcNode>
<endNode>freemind.modes.ModeController</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.schememode.SchemeController</srcNode>
<endNode>freemind.modes.schememode.SchemeController.EvaluateAction</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.schememode.SchemeController</srcNode>
<endNode>freemind.modes.schememode.SchemeMapModel</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.schememode.SchemeController</srcNode>
<endNode>freemind.modes.schememode.SchemeNodeModel</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.schememode.SchemeController</srcNode>
<endNode>freemind.modes.schememode.SchemePopupMenu</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.schememode.SchemeController</srcNode>
<endNode>freemind.modes.viewmodes.ViewControllerAdapter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.schememode.SchemeController.EvaluateAction</srcNode>
<endNode>freemind.controller.Controller</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.schememode.SchemeController.EvaluateAction</srcNode>
<endNode>freemind.modes.ControllerAdapter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.schememode.SchemeController.EvaluateAction</srcNode>
<endNode>freemind.modes.schememode.SchemeMapModel</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.schememode.SchemeEdgeModel</srcNode>
<endNode>freemind.main.FreeMindMain</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.schememode.SchemeEdgeModel</srcNode>
<endNode>freemind.modes.EdgeAdapter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.schememode.SchemeEdgeModel</srcNode>
<endNode>freemind.modes.MindMapNode</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.schememode.SchemeMapModel</srcNode>
<endNode>freemind.main.FreeMindMain</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.schememode.SchemeMapModel</srcNode>
<endNode>freemind.main.Resources</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.schememode.SchemeMapModel</srcNode>
<endNode>freemind.modes.MapAdapter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.schememode.SchemeMapModel</srcNode>
<endNode>freemind.modes.ModeController</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.schememode.SchemeMapModel</srcNode>
<endNode>freemind.modes.NodeAdapter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.schememode.SchemeMapModel</srcNode>
<endNode>freemind.modes.schememode.SchemeNodeModel</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.schememode.SchemeMode</srcNode>
<endNode>freemind.controller.Controller</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.schememode.SchemeMode</srcNode>
<endNode>freemind.controller.MapModuleManager</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.schememode.SchemeMode</srcNode>
<endNode>freemind.main.FreeMindMain</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.schememode.SchemeMode</srcNode>
<endNode>freemind.modes.Mode</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.schememode.SchemeMode</srcNode>
<endNode>freemind.modes.ModeController</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.schememode.SchemeMode</srcNode>
<endNode>freemind.modes.schememode.SchemeController</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.schememode.SchemeMode</srcNode>
<endNode>freemind.modes.schememode.SchemeToolBar</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.schememode.SchemeNodeModel</srcNode>
<endNode>freemind.main.FreeMindMain</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.schememode.SchemeNodeModel</srcNode>
<endNode>freemind.modes.MindMap</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.schememode.SchemeNodeModel</srcNode>
<endNode>freemind.modes.NodeAdapter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.schememode.SchemeNodeModel</srcNode>
<endNode>freemind.modes.schememode.SchemeEdgeModel</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.schememode.SchemePopupMenu</srcNode>
<endNode>freemind.modes.schememode.SchemeController</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.schememode.SchemeToolBar</srcNode>
<endNode>freemind.modes.schememode.SchemeController</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.StylePattern</srcNode>
<endNode>freemind.main.Tools</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.StylePattern</srcNode>
<endNode>freemind.main.XMLElement</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.StylePattern</srcNode>
<endNode>freemind.modes.EdgeAdapter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.StylePattern</srcNode>
<endNode>freemind.modes.MindIcon</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.StylePattern</srcNode>
<endNode>freemind.modes.MindMapLine</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.StylePattern</srcNode>
<endNode>freemind.modes.MindMapNode</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.StylePatternFactory</srcNode>
<endNode>freemind.common.TextTranslator</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.StylePatternFactory</srcNode>
<endNode>freemind.common.XmlBindingTools</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.StylePatternFactory</srcNode>
<endNode>freemind.main.Resources</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.StylePatternFactory</srcNode>
<endNode>freemind.main.Tools</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.StylePatternFactory</srcNode>
<endNode>freemind.modes.LineAdapter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.StylePatternFactory</srcNode>
<endNode>freemind.modes.MindIcon</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.StylePatternFactory</srcNode>
<endNode>freemind.modes.MindMapLine</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.StylePatternFactory</srcNode>
<endNode>freemind.modes.MindMapNode</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.viewmodes.CommonToggleChildrenFoldedAction</srcNode>
<endNode>freemind.controller.Controller</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.viewmodes.CommonToggleChildrenFoldedAction</srcNode>
<endNode>freemind.main.FreeMindMain</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.viewmodes.CommonToggleChildrenFoldedAction</srcNode>
<endNode>freemind.modes.common.CommonToggleFoldedAction</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.viewmodes.CommonToggleChildrenFoldedAction</srcNode>
<endNode>freemind.modes.ControllerAdapter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.viewmodes.CommonToggleChildrenFoldedAction</srcNode>
<endNode>freemind.modes.MindMapNode</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.viewmodes.CommonToggleChildrenFoldedAction</srcNode>
<endNode>freemind.modes.viewmodes.ViewControllerAdapter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.viewmodes.CommonToggleChildrenFoldedAction</srcNode>
<endNode>freemind.view.mindmapview.MapView</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.viewmodes.CommonToggleChildrenFoldedAction</srcNode>
<endNode>freemind.view.mindmapview.NodeView</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.viewmodes.ViewControllerAdapter</srcNode>
<endNode>freemind.controller.Controller</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.viewmodes.ViewControllerAdapter</srcNode>
<endNode>freemind.controller.MapMouseMotionListener</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.viewmodes.ViewControllerAdapter</srcNode>
<endNode>freemind.controller.NodeKeyListener</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.viewmodes.ViewControllerAdapter</srcNode>
<endNode>freemind.controller.NodeMouseMotionListener</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.viewmodes.ViewControllerAdapter</srcNode>
<endNode>freemind.main.FreeMindMain</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.viewmodes.ViewControllerAdapter</srcNode>
<endNode>freemind.main.XMLElement</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.viewmodes.ViewControllerAdapter</srcNode>
<endNode>freemind.modes.common.actions.FindAction</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.viewmodes.ViewControllerAdapter</srcNode>
<endNode>freemind.modes.common.actions.FindAction.FindNextAction</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.viewmodes.ViewControllerAdapter</srcNode>
<endNode>freemind.modes.common.CommonNodeKeyListener</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.viewmodes.ViewControllerAdapter</srcNode>
<endNode>freemind.modes.common.CommonToggleFoldedAction</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.viewmodes.ViewControllerAdapter</srcNode>
<endNode>freemind.modes.common.listeners.CommonMouseMotionManager</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.viewmodes.ViewControllerAdapter</srcNode>
<endNode>freemind.modes.common.listeners.CommonNodeMouseMotionListener</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.viewmodes.ViewControllerAdapter</srcNode>
<endNode>freemind.modes.ControllerAdapter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.viewmodes.ViewControllerAdapter</srcNode>
<endNode>freemind.modes.MindMapNode</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.viewmodes.ViewControllerAdapter</srcNode>
<endNode>freemind.modes.Mode</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.viewmodes.ViewControllerAdapter</srcNode>
<endNode>freemind.modes.viewmodes.CommonToggleChildrenFoldedAction</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.viewmodes.ViewControllerAdapter</srcNode>
<endNode>freemind.view.mindmapview.MainView</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.viewmodes.ViewControllerAdapter</srcNode>
<endNode>freemind.view.mindmapview.MapView</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.viewmodes.ViewControllerAdapter</srcNode>
<endNode>freemind.view.mindmapview.NodeView</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.viewmodes.ViewControllerAdapter.startupController.(Anon_1)</srcNode>
<endNode>freemind.modes.common.CommonNodeKeyListener.EditHandler</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.XMLElementAdapter</srcNode>
<endNode>freemind.controller.Controller</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.XMLElementAdapter</srcNode>
<endNode>freemind.extensions.HookFactory</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.XMLElementAdapter</srcNode>
<endNode>freemind.extensions.NodeHook</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.XMLElementAdapter</srcNode>
<endNode>freemind.extensions.PermanentNodeHook</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.XMLElementAdapter</srcNode>
<endNode>freemind.extensions.PermanentNodeHookSubstituteUnknown</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.XMLElementAdapter</srcNode>
<endNode>freemind.main.FreeMindMain</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.XMLElementAdapter</srcNode>
<endNode>freemind.main.Resources</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.XMLElementAdapter</srcNode>
<endNode>freemind.main.Tools</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.XMLElementAdapter</srcNode>
<endNode>freemind.main.XMLElement</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.XMLElementAdapter</srcNode>
<endNode>freemind.modes.ArrowLinkAdapter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.XMLElementAdapter</srcNode>
<endNode>freemind.modes.ArrowLinkTarget</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.XMLElementAdapter</srcNode>
<endNode>freemind.modes.attributes.Attribute</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.XMLElementAdapter</srcNode>
<endNode>freemind.modes.attributes.AttributeRegistry</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.XMLElementAdapter</srcNode>
<endNode>freemind.modes.attributes.AttributeRegistryElement</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.XMLElementAdapter</srcNode>
<endNode>freemind.modes.attributes.AttributeTableLayoutModel</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.XMLElementAdapter</srcNode>
<endNode>freemind.modes.attributes.NodeAttributeTableModel</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.XMLElementAdapter</srcNode>
<endNode>freemind.modes.CloudAdapter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.XMLElementAdapter</srcNode>
<endNode>freemind.modes.EdgeAdapter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.XMLElementAdapter</srcNode>
<endNode>freemind.modes.HistoryInformation</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.XMLElementAdapter</srcNode>
<endNode>freemind.modes.LineAdapter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.XMLElementAdapter</srcNode>
<endNode>freemind.modes.LinkAdapter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.XMLElementAdapter</srcNode>
<endNode>freemind.modes.MapRegistry</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.XMLElementAdapter</srcNode>
<endNode>freemind.modes.MindIcon</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.XMLElementAdapter</srcNode>
<endNode>freemind.modes.MindMap</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.XMLElementAdapter</srcNode>
<endNode>freemind.modes.MindMapLine</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.XMLElementAdapter</srcNode>
<endNode>freemind.modes.MindMapLink</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.XMLElementAdapter</srcNode>
<endNode>freemind.modes.MindMapLinkRegistry</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.XMLElementAdapter</srcNode>
<endNode>freemind.modes.MindMapNode</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.XMLElementAdapter</srcNode>
<endNode>freemind.modes.ModeController</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.modes.XMLElementAdapter</srcNode>
<endNode>freemind.modes.NodeAdapter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.preferences.FreemindPropertyContributor</srcNode>
<endNode>freemind.common.TextTranslator</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.preferences.layout.GrabKeyDialog</srcNode>
<endNode>freemind.main.FreeMindMain</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.preferences.layout.GrabKeyDialog</srcNode>
<endNode>freemind.preferences.layout.GrabKeyDialog.ActionHandler</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.preferences.layout.GrabKeyDialog</srcNode>
<endNode>freemind.preferences.layout.GrabKeyDialog.Buffer</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.preferences.layout.GrabKeyDialog</srcNode>
<endNode>freemind.preferences.layout.GrabKeyDialog.InputPane</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.preferences.layout.GrabKeyDialog</srcNode>
<endNode>freemind.preferences.layout.GrabKeyDialog.KeyBinding</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.preferences.layout.GrabKeyDialog.ActionHandler</srcNode>
<endNode>freemind.preferences.layout.GrabKeyDialog</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.preferences.layout.GrabKeyDialog.ActionHandler</srcNode>
<endNode>freemind.preferences.layout.GrabKeyDialog.KeyBinding</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.preferences.layout.GrabKeyDialog.InputPane</srcNode>
<endNode>freemind.preferences.layout.GrabKeyDialog</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.preferences.layout.GrabKeyDialog.InputPane</srcNode>
<endNode>freemind.preferences.layout.GrabKeyDialog.Buffer</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.preferences.layout.GrabKeyDialog.InputPane</srcNode>
<endNode>freemind.preferences.layout.KeyEventTranslator</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.preferences.layout.GrabKeyDialog.InputPane</srcNode>
<endNode>freemind.preferences.layout.KeyEventTranslator.Key</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.preferences.layout.GrabKeyDialog.InputPane</srcNode>
<endNode>freemind.preferences.layout.KeyEventWorkaround</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.preferences.layout.KeyEventTranslator</srcNode>
<endNode>freemind.preferences.layout.GrabKeyDialog</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.preferences.layout.KeyEventTranslator</srcNode>
<endNode>freemind.preferences.layout.KeyEventTranslator.Key</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.preferences.layout.KeyEventTranslator</srcNode>
<endNode>freemind.preferences.layout.KeyEventWorkaround</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.preferences.layout.OptionPanel</srcNode>
<endNode>freemind.common.BooleanProperty</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.preferences.layout.OptionPanel</srcNode>
<endNode>freemind.common.ColorProperty</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.preferences.layout.OptionPanel</srcNode>
<endNode>freemind.common.ComboProperty</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.preferences.layout.OptionPanel</srcNode>
<endNode>freemind.common.DontShowNotificationProperty</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.preferences.layout.OptionPanel</srcNode>
<endNode>freemind.common.NextLineProperty</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.preferences.layout.OptionPanel</srcNode>
<endNode>freemind.common.NumberProperty</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.preferences.layout.OptionPanel</srcNode>
<endNode>freemind.common.PasswordProperty</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.preferences.layout.OptionPanel</srcNode>
<endNode>freemind.common.PropertyBean</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.preferences.layout.OptionPanel</srcNode>
<endNode>freemind.common.PropertyControl</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.preferences.layout.OptionPanel</srcNode>
<endNode>freemind.common.RemindValueProperty</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.preferences.layout.OptionPanel</srcNode>
<endNode>freemind.common.SeparatorProperty</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.preferences.layout.OptionPanel</srcNode>
<endNode>freemind.common.StringProperty</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.preferences.layout.OptionPanel</srcNode>
<endNode>freemind.common.TextTranslator</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.preferences.layout.OptionPanel</srcNode>
<endNode>freemind.common.XmlBindingTools</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.preferences.layout.OptionPanel</srcNode>
<endNode>freemind.controller.Controller</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.preferences.layout.OptionPanel</srcNode>
<endNode>freemind.controller.StructuredMenuHolder</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.preferences.layout.OptionPanel</srcNode>
<endNode>freemind.main.FreeMind</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.preferences.layout.OptionPanel</srcNode>
<endNode>freemind.main.FreeMindCommon</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.preferences.layout.OptionPanel</srcNode>
<endNode>freemind.modes.IconInformation</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.preferences.layout.OptionPanel</srcNode>
<endNode>freemind.modes.MindIcon</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.preferences.layout.OptionPanel</srcNode>
<endNode>freemind.modes.mindmapmode.MindMapController</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.preferences.layout.OptionPanel</srcNode>
<endNode>freemind.modes.MindMapNode</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.preferences.layout.OptionPanel</srcNode>
<endNode>freemind.modes.ModeController</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.preferences.layout.OptionPanel</srcNode>
<endNode>freemind.preferences.FreemindPropertyContributor</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.preferences.layout.OptionPanel</srcNode>
<endNode>freemind.preferences.layout.OptionPanel.ChangeTabAction</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.preferences.layout.OptionPanel</srcNode>
<endNode>freemind.preferences.layout.OptionPanel.KeyProperty</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.preferences.layout.OptionPanel</srcNode>
<endNode>freemind.preferences.layout.OptionPanel.NewTabProperty</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.preferences.layout.OptionPanel</srcNode>
<endNode>freemind.preferences.layout.OptionPanel.OptionPanelFeedback</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.preferences.layout.OptionPanel</srcNode>
<endNode>freemind.preferences.layout.VariableSizeCardLayout</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.preferences.layout.OptionPanel.buildPanel.(Anon_1)</srcNode>
<endNode>freemind.preferences.layout.OptionPanel</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.preferences.layout.OptionPanel.buildPanel.(Anon_2)</srcNode>
<endNode>freemind.preferences.layout.OptionPanel</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.preferences.layout.OptionPanel.buildPanel.(Anon_2)</srcNode>
<endNode>freemind.preferences.layout.OptionPanel.OptionPanelFeedback</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.preferences.layout.OptionPanel.ChangeTabAction</srcNode>
<endNode>freemind.preferences.layout.OptionPanel</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.preferences.layout.OptionPanel.getControls.(Anon_4)</srcNode>
<endNode>freemind.common.TextTranslator</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.preferences.layout.OptionPanel.getControls.(Anon_4)</srcNode>
<endNode>freemind.main.Tools</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.preferences.layout.OptionPanel.getControls.(Anon_4)</srcNode>
<endNode>freemind.preferences.layout.OptionPanel</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.preferences.layout.OptionPanel.KeyProperty</srcNode>
<endNode>freemind.common.PropertyBean</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.preferences.layout.OptionPanel.KeyProperty</srcNode>
<endNode>freemind.common.PropertyControl</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.preferences.layout.OptionPanel.KeyProperty</srcNode>
<endNode>freemind.common.TextTranslator</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.preferences.layout.OptionPanel.KeyProperty.KeyProperty.(Anon_3)</srcNode>
<endNode>freemind.common.PropertyBean</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.preferences.layout.OptionPanel.KeyProperty.KeyProperty.(Anon_3)</srcNode>
<endNode>freemind.preferences.layout.GrabKeyDialog</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.preferences.layout.OptionPanel.KeyProperty.KeyProperty.(Anon_3)</srcNode>
<endNode>freemind.preferences.layout.GrabKeyDialog.KeyBinding</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.preferences.layout.OptionPanel.KeyProperty.KeyProperty.(Anon_3)</srcNode>
<endNode>freemind.preferences.layout.OptionPanel</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.preferences.layout.OptionPanel.KeyProperty.KeyProperty.(Anon_3)</srcNode>
<endNode>freemind.preferences.layout.OptionPanel.KeyProperty</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.preferences.layout.OptionPanel.NewTabProperty</srcNode>
<endNode>freemind.common.PropertyControl</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.preferences.layout.OptionPanel.NewTabProperty</srcNode>
<endNode>freemind.common.TextTranslator</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.preferences.layout.OptionPanel.NewTabProperty</srcNode>
<endNode>freemind.preferences.layout.OptionPanel</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.MapModule</srcNode>
<endNode>freemind.controller.Controller</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.MapModule</srcNode>
<endNode>freemind.main.FreeMindMain</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.MapModule</srcNode>
<endNode>freemind.modes.MindMap</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.MapModule</srcNode>
<endNode>freemind.modes.Mode</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.MapModule</srcNode>
<endNode>freemind.modes.ModeController</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.MapModule</srcNode>
<endNode>freemind.view.mindmapview.MapView</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.ArrowLinkView</srcNode>
<endNode>freemind.modes.MindMapArrowLink</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.ArrowLinkView</srcNode>
<endNode>freemind.modes.MindMapLine</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.ArrowLinkView</srcNode>
<endNode>freemind.view.mindmapview.MapView</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.ArrowLinkView</srcNode>
<endNode>freemind.view.mindmapview.NodeView</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.attributeview.AttributePopupMenu</srcNode>
<endNode>freemind.main.Resources</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.attributeview.AttributePopupMenu</srcNode>
<endNode>freemind.modes.attributes.AttributeTableLayoutModel</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.attributeview.AttributePopupMenu</srcNode>
<endNode>freemind.modes.attributes.AttributeTableModel</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.attributeview.AttributePopupMenu</srcNode>
<endNode>freemind.view.mindmapview.attributeview.AttributeTable</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.attributeview.AttributePopupMenu</srcNode>
<endNode>freemind.view.mindmapview.attributeview.AttributeView</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.attributeview.AttributePopupMenu.firePopupMenuWillBecomeInvisible.(Anon_6)</srcNode>
<endNode>freemind.view.mindmapview.attributeview.AttributePopupMenu</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.attributeview.AttributePopupMenu.getDelete.(Anon_3)</srcNode>
<endNode>freemind.view.mindmapview.attributeview.AttributePopupMenu</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.attributeview.AttributePopupMenu.getDelete.(Anon_3)</srcNode>
<endNode>freemind.view.mindmapview.attributeview.AttributeTable</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.attributeview.AttributePopupMenu.getDown.(Anon_5)</srcNode>
<endNode>freemind.view.mindmapview.attributeview.AttributePopupMenu</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.attributeview.AttributePopupMenu.getDown.(Anon_5)</srcNode>
<endNode>freemind.view.mindmapview.attributeview.AttributeTable</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.attributeview.AttributePopupMenu.getInsert.(Anon_2)</srcNode>
<endNode>freemind.view.mindmapview.attributeview.AttributePopupMenu</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.attributeview.AttributePopupMenu.getInsert.(Anon_2)</srcNode>
<endNode>freemind.view.mindmapview.attributeview.AttributeTable</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.attributeview.AttributePopupMenu.getOptimalWidth.(Anon_1)</srcNode>
<endNode>freemind.view.mindmapview.attributeview.AttributePopupMenu</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.attributeview.AttributePopupMenu.getOptimalWidth.(Anon_1)</srcNode>
<endNode>freemind.view.mindmapview.attributeview.AttributeTable</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.attributeview.AttributePopupMenu.getUp.(Anon_4)</srcNode>
<endNode>freemind.view.mindmapview.attributeview.AttributePopupMenu</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.attributeview.AttributePopupMenu.getUp.(Anon_4)</srcNode>
<endNode>freemind.view.mindmapview.attributeview.AttributeTable</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.attributeview.AttributeTable</srcNode>
<endNode>freemind.main.Resources</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.attributeview.AttributeTable</srcNode>
<endNode>freemind.modes.attributes.AttributeController</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.attributeview.AttributeTable</srcNode>
<endNode>freemind.modes.attributes.AttributeRegistry</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.attributeview.AttributeTable</srcNode>
<endNode>freemind.modes.attributes.AttributeTableLayoutModel</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.attributeview.AttributeTable</srcNode>
<endNode>freemind.modes.attributes.ColumnWidthChangeEvent</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.attributeview.AttributeTable</srcNode>
<endNode>freemind.modes.attributes.ColumnWidthChangeListener</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.attributeview.AttributeTable</srcNode>
<endNode>freemind.modes.MapRegistry</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.attributeview.AttributeTable</srcNode>
<endNode>freemind.modes.MindMap</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.attributeview.AttributeTable</srcNode>
<endNode>freemind.modes.MindMapNode</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.attributeview.AttributeTable</srcNode>
<endNode>freemind.modes.ModeController</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.attributeview.AttributeTable</srcNode>
<endNode>freemind.view.mindmapview.attributeview.AttributeTable.HeaderMouseListener</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.attributeview.AttributeTable</srcNode>
<endNode>freemind.view.mindmapview.attributeview.AttributeTable.MyFocusListener</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.attributeview.AttributeTable</srcNode>
<endNode>freemind.view.mindmapview.attributeview.AttributeTableCellRenderer</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.attributeview.AttributeTable</srcNode>
<endNode>freemind.view.mindmapview.attributeview.AttributeTableModelDecoratorAdapter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.attributeview.AttributeTable</srcNode>
<endNode>freemind.view.mindmapview.attributeview.AttributeView</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.attributeview.AttributeTable</srcNode>
<endNode>freemind.view.mindmapview.attributeview.ExtendedAttributeTableModelDecorator</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.attributeview.AttributeTable</srcNode>
<endNode>freemind.view.mindmapview.MapView</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.attributeview.AttributeTable</srcNode>
<endNode>freemind.view.mindmapview.NodeView</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.attributeview.AttributeTable.HeaderMouseListener</srcNode>
<endNode>freemind.modes.attributes.AttributeTableModel</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.attributeview.AttributeTable.HeaderMouseListener</srcNode>
<endNode>freemind.view.mindmapview.attributeview.AttributeTable</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.attributeview.AttributeTable.HeaderMouseListener</srcNode>
<endNode>freemind.view.mindmapview.attributeview.AttributeView</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.attributeview.AttributeTable.HeaderMouseListener</srcNode>
<endNode>freemind.view.mindmapview.MapView</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.attributeview.AttributeTable.MyFocusListener</srcNode>
<endNode>freemind.modes.attributes.AttributeRegistry</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.attributeview.AttributeTable.MyFocusListener</srcNode>
<endNode>freemind.modes.MapRegistry</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.attributeview.AttributeTable.MyFocusListener</srcNode>
<endNode>freemind.modes.MindMap</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.attributeview.AttributeTable.MyFocusListener</srcNode>
<endNode>freemind.modes.MindMapNode</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.attributeview.AttributeTable.MyFocusListener</srcNode>
<endNode>freemind.view.mindmapview.attributeview.AttributeTable</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.attributeview.AttributeTable.MyFocusListener</srcNode>
<endNode>freemind.view.mindmapview.attributeview.AttributeView</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.attributeview.AttributeTable.MyFocusListener.focusGained.(Anon_1)</srcNode>
<endNode>freemind.view.mindmapview.attributeview.AttributeTable.MyFocusListener</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.attributeview.AttributeTable.MyFocusListener.focusGained.(Anon_1)</srcNode>
<endNode>freemind.view.mindmapview.MapView</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.attributeview.AttributeTable.MyFocusListener.focusGained.(Anon_1)</srcNode>
<endNode>freemind.view.mindmapview.NodeView</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.attributeview.AttributeTableCellRenderer</srcNode>
<endNode>freemind.view.mindmapview.attributeview.AttributeTable</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.attributeview.AttributeTableCellRenderer</srcNode>
<endNode>freemind.view.mindmapview.MainView</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.attributeview.AttributeTableModelDecoratorAdapter</srcNode>
<endNode>freemind.modes.attributes.AttributeRegistry</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.attributeview.AttributeTableModelDecoratorAdapter</srcNode>
<endNode>freemind.modes.attributes.AttributeTableModel</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.attributeview.AttributeTableModelDecoratorAdapter</srcNode>
<endNode>freemind.modes.attributes.NodeAttributeTableModel</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.attributeview.AttributeTableModelDecoratorAdapter</srcNode>
<endNode>freemind.modes.MindMapNode</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.attributeview.AttributeTableModelDecoratorAdapter</srcNode>
<endNode>freemind.view.mindmapview.attributeview.AttributeView</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.attributeview.AttributeView</srcNode>
<endNode>freemind.modes.attributes.AttributeRegistry</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.attributeview.AttributeView</srcNode>
<endNode>freemind.modes.attributes.AttributeTableLayoutModel</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.attributeview.AttributeView</srcNode>
<endNode>freemind.modes.attributes.AttributeTableModel</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.attributeview.AttributeView</srcNode>
<endNode>freemind.modes.attributes.NodeAttributeTableModel</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.attributeview.AttributeView</srcNode>
<endNode>freemind.modes.MapRegistry</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.attributeview.AttributeView</srcNode>
<endNode>freemind.modes.MindMap</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.attributeview.AttributeView</srcNode>
<endNode>freemind.modes.mindmapmode.MindMapController</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.attributeview.AttributeView</srcNode>
<endNode>freemind.modes.MindMapNode</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.attributeview.AttributeView</srcNode>
<endNode>freemind.modes.ModeController</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.attributeview.AttributeView</srcNode>
<endNode>freemind.view.mindmapview.attributeview.AttributePopupMenu</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.attributeview.AttributeView</srcNode>
<endNode>freemind.view.mindmapview.attributeview.AttributeTable</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.attributeview.AttributeView</srcNode>
<endNode>freemind.view.mindmapview.attributeview.AttributeTableModelDecoratorAdapter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.attributeview.AttributeView</srcNode>
<endNode>freemind.view.mindmapview.attributeview.AttributeViewScrollPane</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.attributeview.AttributeView</srcNode>
<endNode>freemind.view.mindmapview.attributeview.ExtendedAttributeTableModelDecorator</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.attributeview.AttributeView</srcNode>
<endNode>freemind.view.mindmapview.attributeview.ReducedAttributeTableModelDecorator</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.attributeview.AttributeView</srcNode>
<endNode>freemind.view.mindmapview.MapView</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.attributeview.AttributeView</srcNode>
<endNode>freemind.view.mindmapview.NodeView</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.attributeview.AttributeView.startEditing.(Anon_1)</srcNode>
<endNode>freemind.view.mindmapview.attributeview.AttributeView</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.attributeview.AttributeViewScrollPane</srcNode>
<endNode>freemind.view.mindmapview.attributeview.AttributeTable</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.attributeview.ExtendedAttributeTableModelDecorator</srcNode>
<endNode>freemind.modes.attributes.Attribute</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.attributeview.ExtendedAttributeTableModelDecorator</srcNode>
<endNode>freemind.modes.attributes.NodeAttributeTableModel</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.attributeview.ExtendedAttributeTableModelDecorator</srcNode>
<endNode>freemind.view.mindmapview.attributeview.AttributeTableModelDecoratorAdapter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.attributeview.ExtendedAttributeTableModelDecorator</srcNode>
<endNode>freemind.view.mindmapview.attributeview.AttributeView</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.attributeview.ReducedAttributeTableModelDecorator</srcNode>
<endNode>freemind.modes.attributes.Attribute</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.attributeview.ReducedAttributeTableModelDecorator</srcNode>
<endNode>freemind.modes.attributes.AttributeRegistry</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.attributeview.ReducedAttributeTableModelDecorator</srcNode>
<endNode>freemind.modes.attributes.AttributeRegistryElement</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.attributeview.ReducedAttributeTableModelDecorator</srcNode>
<endNode>freemind.modes.attributes.NodeAttributeTableModel</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.attributeview.ReducedAttributeTableModelDecorator</srcNode>
<endNode>freemind.view.mindmapview.attributeview.AttributeTableModelDecoratorAdapter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.attributeview.ReducedAttributeTableModelDecorator</srcNode>
<endNode>freemind.view.mindmapview.attributeview.AttributeView</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.BezierEdgeView</srcNode>
<endNode>freemind.modes.MindMapLine</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.BezierEdgeView</srcNode>
<endNode>freemind.view.mindmapview.EdgeView</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.BezierEdgeView</srcNode>
<endNode>freemind.view.mindmapview.MapView</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.BezierEdgeView</srcNode>
<endNode>freemind.view.mindmapview.NodeView</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.BezierEdgeView</srcNode>
<endNode>freemind.view.mindmapview.VerticalRootNodeViewLayout</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.BubbleMainView</srcNode>
<endNode>freemind.controller.Controller</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.BubbleMainView</srcNode>
<endNode>freemind.main.Tools</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.BubbleMainView</srcNode>
<endNode>freemind.modes.MindMapLine</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.BubbleMainView</srcNode>
<endNode>freemind.modes.MindMapNode</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.BubbleMainView</srcNode>
<endNode>freemind.view.mindmapview.MainView</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.BubbleMainView</srcNode>
<endNode>freemind.view.mindmapview.MapView</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.BubbleMainView</srcNode>
<endNode>freemind.view.mindmapview.NodeView</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.CloudView</srcNode>
<endNode>freemind.modes.MindMapCloud</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.CloudView</srcNode>
<endNode>freemind.modes.MindMapLine</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.CloudView</srcNode>
<endNode>freemind.view.mindmapview.ConvexHull</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.CloudView</srcNode>
<endNode>freemind.view.mindmapview.MapView</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.CloudView</srcNode>
<endNode>freemind.view.mindmapview.NodeView</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.ConvexHull</srcNode>
<endNode>freemind.view.mindmapview.ConvexHull.thetaComparator</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.EdgeView</srcNode>
<endNode>freemind.main.Tools</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.EdgeView</srcNode>
<endNode>freemind.modes.EdgeAdapter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.EdgeView</srcNode>
<endNode>freemind.modes.MindMapEdge</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.EdgeView</srcNode>
<endNode>freemind.modes.MindMapLine</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.EdgeView</srcNode>
<endNode>freemind.modes.MindMapNode</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.EdgeView</srcNode>
<endNode>freemind.view.mindmapview.MapView</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.EdgeView</srcNode>
<endNode>freemind.view.mindmapview.NodeView</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.EditNodeBase</srcNode>
<endNode>freemind.controller.Controller</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.EditNodeBase</srcNode>
<endNode>freemind.main.FreeMindCommon</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.EditNodeBase</srcNode>
<endNode>freemind.main.FreeMindMain</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.EditNodeBase</srcNode>
<endNode>freemind.main.Resources</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.EditNodeBase</srcNode>
<endNode>freemind.main.Tools</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.EditNodeBase</srcNode>
<endNode>freemind.modes.ModeController</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.EditNodeBase</srcNode>
<endNode>freemind.view.mindmapview.EditNodeBase.EditControl</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.EditNodeBase</srcNode>
<endNode>freemind.view.mindmapview.EditNodeBase.redispatchKeyEvents.KeyEventQueue</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.EditNodeBase</srcNode>
<endNode>freemind.view.mindmapview.MapView</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.EditNodeBase</srcNode>
<endNode>freemind.view.mindmapview.NodeView</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.EditNodeBase.EditCopyAction</srcNode>
<endNode>freemind.view.mindmapview.EditNodeBase</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.EditNodeBase.EditDialog</srcNode>
<endNode>freemind.view.mindmapview.EditNodeBase</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.EditNodeBase.EditDialog</srcNode>
<endNode>freemind.view.mindmapview.EditNodeBase.EditDialog.DialogWindowListener</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.EditNodeBase.EditDialog.CancelAction</srcNode>
<endNode>freemind.view.mindmapview.EditNodeBase.EditDialog</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.EditNodeBase.EditDialog.DialogWindowListener</srcNode>
<endNode>freemind.view.mindmapview.EditNodeBase.EditDialog</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.EditNodeBase.EditDialog.SplitAction</srcNode>
<endNode>freemind.view.mindmapview.EditNodeBase.EditDialog</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.EditNodeBase.EditDialog.SubmitAction</srcNode>
<endNode>freemind.view.mindmapview.EditNodeBase.EditDialog</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.EditNodeBase.EditPopupMenu</srcNode>
<endNode>freemind.view.mindmapview.EditNodeBase.EditCopyAction</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.EditNodeDialog</srcNode>
<endNode>freemind.main.Tools</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.EditNodeDialog</srcNode>
<endNode>freemind.main.Tools.BooleanHolder</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.EditNodeDialog</srcNode>
<endNode>freemind.modes.ModeController</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.EditNodeDialog</srcNode>
<endNode>freemind.view.mindmapview.EditNodeBase</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.EditNodeDialog</srcNode>
<endNode>freemind.view.mindmapview.EditNodeBase.EditControl</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.EditNodeDialog</srcNode>
<endNode>freemind.view.mindmapview.EditNodeBase.EditDialog</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.EditNodeDialog</srcNode>
<endNode>freemind.view.mindmapview.EditNodeDialog.LongNodeDialog</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.EditNodeDialog</srcNode>
<endNode>freemind.view.mindmapview.MapView</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.EditNodeDialog</srcNode>
<endNode>freemind.view.mindmapview.NodeView</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.EditNodeDialog.LongNodeDialog</srcNode>
<endNode>freemind.main.FreeMindMain</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.EditNodeDialog.LongNodeDialog</srcNode>
<endNode>freemind.main.Tools</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.EditNodeDialog.LongNodeDialog</srcNode>
<endNode>freemind.main.Tools.BooleanHolder</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.EditNodeDialog.LongNodeDialog</srcNode>
<endNode>freemind.view.mindmapview.EditNodeBase</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.EditNodeDialog.LongNodeDialog</srcNode>
<endNode>freemind.view.mindmapview.EditNodeBase.EditControl</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.EditNodeDialog.LongNodeDialog</srcNode>
<endNode>freemind.view.mindmapview.EditNodeBase.EditDialog</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.EditNodeDialog.LongNodeDialog</srcNode>
<endNode>freemind.view.mindmapview.EditNodeDialog</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.EditNodeDialog.LongNodeDialog</srcNode>
<endNode>freemind.view.mindmapview.MapView</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.EditNodeDialog.LongNodeDialog</srcNode>
<endNode>freemind.view.mindmapview.NodeView</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.EditNodeDialog.LongNodeDialog.LongNodeDialog.(Anon_1).actionPerformed.(Anon_2)</srcNode>
<endNode>freemind.view.mindmapview.EditNodeDialog.LongNodeDialog</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.EditNodeDialog.LongNodeDialog.LongNodeDialog.(Anon_3)</srcNode>
<endNode>freemind.view.mindmapview.EditNodeDialog.LongNodeDialog</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.EditNodeDialog.LongNodeDialog.LongNodeDialog.(Anon_4)</srcNode>
<endNode>freemind.view.mindmapview.EditNodeDialog.LongNodeDialog</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.EditNodeDialog.LongNodeDialog.LongNodeDialog.(Anon_5)</srcNode>
<endNode>freemind.main.Tools.BooleanHolder</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.EditNodeDialog.LongNodeDialog.LongNodeDialog.(Anon_5)</srcNode>
<endNode>freemind.view.mindmapview.EditNodeDialog</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.EditNodeDialog.LongNodeDialog.LongNodeDialog.(Anon_5)</srcNode>
<endNode>freemind.view.mindmapview.EditNodeDialog.LongNodeDialog</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.EditNodeDialog.LongNodeDialog.LongNodeDialog.(Anon_6)</srcNode>
<endNode>freemind.view.mindmapview.EditNodeBase.EditDialog</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.EditNodeDialog.LongNodeDialog.LongNodeDialog.(Anon_6)</srcNode>
<endNode>freemind.view.mindmapview.EditNodeDialog.LongNodeDialog</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.EditNodeDialog.LongNodeDialog.LongNodeDialog.(Anon_7)</srcNode>
<endNode>freemind.view.mindmapview.EditNodeBase</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.EditNodeDialog.LongNodeDialog.LongNodeDialog.(Anon_7)</srcNode>
<endNode>freemind.view.mindmapview.EditNodeBase.EditPopupMenu</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.EditNodeDialog.LongNodeDialog.LongNodeDialog.(Anon_7)</srcNode>
<endNode>freemind.view.mindmapview.EditNodeDialog.LongNodeDialog</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.EditNodeExternalApplication</srcNode>
<endNode>freemind.modes.ModeController</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.EditNodeExternalApplication</srcNode>
<endNode>freemind.view.mindmapview.EditNodeBase</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.EditNodeExternalApplication</srcNode>
<endNode>freemind.view.mindmapview.EditNodeBase.EditControl</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.EditNodeExternalApplication</srcNode>
<endNode>freemind.view.mindmapview.NodeView</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.EditNodeExternalApplication.show.(Anon_1)</srcNode>
<endNode>freemind.main.FreeMindMain</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.EditNodeExternalApplication.show.(Anon_1)</srcNode>
<endNode>freemind.main.Resources</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.EditNodeExternalApplication.show.(Anon_1)</srcNode>
<endNode>freemind.main.Tools</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.EditNodeExternalApplication.show.(Anon_1)</srcNode>
<endNode>freemind.view.mindmapview.EditNodeBase</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.EditNodeExternalApplication.show.(Anon_1)</srcNode>
<endNode>freemind.view.mindmapview.EditNodeBase.EditControl</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.EditNodeExternalApplication.show.(Anon_1)</srcNode>
<endNode>freemind.view.mindmapview.EditNodeExternalApplication</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.EditNodeTextField</srcNode>
<endNode>freemind.main.Resources</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.EditNodeTextField</srcNode>
<endNode>freemind.main.Tools</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.EditNodeTextField</srcNode>
<endNode>freemind.main.Tools.IntHolder</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.EditNodeTextField</srcNode>
<endNode>freemind.modes.MindMapNode</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.EditNodeTextField</srcNode>
<endNode>freemind.modes.ModeController</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.EditNodeTextField</srcNode>
<endNode>freemind.view.mindmapview.EditNodeBase</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.EditNodeTextField</srcNode>
<endNode>freemind.view.mindmapview.EditNodeBase.EditControl</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.EditNodeTextField</srcNode>
<endNode>freemind.view.mindmapview.EditNodeTextField.TextFieldListener</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.EditNodeTextField</srcNode>
<endNode>freemind.view.mindmapview.MainView</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.EditNodeTextField</srcNode>
<endNode>freemind.view.mindmapview.MapView</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.EditNodeTextField</srcNode>
<endNode>freemind.view.mindmapview.NodeView</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.EditNodeTextField.show.(Anon_1)</srcNode>
<endNode>freemind.view.mindmapview.EditNodeTextField</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.EditNodeTextField.show.(Anon_2)</srcNode>
<endNode>freemind.view.mindmapview.EditNodeTextField</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.EditNodeTextField.show.(Anon_3)</srcNode>
<endNode>freemind.view.mindmapview.EditNodeTextField</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.EditNodeTextField.TextFieldListener</srcNode>
<endNode>freemind.main.FreeMindCommon</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.EditNodeTextField.TextFieldListener</srcNode>
<endNode>freemind.main.Resources</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.EditNodeTextField.TextFieldListener</srcNode>
<endNode>freemind.main.Tools.IntHolder</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.EditNodeTextField.TextFieldListener</srcNode>
<endNode>freemind.view.mindmapview.EditNodeBase</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.EditNodeTextField.TextFieldListener</srcNode>
<endNode>freemind.view.mindmapview.EditNodeBase.EditControl</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.EditNodeTextField.TextFieldListener</srcNode>
<endNode>freemind.view.mindmapview.EditNodeBase.EditPopupMenu</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.EditNodeTextField.TextFieldListener</srcNode>
<endNode>freemind.view.mindmapview.EditNodeTextField</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.EditNodeWYSIWYG</srcNode>
<endNode>freemind.main.FreeMindMain</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.EditNodeWYSIWYG</srcNode>
<endNode>freemind.main.HtmlTools</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.EditNodeWYSIWYG</srcNode>
<endNode>freemind.main.Resources</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.EditNodeWYSIWYG</srcNode>
<endNode>freemind.main.Tools</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.EditNodeWYSIWYG</srcNode>
<endNode>freemind.modes.MindMap</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.EditNodeWYSIWYG</srcNode>
<endNode>freemind.modes.MindMapNode</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.EditNodeWYSIWYG</srcNode>
<endNode>freemind.modes.ModeController</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.EditNodeWYSIWYG</srcNode>
<endNode>freemind.view.mindmapview.EditNodeBase</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.EditNodeWYSIWYG</srcNode>
<endNode>freemind.view.mindmapview.EditNodeBase.EditControl</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.EditNodeWYSIWYG</srcNode>
<endNode>freemind.view.mindmapview.EditNodeBase.EditDialog</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.EditNodeWYSIWYG</srcNode>
<endNode>freemind.view.mindmapview.EditNodeWYSIWYG.HTMLDialog</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.EditNodeWYSIWYG</srcNode>
<endNode>freemind.view.mindmapview.MainView</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.EditNodeWYSIWYG</srcNode>
<endNode>freemind.view.mindmapview.MapView</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.EditNodeWYSIWYG</srcNode>
<endNode>freemind.view.mindmapview.NodeView</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.EditNodeWYSIWYG.HTMLDialog</srcNode>
<endNode>freemind.main.HtmlTools</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.EditNodeWYSIWYG.HTMLDialog</srcNode>
<endNode>freemind.main.Tools</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.EditNodeWYSIWYG.HTMLDialog</srcNode>
<endNode>freemind.view.mindmapview.EditNodeBase</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.EditNodeWYSIWYG.HTMLDialog</srcNode>
<endNode>freemind.view.mindmapview.EditNodeBase.EditControl</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.EditNodeWYSIWYG.HTMLDialog</srcNode>
<endNode>freemind.view.mindmapview.EditNodeBase.EditDialog</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.EditNodeWYSIWYG.HTMLDialog</srcNode>
<endNode>freemind.view.mindmapview.EditNodeBase.EditDialog.CancelAction</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.EditNodeWYSIWYG.HTMLDialog</srcNode>
<endNode>freemind.view.mindmapview.EditNodeBase.EditDialog.SubmitAction</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.EditNodeWYSIWYG.HTMLDialog.HTMLDialog.(Anon_1)</srcNode>
<endNode>freemind.view.mindmapview.EditNodeWYSIWYG.HTMLDialog</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.EditNodeWYSIWYG.HTMLDialog.HTMLDialog.(Anon_2)</srcNode>
<endNode>freemind.view.mindmapview.EditNodeWYSIWYG.HTMLDialog</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.EditNodeWYSIWYG.HTMLDialog.HTMLDialog.(Anon_3)</srcNode>
<endNode>freemind.view.mindmapview.EditNodeWYSIWYG.HTMLDialog</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.EditNodeWYSIWYG.HTMLDialog.HTMLDialog.(Anon_4)</srcNode>
<endNode>freemind.controller.Controller</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.EditNodeWYSIWYG.HTMLDialog.HTMLDialog.(Anon_4)</srcNode>
<endNode>freemind.main.FreeMindMain</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.EditNodeWYSIWYG.HTMLDialog.HTMLDialog.(Anon_4)</srcNode>
<endNode>freemind.main.Resources</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.EditNodeWYSIWYG.HTMLDialog.HTMLDialog.(Anon_4)</srcNode>
<endNode>freemind.view.mindmapview.EditNodeBase</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.EditNodeWYSIWYG.HTMLDialog.HTMLDialog.(Anon_4)</srcNode>
<endNode>freemind.view.mindmapview.EditNodeBase.EditDialog</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.ForkMainView</srcNode>
<endNode>freemind.controller.Controller</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.ForkMainView</srcNode>
<endNode>freemind.main.Tools</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.ForkMainView</srcNode>
<endNode>freemind.modes.EdgeAdapter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.ForkMainView</srcNode>
<endNode>freemind.modes.MindMapEdge</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.ForkMainView</srcNode>
<endNode>freemind.modes.MindMapLine</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.ForkMainView</srcNode>
<endNode>freemind.modes.MindMapNode</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.ForkMainView</srcNode>
<endNode>freemind.view.mindmapview.MainView</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.ForkMainView</srcNode>
<endNode>freemind.view.mindmapview.NodeView</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.IndependantMapViewCreator</srcNode>
<endNode>freemind.controller.Controller</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.IndependantMapViewCreator</srcNode>
<endNode>freemind.main.FreeMindMain</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.IndependantMapViewCreator</srcNode>
<endNode>freemind.main.Tools</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.IndependantMapViewCreator</srcNode>
<endNode>freemind.modes.ControllerAdapter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.IndependantMapViewCreator</srcNode>
<endNode>freemind.modes.mindmapmode.MindMapController</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.IndependantMapViewCreator</srcNode>
<endNode>freemind.modes.mindmapmode.MindMapMapModel</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.IndependantMapViewCreator</srcNode>
<endNode>freemind.modes.mindmapmode.MindMapMode</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.IndependantMapViewCreator</srcNode>
<endNode>freemind.view.mindmapview.MapView</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.IndependantMapViewCreator</srcNode>
<endNode>freemind.view.mindmapview.NodeView</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.IndependantMapViewCreator.createMapView.(Anon_3)</srcNode>
<endNode>freemind.view.mindmapview.MapView</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.IndependantMapViewCreator.createMapView.(Anon_3)</srcNode>
<endNode>freemind.view.mindmapview.NodeView</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.IndependantMapViewCreator.createMapViewForFile.(Anon_1)</srcNode>
<endNode>freemind.modes.mindmapmode.MindMapMode</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.IndependantMapViewCreator.createMapViewForFile.(Anon_1)</srcNode>
<endNode>freemind.modes.ModeController</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.IndependantMapViewCreator.createMapViewForFile.(Anon_1).createModeController.(Anon_2)</srcNode>
<endNode>freemind.modes.mindmapmode.MindMapController</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.LeftNodeViewLayout</srcNode>
<endNode>freemind.main.Tools</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.LeftNodeViewLayout</srcNode>
<endNode>freemind.view.mindmapview.MainView</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.LeftNodeViewLayout</srcNode>
<endNode>freemind.view.mindmapview.NodeMotionListenerView</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.LeftNodeViewLayout</srcNode>
<endNode>freemind.view.mindmapview.NodeView</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.LeftNodeViewLayout</srcNode>
<endNode>freemind.view.mindmapview.NodeViewLayoutAdapter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.LinearEdgeView</srcNode>
<endNode>freemind.modes.MindMapLine</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.LinearEdgeView</srcNode>
<endNode>freemind.view.mindmapview.EdgeView</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.LinearEdgeView</srcNode>
<endNode>freemind.view.mindmapview.NodeView</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.MainView</srcNode>
<endNode>freemind.controller.Controller</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.MainView</srcNode>
<endNode>freemind.controller.MenuBar</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.MainView</srcNode>
<endNode>freemind.main.FreeMindMain</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.MainView</srcNode>
<endNode>freemind.main.HtmlTools</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.MainView</srcNode>
<endNode>freemind.main.Resources</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.MainView</srcNode>
<endNode>freemind.main.Tools</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.MainView</srcNode>
<endNode>freemind.modes.MindMapNode</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.MainView</srcNode>
<endNode>freemind.view.mindmapview.MapView</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.MainView</srcNode>
<endNode>freemind.view.mindmapview.NodeView</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.MapView</srcNode>
<endNode>freemind.controller.Controller</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.MapView</srcNode>
<endNode>freemind.controller.NodeKeyListener</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.MapView</srcNode>
<endNode>freemind.controller.NodeMotionListener</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.MapView</srcNode>
<endNode>freemind.controller.NodeMouseMotionListener</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.MapView</srcNode>
<endNode>freemind.main.FreeMind</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.MapView</srcNode>
<endNode>freemind.main.FreeMindMain</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.MapView</srcNode>
<endNode>freemind.main.Resources</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.MapView</srcNode>
<endNode>freemind.main.Tools</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.MapView</srcNode>
<endNode>freemind.main.Tools.Pair</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.MapView</srcNode>
<endNode>freemind.modes.MindMap</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.MapView</srcNode>
<endNode>freemind.modes.MindMapArrowLink</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.MapView</srcNode>
<endNode>freemind.modes.MindMapLink</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.MapView</srcNode>
<endNode>freemind.modes.MindMapLinkRegistry</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.MapView</srcNode>
<endNode>freemind.modes.MindMapNode</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.MapView</srcNode>
<endNode>freemind.modes.ModeController</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.MapView</srcNode>
<endNode>freemind.preferences.FreemindPropertyListener</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.MapView</srcNode>
<endNode>freemind.view.mindmapview.ArrowLinkView</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.MapView</srcNode>
<endNode>freemind.view.mindmapview.MapView.CheckLaterForCenterNodeTask</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.MapView</srcNode>
<endNode>freemind.view.mindmapview.MapView.ResizeListener</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.MapView</srcNode>
<endNode>freemind.view.mindmapview.MapView.Selected</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.MapView</srcNode>
<endNode>freemind.view.mindmapview.MindMapLayout</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.MapView</srcNode>
<endNode>freemind.view.mindmapview.NodeView</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.MapView</srcNode>
<endNode>freemind.view.mindmapview.NodeViewFactory</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.MapView</srcNode>
<endNode>freemind.view.mindmapview.PathBBox</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.MapView.CheckLaterForCenterNodeTask</srcNode>
<endNode>freemind.view.mindmapview.MapView</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.MapView.CheckLaterForCenterNodeTask</srcNode>
<endNode>freemind.view.mindmapview.NodeView</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.MapView.createPropertyChangeListener.(Anon_2)</srcNode>
<endNode>freemind.controller.Controller</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.MapView.createPropertyChangeListener.(Anon_2)</srcNode>
<endNode>freemind.main.FreeMind</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.MapView.createPropertyChangeListener.(Anon_2)</srcNode>
<endNode>freemind.main.Tools</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.MapView.createPropertyChangeListener.(Anon_2)</srcNode>
<endNode>freemind.preferences.FreemindPropertyListener</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.MapView.createPropertyChangeListener.(Anon_2)</srcNode>
<endNode>freemind.view.MapModule</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.MapView.createPropertyChangeListener.(Anon_2)</srcNode>
<endNode>freemind.view.mindmapview.MapView</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.MapView.createPropertyChangeListener.(Anon_2)</srcNode>
<endNode>freemind.view.mindmapview.NodeView</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.MapView.getSelectedNodesSortedByY.(Anon_3)</srcNode>
<endNode>freemind.main.Tools.Pair</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.MapView.MapView.(Anon_1)</srcNode>
<endNode>freemind.view.mindmapview.MapView</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.MapView.ResizeListener</srcNode>
<endNode>freemind.view.mindmapview.MapView</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.MapView.Selected</srcNode>
<endNode>freemind.modes.MindMap</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.MapView.Selected</srcNode>
<endNode>freemind.modes.ModeController</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.MapView.Selected</srcNode>
<endNode>freemind.view.mindmapview.MapView</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.MapView.Selected</srcNode>
<endNode>freemind.view.mindmapview.NodeView</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.MindMapLayout</srcNode>
<endNode>freemind.main.Resources</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.MindMapLayout</srcNode>
<endNode>freemind.view.mindmapview.MapView</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.MindMapLayout</srcNode>
<endNode>freemind.view.mindmapview.NodeView</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.NodeFoldingComponent</srcNode>
<endNode>freemind.main.FreeMind</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.NodeFoldingComponent</srcNode>
<endNode>freemind.main.Resources</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.NodeFoldingComponent</srcNode>
<endNode>freemind.modes.MindMapNode</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.NodeFoldingComponent</srcNode>
<endNode>freemind.view.mindmapview.NodeFoldingComponent.RoundImageButtonUI</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.NodeFoldingComponent</srcNode>
<endNode>freemind.view.mindmapview.NodeView</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.NodeFoldingComponent.NodeFoldingComponent.(Anon_1)</srcNode>
<endNode>freemind.view.mindmapview.NodeFoldingComponent</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.NodeFoldingComponent.NodeFoldingComponent.(Anon_2)</srcNode>
<endNode>freemind.view.mindmapview.NodeFoldingComponent</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.NodeFoldingComponent.RoundImageButtonUI</srcNode>
<endNode>freemind.controller.Controller</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.NodeFoldingComponent.RoundImageButtonUI</srcNode>
<endNode>freemind.main.Tools</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.NodeFoldingComponent.RoundImageButtonUI</srcNode>
<endNode>freemind.modes.MindMapLine</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.NodeFoldingComponent.RoundImageButtonUI</srcNode>
<endNode>freemind.modes.MindMapNode</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.NodeFoldingComponent.RoundImageButtonUI</srcNode>
<endNode>freemind.view.mindmapview.BubbleMainView</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.NodeFoldingComponent.RoundImageButtonUI</srcNode>
<endNode>freemind.view.mindmapview.NodeFoldingComponent</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.NodeFoldingComponent.RoundImageButtonUI</srcNode>
<endNode>freemind.view.mindmapview.NodeView</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.NodeFoldingComponent.RoundImageButtonUI.installListeners.(Anon_3)</srcNode>
<endNode>freemind.view.mindmapview.NodeFoldingComponent.RoundImageButtonUI</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.NodeMotionListenerView</srcNode>
<endNode>freemind.controller.Controller</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.NodeMotionListenerView</srcNode>
<endNode>freemind.main.Resources</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.NodeMotionListenerView</srcNode>
<endNode>freemind.main.Tools</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.NodeMotionListenerView</srcNode>
<endNode>freemind.modes.MindMapNode</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.NodeMotionListenerView</srcNode>
<endNode>freemind.view.mindmapview.MapView</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.NodeMotionListenerView</srcNode>
<endNode>freemind.view.mindmapview.NodeView</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.NodeView</srcNode>
<endNode>freemind.controller.Controller</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.NodeView</srcNode>
<endNode>freemind.main.FreeMindMain</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.NodeView</srcNode>
<endNode>freemind.main.HtmlTools</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.NodeView</srcNode>
<endNode>freemind.main.Resources</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.NodeView</srcNode>
<endNode>freemind.main.Tools</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.NodeView</srcNode>
<endNode>freemind.modes.attributes.NodeAttributeTableModel</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.NodeView</srcNode>
<endNode>freemind.modes.MindIcon</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.NodeView</srcNode>
<endNode>freemind.modes.MindMap</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.NodeView</srcNode>
<endNode>freemind.modes.MindMapCloud</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.NodeView</srcNode>
<endNode>freemind.modes.MindMapLine</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.NodeView</srcNode>
<endNode>freemind.modes.MindMapNode</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.NodeView</srcNode>
<endNode>freemind.modes.ModeController</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.NodeView</srcNode>
<endNode>freemind.modes.NodeAdapter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.NodeView</srcNode>
<endNode>freemind.preferences.FreemindPropertyListener</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.NodeView</srcNode>
<endNode>freemind.view.mindmapview.attributeview.AttributeView</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.NodeView</srcNode>
<endNode>freemind.view.mindmapview.BubbleMainView</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.NodeView</srcNode>
<endNode>freemind.view.mindmapview.CloudView</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.NodeView</srcNode>
<endNode>freemind.view.mindmapview.EdgeView</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.NodeView</srcNode>
<endNode>freemind.view.mindmapview.MainView</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.NodeView</srcNode>
<endNode>freemind.view.mindmapview.MapView</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.NodeView</srcNode>
<endNode>freemind.view.mindmapview.MultipleImage</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.NodeView</srcNode>
<endNode>freemind.view.mindmapview.NodeFoldingComponent</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.NodeView</srcNode>
<endNode>freemind.view.mindmapview.NodeMotionListenerView</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.NodeView</srcNode>
<endNode>freemind.view.mindmapview.NodeViewFactory</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.NodeView</srcNode>
<endNode>freemind.view.mindmapview.NodeViewLayout</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.NodeView.addFoldingListener.(Anon_2)</srcNode>
<endNode>freemind.modes.MindMapNode</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.NodeView.addFoldingListener.(Anon_2)</srcNode>
<endNode>freemind.modes.ModeController</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.NodeView.addFoldingListener.(Anon_2)</srcNode>
<endNode>freemind.view.mindmapview.NodeView</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.NodeView.NodeView.(Anon_1)</srcNode>
<endNode>freemind.main.FreeMind</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.NodeView.NodeView.(Anon_1)</srcNode>
<endNode>freemind.main.Resources</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.NodeView.NodeView.(Anon_1)</srcNode>
<endNode>freemind.main.Tools</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.NodeView.NodeView.(Anon_1)</srcNode>
<endNode>freemind.preferences.FreemindPropertyListener</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.NodeViewFactory</srcNode>
<endNode>freemind.modes.EdgeAdapter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.NodeViewFactory</srcNode>
<endNode>freemind.modes.MindMap</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.NodeViewFactory</srcNode>
<endNode>freemind.modes.MindMapEdge</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.NodeViewFactory</srcNode>
<endNode>freemind.modes.MindMapNode</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.NodeViewFactory</srcNode>
<endNode>freemind.modes.ModeController</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.NodeViewFactory</srcNode>
<endNode>freemind.view.mindmapview.BezierEdgeView</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.NodeViewFactory</srcNode>
<endNode>freemind.view.mindmapview.BubbleMainView</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.NodeViewFactory</srcNode>
<endNode>freemind.view.mindmapview.EdgeView</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.NodeViewFactory</srcNode>
<endNode>freemind.view.mindmapview.ForkMainView</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.NodeViewFactory</srcNode>
<endNode>freemind.view.mindmapview.LeftNodeViewLayout</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.NodeViewFactory</srcNode>
<endNode>freemind.view.mindmapview.LinearEdgeView</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.NodeViewFactory</srcNode>
<endNode>freemind.view.mindmapview.MainView</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.NodeViewFactory</srcNode>
<endNode>freemind.view.mindmapview.MapView</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.NodeViewFactory</srcNode>
<endNode>freemind.view.mindmapview.NodeView</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.NodeViewFactory</srcNode>
<endNode>freemind.view.mindmapview.NodeViewFactory.ContentPane</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.NodeViewFactory</srcNode>
<endNode>freemind.view.mindmapview.RightNodeViewLayout</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.NodeViewFactory</srcNode>
<endNode>freemind.view.mindmapview.RootMainView</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.NodeViewFactory</srcNode>
<endNode>freemind.view.mindmapview.SharpBezierEdgeView</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.NodeViewFactory</srcNode>
<endNode>freemind.view.mindmapview.SharpLinearEdgeView</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.NodeViewFactory</srcNode>
<endNode>freemind.view.mindmapview.VerticalRootNodeViewLayout</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.NodeViewFactory.ContentPane</srcNode>
<endNode>freemind.view.mindmapview.NodeViewFactory.ContentPaneLayout</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.NodeViewFactory.ContentPaneLayout</srcNode>
<endNode>freemind.view.mindmapview.MainView</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.NodeViewLayout</srcNode>
<endNode>freemind.view.mindmapview.NodeFoldingComponent</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.NodeViewLayout</srcNode>
<endNode>freemind.view.mindmapview.NodeMotionListenerView</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.NodeViewLayout</srcNode>
<endNode>freemind.view.mindmapview.NodeView</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.NodeViewLayoutAdapter</srcNode>
<endNode>freemind.main.Resources</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.NodeViewLayoutAdapter</srcNode>
<endNode>freemind.main.Tools</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.NodeViewLayoutAdapter</srcNode>
<endNode>freemind.modes.MindMapNode</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.NodeViewLayoutAdapter</srcNode>
<endNode>freemind.view.mindmapview.MapView</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.NodeViewLayoutAdapter</srcNode>
<endNode>freemind.view.mindmapview.NodeFoldingComponent</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.NodeViewLayoutAdapter</srcNode>
<endNode>freemind.view.mindmapview.NodeMotionListenerView</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.NodeViewLayoutAdapter</srcNode>
<endNode>freemind.view.mindmapview.NodeView</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.NodeViewLayoutAdapter</srcNode>
<endNode>freemind.view.mindmapview.NodeViewLayout</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.NodeViewVisitor</srcNode>
<endNode>freemind.view.mindmapview.NodeView</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.RightNodeViewLayout</srcNode>
<endNode>freemind.main.Tools</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.RightNodeViewLayout</srcNode>
<endNode>freemind.view.mindmapview.MainView</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.RightNodeViewLayout</srcNode>
<endNode>freemind.view.mindmapview.NodeMotionListenerView</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.RightNodeViewLayout</srcNode>
<endNode>freemind.view.mindmapview.NodeView</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.RightNodeViewLayout</srcNode>
<endNode>freemind.view.mindmapview.NodeViewLayoutAdapter</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.RootMainView</srcNode>
<endNode>freemind.controller.Controller</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.RootMainView</srcNode>
<endNode>freemind.main.FreeMind</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.RootMainView</srcNode>
<endNode>freemind.main.Resources</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.RootMainView</srcNode>
<endNode>freemind.main.Tools</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.RootMainView</srcNode>
<endNode>freemind.view.mindmapview.MainView</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.RootMainView</srcNode>
<endNode>freemind.view.mindmapview.NodeView</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.SharpBezierEdgeView</srcNode>
<endNode>freemind.main.Tools</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.SharpBezierEdgeView</srcNode>
<endNode>freemind.modes.MindMapLine</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.SharpBezierEdgeView</srcNode>
<endNode>freemind.view.mindmapview.EdgeView</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.SharpBezierEdgeView</srcNode>
<endNode>freemind.view.mindmapview.MainView</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.SharpBezierEdgeView</srcNode>
<endNode>freemind.view.mindmapview.MapView</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.SharpBezierEdgeView</srcNode>
<endNode>freemind.view.mindmapview.NodeView</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.SharpLinearEdgeView</srcNode>
<endNode>freemind.modes.MindMapLine</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.SharpLinearEdgeView</srcNode>
<endNode>freemind.view.mindmapview.EdgeView</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.SharpLinearEdgeView</srcNode>
<endNode>freemind.view.mindmapview.MapView</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.VerticalRootNodeViewLayout</srcNode>
<endNode>freemind.main.Resources</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.VerticalRootNodeViewLayout</srcNode>
<endNode>freemind.main.Tools</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.VerticalRootNodeViewLayout</srcNode>
<endNode>freemind.view.mindmapview.MainView</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.VerticalRootNodeViewLayout</srcNode>
<endNode>freemind.view.mindmapview.NodeMotionListenerView</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.VerticalRootNodeViewLayout</srcNode>
<endNode>freemind.view.mindmapview.NodeView</endNode>
</edge>
<edge>
<arcType>depends</arcType>
<srcNode>freemind.view.mindmapview.VerticalRootNodeViewLayout</srcNode>
<endNode>freemind.view.mindmapview.NodeViewLayoutAdapter</endNode>
</edge>
</FunctionDepGraph>
